<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>migration on 点滴随记</title>
        <link>https://jimway71.github.io/categories/migration/</link>
        <description>Recent content in migration on 点滴随记</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 09 Apr 2021 08:54:16 +0800</lastBuildDate><atom:link href="https://jimway71.github.io/categories/migration/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Armbian on TV box</title>
        <link>https://jimway71.github.io/p/armbian-on-tv-box/</link>
        <pubDate>Fri, 09 Apr 2021 08:54:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/armbian-on-tv-box/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-35.png" alt="Featured image of post Armbian on TV box" /&gt;&lt;h2 id=&#34;参考&#34;&gt;参考:&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://forum.armbian.com/profile/1215-balbes150/&#34;  title=&#34;balbes150-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;balbes150&lt;/a&gt;活跃于&lt;a class=&#34;link&#34; href=&#34;https://forum.armbian.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Armbian官方(?)论坛&lt;/a&gt;, 他提供了支持部分非原厂支持设备的Armbian包, 如支持包括大部分S905系列芯片的Armbian image:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://forum.armbian.com/topic/12162-single-armbian-image-for-rk-aml-aw-aarch64-armv8/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Single Armbian image for RK + AML + AW (aarch64 ARMv8) By balbes150&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些安装说明:&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://forum.armbian.com/topic/17106-installation-instructions-for-tv-boxes-with-amlogic-cpus&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Installation Instructions for TV Boxes with Amlogic CPUs&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.ondroid.net/armbian-os-uenv-ini-and-extlinux-conf/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Armbian OS – uEnv.ini and extlinux.conf&lt;/a&gt; (2020更新后版本, 改用extlinux.conf+uboot.ext)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://forum.armbian.com/topic/10685-installation-guide-and-your-questions-answered-for-tv-boxes/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Installation Guide and your questions answered for TV Boxes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://ethanblog.com/tips/install-latest-armbian-in-n1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;N1 盒子安装使用最新 Armbian 的记录&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/jonnyan/p/12660037.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;N1如何完美刷入armbian系统教程&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/milton/p/11883811.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;R3300L运行CoreELEC, EmuELEC和Armbian&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;armbian配置工具armbian-config&#34;&gt;Armbian配置工具armbian-config&lt;/h2&gt;
&lt;p&gt;Armbian系统提供armbian-config工具, 功能很丰富, 多数设置可以在这里完成&lt;/p&gt;
&lt;h2 id=&#34;操作&#34;&gt;操作&lt;/h2&gt;
&lt;h3 id=&#34;调整tf卡上ext4分区空间&#34;&gt;调整TF卡上Ext4分区空间&lt;/h3&gt;
&lt;p&gt;Armbian安装到TF卡上后, 有两个分区, 128M*1 + 1.2G*1.&lt;br&gt;
第一次用这张TF卡启动时, 系统会自动扩展TF卡的第二个分区, 并会占满整张TF卡的剩余空间&lt;/p&gt;
&lt;p&gt;实际使用中, 希望能留一块独立的空间(分区), 这块空间windows能读写(考虑exfat格式), 即使Armbian系统坏了, 数据还能很方便的读取出来.&lt;/p&gt;
&lt;p&gt;测试方法① (在Armbian安装到TF卡上后)先占一块空间给exfat分区.&lt;br&gt;
操作:&lt;br&gt;
在TF卡的最后面分一块exfat分区, 希望第一次启动扩展分区时, 这个exfat分区不会受到影响.&lt;br&gt;
实际测试中, 发现分了这块exfat分区后, 第一次用这张TF卡启动时, 系统无法完成自动扩展分区.&lt;br&gt;
删除exfat分区后, 系统才自动完成扩展, 并且占满整个TF卡空间.&lt;br&gt;
方法①经测试, 确认失败。&lt;/p&gt;
&lt;p&gt;测试方法② &lt;strong&gt;无损调整EXT4分区大小&lt;/strong&gt;&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://blog.pinkd.moe/linux/2018/01/31/resize-a-ext4-partiton-safely&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;无损调整EXT4分区大小&lt;/a&gt;&lt;br&gt;
操作:&lt;br&gt;
先等系统用这张TF卡第一次启动, 并自动完成分区扩展;&lt;br&gt;
关机, 取出TF卡, 插到另一个linux(ubuntu类最好)机器上, 用该linux原系统启动, TF卡不做为启动盘(不需要始终是mount的状态);&lt;br&gt;
按下列命令操作:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 看分区  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# lsblk  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 检查需要调整的分区  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# e2fsck -f /dev/sda2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 调整分区文件系统到5G.  注意: 需要配合下一步才能生效 _ 这里应该只是把用到的空间都挪到前面5G的空间去了, 但没有实际调整分区大小  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# resize2fs /dev/sda2 5G  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 进fdisk, 先删除sda2, 再重建5G大小的sda2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# fdisk /dev/sda  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 删除原sda2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): d  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command):  2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 新建5G大小的sda2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): n                        # 新建  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): 2                        # 第2分区  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): Sectors位置, sda1 End+1  # 起始sectors位置  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): +5G                      # 大小, 或结果secotrs位置: 这里写的是大小, 以+开始, +后面是要划分的空间大小(5G)  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): n                        # 发现ext4签名, 是否删除: N 不删除  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 顺便把exfat分区也建上...  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): w                        # 写盘退出  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 再检查一下，没有错误就说明没问题了  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# e2fsck -f /dev/sda1  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;结果: &lt;u&gt;成功&lt;/u&gt;&lt;br&gt;
先在windows上格式化了exfat分区, 确认读写都没有问题.&lt;br&gt;
然后用这张卡启动linux正常, 用fdisk查看分区也正常.&lt;br&gt;
&lt;strong&gt;确认使用无损调整EXT4分区大小的方法修改Armbian启动TF卡分区成功&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;armbian上安装docker&#34;&gt;Armbian上安装Docker&lt;/h3&gt;
&lt;p&gt;参考官网安装说明: &lt;a class=&#34;link&#34; href=&#34;https://docs.docker.com/get-docker/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Get Docker&lt;/a&gt;&lt;br&gt;
一般用官方的shell安装.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Wordpress Q&amp;A</title>
        <link>https://jimway71.github.io/p/wordpress-qa/</link>
        <pubDate>Thu, 08 Apr 2021 21:42:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/wordpress-qa/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-34.jpg" alt="Featured image of post Wordpress Q&amp;A" /&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;WordPress英文半角符号自动变成中文全角的解决方法&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://www.hello2099.com/1545.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WordPress英文半角符号变成中文全角的解决方法&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;问题分析:&lt;br&gt;
查找原因，原来是默认情况下，WordPress会调用函数wptexturize来执行转换。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解决方法:&lt;br&gt;
在主题目录下的functions.php文件中添加如下代码即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;//WordPress英文半角符号变成中文全角的解决方法&lt;br&gt;
remove_filter(‘the_title’, ‘wptexturize’);&lt;br&gt;
remove_filter(‘the_excerpt’, ‘wptexturize’);&lt;br&gt;
remove_filter(‘the_content’, ‘wptexturize’);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是最简单的方法，推荐。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，还有一种方法是更改wp-includes目录里面的formatting.php代码，但是这样每次WordPress更新版本的时候都要去修改代码，不建议。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Docker容器无法访问网络</title>
        <link>https://jimway71.github.io/p/docker%E5%AE%B9%E5%99%A8%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%BD%91%E7%BB%9C/</link>
        <pubDate>Thu, 08 Apr 2021 01:17:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/docker%E5%AE%B9%E5%99%A8%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%BD%91%E7%BB%9C/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-33.jpg" alt="Featured image of post Docker容器无法访问网络" /&gt;&lt;h2 id=&#34;关于docker的网络模式&#34;&gt;关于Docker的网络模式&lt;/h2&gt;
&lt;p&gt;参考 &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/huanongying123/article/details/73556634&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker的四种网络模式&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;现象&#34;&gt;现象&lt;/h2&gt;
&lt;p&gt;① 最初始现象是发现在docker容器中(的系统里)使用apt-get更新(update)时失败, 由于容器里没有ping等一系列工具软件, 无法确认问题具体情况。&lt;br&gt;
② 接着就找image里有ping的包, 用docker search发现pentest-tools里有, 但pull下来后发现运行错误, 报错信息如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;standard_init_linux.go:211: exec user process caused &amp;ldquo;exec format error&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查了下, 有人说是因为不兼容引起的错误:&lt;br&gt;
→ &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/HermitSun/article/details/109145856&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;docker运行容器报错standard_init_linux.go:211: exec user process caused “exec format error“的可能解决办法&lt;/a&gt;&lt;br&gt;
③ 在查找中突然发现有说centos的image里有ping, 想着操作系统可能都会有整套网络工具软件, 就找了个ubutu的包pull下来, 结果里面还是没有.&lt;br&gt;
虽然centos不熟, 都是linux应该也差不太多, 回头就pull了centos.&lt;br&gt;
用docker运行并进入到容器里&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#  docker run -it centos /bin/bash  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[root@a688b8f2101e /]# ping 192.168.1.1  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PING 192.168.1.1 (192.168.1.1) 56(84) bytes of data.  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;^C  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--- 192.168.1.1 ping statistics ---  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2 packets transmitted, 0 received, 100% packet loss, time 26ms  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[root@a688b8f2101e /]# ping 192.168.1.7  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PING 192.168.1.7 (192.168.1.7) 56(84) bytes of data.  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;64 bytes from 192.168.1.7: icmp_seq=1 ttl=64 time=0.361 ms  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[root@a688b8f2101e /]# ping www.sina.com  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PING spool.grid.sinaedge.com (123.126.55.41) 56(84) bytes of data.  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;^C  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--- spool.grid.sinaedge.com ping statistics ---  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3 packets transmitted, 0 received, 100% packet loss, time 27ms  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;现象是除了本宿主机的IP(192.168.1.7), 其它地址都不能ping通&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[root@a688b8f2101e /]# tracepath www.sina.com  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 1?: [LOCALHOST]                      pmtu 1500  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 1:  119.167.237.233                                       2.100ms reached  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 1:  119.167.237.233                                       0.436ms reached  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     Resume: pmtu 1500 hops 1 back 1   
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;用tracepath跟踪路由也看不出什么&lt;br&gt;
测试的结果是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;除了本宿主机地址外, 其它地址都不能ping通&lt;/li&gt;
&lt;li&gt;虽然ping不通, 但是dns解析还是可以的.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;④ 怀疑是宿主机的防火墙挡住了, 把防火墙关了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# /etc/init.d/firewall stop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再进入容器测试, 发现依然ping不通其它设备网址, 而且dns解析也不行了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[root@88a5cfa727dc /]# ping &lt;a class=&#34;link&#34; href=&#34;https://www.sina.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.sina.com&lt;/a&gt;&lt;br&gt;
ping: &lt;a class=&#34;link&#34; href=&#34;https://www.sina.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.sina.com&lt;/a&gt;: Name or service not known&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这只能说明, 宿主机的防火墙至少还帮着把DNS解析的包给双向转发了.&lt;br&gt;
问题不是要不要开防火墙, 而是防火墙必须得开, 但是防火墙的规则写的少了点东西.&lt;/p&gt;
&lt;h2 id=&#34;要不要处理&#34;&gt;要不要处理&lt;/h2&gt;
&lt;p&gt;本来如果凑合对付着用也行, 但看了下素版的wordpress好象东西还是有点少, 据说很多插件都需要从网上下载, 没法忍, 必须得处理这个问题.&lt;/p&gt;
&lt;h2 id=&#34;怎么处理&#34;&gt;怎么处理:&lt;/h2&gt;
&lt;p&gt;iptables我也不熟, 要不先来个简单的思路?&lt;br&gt;
① docker网络改用host模式&lt;br&gt;
Host模式说明： &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/huanongying123/article/details/73556634&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker的四种网络模式&lt;/a&gt;&lt;br&gt;
如果启动容器的时候使用host模式，那么这个容器将不会获得一个独立的Network Namespace，而是和宿主机共用一个Network Namespace。容器将不会虚拟出自己的网卡，配置自己的IP等，而是使用宿主机的IP和端口.&lt;br&gt;
这样就不会有包转发的问题了.&lt;br&gt;
在docker启动时, Host模式需要使用&amp;quot;&amp;ndash;network=host&amp;quot;参数.&lt;br&gt;
测试Host模式:&lt;br&gt;
还是用centos的包来做测试&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker run --network=host -it centos /bin/bash  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[root@Q7Op /]# ping www.sina.com  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PING ww1.sinaimg.cn.w.alikunlun.com (119.167.237.230) 56(84) bytes of data.  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;64 bytes from 119.167.237.230 (119.167.237.230): icmp_seq=1 ttl=55 time=15.4 ms  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;64 bytes from 119.167.237.230 (119.167.237.230): icmp_seq=2 ttl=55 time=15.4 ms  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;64 bytes from 119.167.237.230 (119.167.237.230): icmp_seq=3 ttl=55 time=15.4 ms  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;64 bytes from 119.167.237.230 (119.167.237.230): icmp_seq=4 ttl=55 time=15.3 ms  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;^C  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--- ww1.sinaimg.cn.w.alikunlun.com ping statistics ---  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4 packets transmitted, 4 received, 0% packet loss, time 8ms  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rtt min/avg/max/mdev = 15.308/15.348/15.363/0.023 ms  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;网络就可以正常访问了.&lt;br&gt;
把现有的容器改成host模式:&lt;br&gt;
docker启动容器时, 如果不设置network模式, 容器就会以bridge模式运行.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在portainer.io(web管理)界面里, 试着把已经运行的bridge模式的容器改为host模式, 好像不行, 再试一下, 一样的报错:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;failure  container sharing cannot be connected to any other network&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即使暂停或停止容器, 也是报一样的错误.&lt;br&gt;
看来不可能简单的用管理界面搞定这个事.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网上有篇文章可能跟这有关: &lt;a class=&#34;link&#34; href=&#34;https://blog.51cto.com/jacksoner/2051041&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker网络管理-网络模式&lt;/a&gt;&lt;br&gt;
文章有点复杂,没看懂&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在portainer.io(web管理)界面里, 想用复制容器的方式, 在复制时, 修改网络为host模式.&lt;br&gt;
但是, 复制的容器就一直有问题, 试图连接时报错:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker exec -it WordPressHostNet /bin/bash&lt;br&gt;
Error response from daemon: Container 0dd20f7ed6587ba9900acbef9f7da926974c49bebc0fa076d19cbae573c5116c is restarting, wait until the container is running&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说是始终在重启状态&lt;br&gt;
web端口也连不上, 原因不清楚.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/lei0213/p/12631681.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker第五篇（docker网络管理）&lt;/a&gt;&lt;br&gt;
两个方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;docker update &amp;ndash;network=host ……&lt;/li&gt;
&lt;li&gt;设置网桥，连接不同网段&lt;br&gt;
或者，docker有nat桥？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://segmentfault.com/a/1190000019701533&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker 容器内无法通过 HTTP 访问外网&lt;/a&gt;&lt;br&gt;
和当前现象相似&lt;br&gt;
测试:&lt;br&gt;
① 参考 &lt;a class=&#34;link&#34; href=&#34;https://segmentfault.com/a/1190000019701533&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker 容器内无法通过 HTTP 访问外网&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# service dockerd stop  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# killall dockerd  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 检查点: 检查网络  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# ifconfig   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# ifconfig docker0 down  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# brctl delbr docker0  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# service dockerd start  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 检查点: 检查网络  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# ifconfig   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 测试:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker run --rm -it centos /bin/bash  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;测试结果: &lt;u&gt;失败&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;② 参考 &lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/lei0213/p/12631681.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker第五篇（docker网络管理）&lt;/a&gt;, 用update改network&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker update --network=host -it e7d3c1eca2fb  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;unknown flag: --network  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;See &amp;#39;docker update --help&amp;#39;.  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;结果: update不支持修改network&lt;br&gt;
测试结果: &lt;u&gt;失败&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;③ 测试用已有的容器作镜像, 用host模式运行生成的镜像, 发现会自动退出&lt;br&gt;
再测试用wordpress以host模式运行, 也同样会自动退出&lt;br&gt;
原因可能是某个端口被宿主机占了, 谁知道&lt;br&gt;
结论: wordpress在当前系统上, 只能以bridge方式运行.&lt;/p&gt;
&lt;p&gt;看来应该是网桥的问题, 估计最终还是iptables的问题&lt;br&gt;
参考:  &lt;a class=&#34;link&#34; href=&#34;https://medium.com/@noosphere00/%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86linux%E8%AE%BE%E5%A4%87%E4%B8%8A%E7%9A%84bridge-%E7%BD%91%E6%A1%A5-%E5%92%8Cdocker-bridge-e6304a748f41&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何管理linux设备上的bridge(网桥)和docker bridge&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;估计一时半会也搞不定了, 先准备手动安装wp包和插件吧:&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_26954773/article/details/62875366&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何手动安装WordPress主题和插件（Linux）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;后记&lt;/strong&gt;: 放弃了使用WordPress服务器搭博客的方式。&lt;br&gt;
然而, 其实 . Docker下, 不管是host模式/bridge模式/container模式都不应该存在网络通讯的问题&amp;hellip;&amp;hellip;&lt;br&gt;
☻&lt;/p&gt;
</description>
        </item>
        <item>
        <title>在Docker环境下安装WordPress</title>
        <link>https://jimway71.github.io/p/%E5%9C%A8docker%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85wordpress/</link>
        <pubDate>Wed, 07 Apr 2021 14:44:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E5%9C%A8docker%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85wordpress/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-32.png" alt="Featured image of post 在Docker环境下安装WordPress" /&gt;&lt;h2 id=&#34;安装环境&#34;&gt;安装环境&lt;/h2&gt;
&lt;p&gt;在数码视讯Q7上装了openwrt, 并已建好了Docker环境&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/zero_only/article/details/107567135&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;armbian装docker+wordpress实现https访问&lt;/a&gt;&lt;br&gt;
wordpress英文官网: &lt;a class=&#34;link&#34; href=&#34;https://wordpress.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wordpress.org/&lt;/a&gt;  (可能是)&lt;br&gt;
WordPress中文官网: &lt;a class=&#34;link&#34; href=&#34;https://cn.wordpress.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cn.wordpress.org/&lt;/a&gt;&lt;br&gt;
WordPress on GitHub: &lt;a class=&#34;link&#34; href=&#34;https://github.com/WordPress/WordPress&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/WordPress/WordPress&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;h3 id=&#34;安装数据库&#34;&gt;安装数据库&lt;/h3&gt;
&lt;p&gt;使用mariaDB数据库.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 拉取mariadb镜像&lt;br&gt;
# docker pull mariadb&lt;br&gt;
# 运行数据库容器&lt;br&gt;
# docker run -d &amp;ndash;name DB4WordPress -p 3306:3306 -v /data/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 mariadb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参数说明:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;--name: 容器名称，这里设置为DB4WordPress&lt;br&gt;
-p: 端口映射，宿主机的3306端口映射给容器的3306端口.第一个3306是宿主机(即物理机器)的端口，第二个是容器的端口&lt;br&gt;
-e: 环境变量. MYSQL_ROOT_PASSWORD, 设置root密码为123456&lt;br&gt;
-v: 指定数据卷，也就是将mariadb容器的/var/lib/mysql映射到宿主机的/data/mysql&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;检查是否运行:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker ps -a&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;新建wordpress的库&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# mysql -h 192.168.1.207 -u root -p&lt;br&gt;
Enter password:&lt;br&gt;
Welcome to the MariaDB monitor.  Commands end with ; or \g.&lt;br&gt;
Your MariaDB connection id is 12&lt;br&gt;
Server version: 10.5.9-MariaDB-1:10.5.9+maria~focal mariadb.org binary distribution&lt;br&gt;
Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.&lt;br&gt;
Type &amp;lsquo;help;&amp;rsquo; or &amp;lsquo;\h&amp;rsquo; for help. Type &amp;lsquo;\c&amp;rsquo; to clear the current input statement.&lt;/p&gt;
&lt;p&gt;MariaDB [(none)]&amp;gt; create database wordpress;&lt;br&gt;
Query OK, 1 row affected (0.001 sec)&lt;/p&gt;
&lt;p&gt;MariaDB [(none)]&amp;gt; quit&lt;br&gt;
Bye&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;安装wordpress&#34;&gt;安装WordPress&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;# 拉取wordpress镜像&lt;br&gt;
# docker pull wordpress&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;运行wordpress容器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker run -d &amp;ndash;name WordPress -p 1080:80 -e WORDPRESS_DB_HOST=192.168.1.207:3306 -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=123456 -e WORDPRESS_DB_NAME=wordpress wordpress&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参数说明:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WORDPRESS_DB_HOST : 链接的docker的MySQL的IP地址和端口，一般设置成mysql表示用默认的设置&lt;br&gt;
WORDPRESS_DB_USER : 指定数据库用户&lt;br&gt;
WORDPRESS_DB_PASSWORD : 指定数据库用户的密码，如果用户是root，那么要和之前启动数据库时的&amp;quot;MYSQL_ROOT_PASSWORD&amp;quot;相同。&lt;br&gt;
WORDPRESS_DB_NAME: 数据库名&lt;/p&gt;
&lt;p&gt;--link  链接到mariadb容器的名称(感觉这里用不着link)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;检查是否运行&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker ps -a&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用浏览器打开http://192.168.1.207:1080, 确认安装成功&lt;/p&gt;
&lt;h3 id=&#34;更改wordpress语言设置为中文&#34;&gt;更改WordPress语言设置为中文&lt;/h3&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://www.wpdaxue.com/wordpress-language-setting.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;更改WordPress语言设置（例如中文版和英文版转换）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;: WordPress官方英文版不包含任何语言包, 包括Docker版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;下载中文版wordpress&lt;br&gt;
在&lt;a class=&#34;link&#34; href=&#34;https://cn.wordpress.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WordPress中文官方网站&lt;/a&gt;下载&lt;a class=&#34;link&#34; href=&#34;https://cn.wordpress.org/latest-zh_CN.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;中文版本wordpress&lt;/a&gt;, 解压下载的压缩包.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把wp-content/下的languages目录整个拷到wordpress容器的/var/www/html/wp-content/目录下&lt;br&gt;
中文版的languages/目录下是中文相关的文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker cp languages/ WordPress:/var/www/html/wp-content/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个拷贝命令还不错, 是拷整个目录所有文件.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改wordpress容器中/var/www/html/wp-config.php, 加入中文语言设置&lt;br&gt;
由于容器里没有编译工具, 比如vi/vim/nano这类的, 所以要先拷到宿主机上, 编辑后再拷回去.&lt;br&gt;
先把文件wp-config.php从容器拷到宿主机&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker cp WordPress:/var/www/html/wp-config.php /tmp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在宿主机上用vim编辑wp-config.php文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /tmp/wp-config.php&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;加入: define(&amp;lsquo;WPLANG&amp;rsquo;, &amp;lsquo;zh_CN&amp;rsquo;);&lt;br&gt;
由于原配置文件中没有WPLANG的设置, 不知道要放在哪里, 就直接放在第一大段注释说明后面了.&lt;br&gt;
编辑完后, 把改好的wp-config.php拷回到容器里&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker cp /tmp/wp-config.php WordPress:/var/www/html/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用浏览器打开http://192.168.1.207:1080查看, 发现已经有&amp;quot;站点语言&amp;quot;选择(原来没有这项), 并且可以选择中文.&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/32-wpondocker-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;修改后可以选择语言&#34;
	
	
&gt;&lt;br&gt;
↑ 修改后, 可以选择语言&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/32-wpondocker-02.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;修改后可以选择语言&#34;
	
	
&gt;
↑ 修改前, 没有语言选择项&lt;/p&gt;
&lt;p&gt;&amp;ldquo;站点语言&amp;quot;选择&amp;quot;中文&amp;rdquo;, 并确认生效.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ⒺⓃⒹ&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Docker相关</title>
        <link>https://jimway71.github.io/p/docker%E7%9B%B8%E5%85%B3/</link>
        <pubDate>Tue, 06 Apr 2021 22:23:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/docker%E7%9B%B8%E5%85%B3/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-31.jpg" alt="Featured image of post Docker相关" /&gt;&lt;h2 id=&#34;参考&#34;&gt;参考:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/ea4a00c6c21c&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker run 命令参数及使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/wanghao_0206/article/details/79583325&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;docker设置容器固定ip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/47310fe571b5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;用Docker搭建WordPress博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/zero_only/article/details/107567135&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;armbian装docker+wordpress实现https访问&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://clownote.github.io/2020/03/16/blog/Docker-WordPress/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;用Docker部署WordPress&lt;/a&gt;&lt;br&gt;
WordPress连接数据库失败处理方法&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/f7c48fb5a563&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;基于docker搭建自己的个人网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;docker-qa&#34;&gt;Docker Q&amp;amp;A&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看Docker容器环境变量&lt;br&gt;
标注说明:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CONTAINER-NAME: 容器名字&lt;/li&gt;
&lt;li&gt;CONTAINER-ID: 容器ID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用命令 Docker ps -a 可以查到上述信息&lt;br&gt;
有下列3种方式查看Docker容器环境变量:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Docker inspect&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker inspect &amp;lt;CONTAINER-NAME&amp;gt; OR &amp;lt;CONTAINER-ID&amp;gt;&lt;br&gt;
# 如:&lt;br&gt;
# docker inspect WordPressTest1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用env查看&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker exec -it &amp;lt;CONTAINER-NAME&amp;gt; OR &amp;lt;CONTAINER-ID&amp;gt; env&lt;br&gt;
# 如:&lt;br&gt;
# docker exec -it b14df65ecd73 env&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入容器后用env查看&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker exec -it &amp;lt;CONTAINER-NAME&amp;gt; OR &amp;lt;CONTAINER-ID&amp;gt; /bin/bash&lt;br&gt;
(容器提示符)# env&lt;br&gt;
# 如:&lt;br&gt;
# docker exec -it b14df65ecd73 /bin/bash&lt;br&gt;
(容器提示符)# env&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另: Docker使用&amp;ndash;link参数可以把另一个容器的环境变量连接过来(没有测试), 可以用env查看到&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WordPress的Docker参数&lt;br&gt;
WordPress的Docker需要的参数是从环境变量里取得.&lt;br&gt;
读取代码在wordpress容器里的/var/www/html/wp-config.php文件, 相关的主要代码如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;// ** MySQL settings - You can get this info from your web host ** //&lt;br&gt;
/** The name of the database for WordPress */&lt;br&gt;
define( &amp;lsquo;DB_NAME&amp;rsquo;, getenv_docker(&amp;lsquo;WORDPRESS_DB_NAME&amp;rsquo;, &amp;lsquo;wordpress&amp;rsquo;) );&lt;/p&gt;
&lt;p&gt;/** MySQL database username */&lt;br&gt;
define( &amp;lsquo;DB_USER&amp;rsquo;, getenv_docker(&amp;lsquo;WORDPRESS_DB_USER&amp;rsquo;, &amp;rsquo;example username&amp;rsquo;) );&lt;/p&gt;
&lt;p&gt;/** MySQL database password */&lt;br&gt;
define( &amp;lsquo;DB_PASSWORD&amp;rsquo;, getenv_docker(&amp;lsquo;WORDPRESS_DB_PASSWORD&amp;rsquo;, &amp;rsquo;example password&amp;rsquo;) );&lt;/p&gt;
&lt;p&gt;/**&lt;br&gt;
*/&lt;/p&gt;
&lt;p&gt;/** MySQL hostname */&lt;br&gt;
define( &amp;lsquo;DB_HOST&amp;rsquo;, getenv_docker(&amp;lsquo;WORDPRESS_DB_HOST&amp;rsquo;, &amp;lsquo;mysql&amp;rsquo;) );&lt;/p&gt;
&lt;p&gt;/** Database Charset to use in creating database tables. */&lt;br&gt;
define( &amp;lsquo;DB_CHARSET&amp;rsquo;, getenv_docker(&amp;lsquo;WORDPRESS_DB_CHARSET&amp;rsquo;, &amp;lsquo;utf8&amp;rsquo;) );&lt;/p&gt;
&lt;p&gt;/** The Database Collate type. Don&amp;rsquo;t change this if in doubt. */&lt;br&gt;
define( &amp;lsquo;DB_COLLATE&amp;rsquo;, getenv_docker(&amp;lsquo;WORDPRESS_DB_COLLATE&amp;rsquo;, &amp;lsquo;&amp;rsquo;) );&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以看到以下环境变量参数:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WORDPRESS_DB_NAME:              wordpress所用数据库名, 缺省为&amp;quot;wordpress&amp;quot;&lt;br&gt;
WORDPRESS_DB_USER:               wordpress访问数据库的用户名, 缺省为&amp;quot;example username&amp;quot;&lt;br&gt;
WORDPRESS_DB_PASSWORD:    wordpress访问数据库的用户密码, 缺省为&amp;quot;example password&amp;quot;&lt;br&gt;
WORDPRESS_DB_HOST:              wordpress访问的数据库地址端口(ip:port)&lt;br&gt;
WORDPRESS_DB_CHARSET:        数据库字符集&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要用到前4个参数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker的重启&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 重启docker&lt;br&gt;
# service dockerd restart&lt;/p&gt;
&lt;p&gt;# 重启容器，可通过portainer&lt;br&gt;
# 查看容器id和名称&lt;br&gt;
# docker ps -a&lt;br&gt;
# docker restart bc7c8d4514fe&lt;br&gt;
# 或&lt;br&gt;
# docker restart mydb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;宿主机(即物理机)与docker文件互传&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 宿主机传文件至docker容器&lt;br&gt;
# docker cp 本地文件的路径  container_id:&amp;lt;docker容器内的路径&amp;gt;&lt;/p&gt;
&lt;p&gt;# 容器传文件至宿主机&lt;br&gt;
# docker cp container_id:&amp;lt;docker容器内的路径&amp;gt;  &amp;lt;本地保存文件的路径&amp;gt;&lt;br&gt;
# 这里的容器ID可以通过portainer或者命令“docker ps -a ”进行查看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;容器里安装nano或vim&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# apt-get update&lt;br&gt;
# apt-get install nano&lt;br&gt;
# 或&lt;br&gt;
# apt-get install vim&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;容器自动启动&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在使用docker run时，添加&amp;quot;&amp;ndash;restart=always&amp;quot;参数&lt;/li&gt;
&lt;li&gt;运行中的docker使用update时添加&amp;quot;&amp;ndash;restart=always&amp;quot;参数&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker update &amp;ndash;restart=always wordpress&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ldquo;wordpress&amp;quot;是容器名称, 也可以写容器ID.&lt;br&gt;
例:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker update &amp;ndash;restart=always DB4WordPress&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DB4WordPress&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker update &amp;ndash;restart=always WordPress&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;WordPress&lt;br&gt;
关机重启后, 数据库和wordpress容器都已启动, 确认命令有效.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker镜像源&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/34d3b4568059&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker快速安装以及换镜像源&lt;/a&gt;&lt;br&gt;
Docker的镜像配置文件是: /etc/docker/daemon.json, 当前内容是:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;bip&amp;#34;: &amp;#34;192.168.30.1/24&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;data-root&amp;#34;: &amp;#34;/opt/docker/&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;log-level&amp;#34;: &amp;#34;warn&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;log-opts&amp;#34;: {  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &amp;#34;max-size&amp;#34;: &amp;#34;10m&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &amp;#34;max-file&amp;#34;: &amp;#34;5&amp;#34;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   },  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &amp;#34;registry-mirrors&amp;#34;: [  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &amp;#34;https://dockerhub.azk8s.cn&amp;#34;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   ]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;portainer在armbian上安装运行&lt;br&gt;
运行参考:  &lt;a class=&#34;link&#34; href=&#34;https://documentation.portainer.io/v2.0/deploy/ceinstalldocker/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Deploying Portainer CE in Docker&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# (安装应该是使用docker pull: docker pull portainer/portainer-ce)&lt;br&gt;
# 安装使用apt-get&lt;br&gt;
# apt-get install portainer/portainer-ce&lt;br&gt;
# 启动&lt;br&gt;
# docker volume create portainer_data&lt;br&gt;
# docker run -d -p 8000:8000 -p 9000:9000 &amp;ndash;name=portainer &amp;ndash;restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看某个docker容器占用的ip&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker inspect openwrt | grep Address&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中“openwrt”是容器的名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;armbian上安装Docker&lt;br&gt;
参考官网安装说明: &lt;a class=&#34;link&#34; href=&#34;https://docs.docker.com/get-docker/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Get Docker&lt;/a&gt;&lt;br&gt;
一般用官方的shell安装.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改地址(临时, openwrt)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ifconfig br-lan 172.17.0.3 netmask 255.255.255.0&lt;br&gt;
# 设置网关&lt;br&gt;
route add default gw 172.17.0.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker搜索镜像(img包)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker search 镜像包名, 如:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker search hugo  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                                   DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;klakegg/hugo                           Minimal image and variants with batteries in…   99                   [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jojomi/hugo                            hugo, see https://gohugo.io                     64                   [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;monachus/hugo                          Docker image for building and running Hugo (…   42                   [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;publysher/hugo                         Docker base image for static sites generated…   38                   [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jguyomard/hugo-builder                 Lightweight Alpine-Based Docker Image for Hu…   19                   [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cibuilds/hugo                          Docker image for Hugo, the static-site gener…   15                     
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fundor333/hugo                         Docker file for build your Hugo for my site …   4                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;peaceiris/hugo                         Hugo Alpine base Docker Image (Hugo extended…   4                      
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;solidnerd/hugo                         Hugo in a container                             2                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yanqd0/hugo                            The smallest hugo image built from Alpine.      2                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;muninn/hugo-caddy                      hugo + caddy + caddy hugo admin plugin + cad…   2                      
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tarampampam/hugo                       Hugo (gohugo, static stite generator) applic…   1                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;orus/hugo-builder                      Alpine with hugo, git and pygments installed…   1                      
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dettmering/hugo-build                  Build a website with Hugo (gohugo.io)           1                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;envimate/hugo                          Dockerized version of hugo cli https://gohug…   1                      
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chabad360/hugo                         Build a static site with Hugo (includes Hugo…   0                      
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vergissberlin/hugo-docker-watchtower   Hugo with continues delivery after commits i…   0                      
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;simonszu/hugo                          An image for the hugo blog system               0                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;webhippie/hugo                         Docker images for Hugo                          0                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;toschwarz/hugo-builder                 Hugo Builder Image                              0                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;svlentink/hugo                         Official Hugo static web gen. from Github (l…   0                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mazgi/hugo-static-website              Docker image for static website by Hugo.        0                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sjugge/hugo                            Runs the latest stable Hugo static site gene…   0                    [OK]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;forestryio/hugo                                                                        0                      
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;endocode/hugo-website                                                                  0   
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;*STARS越多越好(排在越靠前)&lt;/p&gt;
</description>
        </item>
        <item>
        <title>在Openwrt上建立Docker环境</title>
        <link>https://jimway71.github.io/p/%E5%9C%A8openwrt%E4%B8%8A%E5%BB%BA%E7%AB%8Bdocker%E7%8E%AF%E5%A2%83/</link>
        <pubDate>Tue, 06 Apr 2021 18:06:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E5%9C%A8openwrt%E4%B8%8A%E5%BB%BA%E7%AB%8Bdocker%E7%8E%AF%E5%A2%83/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-30.jpg" alt="Featured image of post 在Openwrt上建立Docker环境" /&gt;&lt;h2 id=&#34;说明&#34;&gt;说明&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;恩山论坛&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;推出的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4076037-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;55+、55+O S905x3、S922x、贝壳云、我家云、微加云等OP固件&amp;rdquo;&lt;/a&gt;内置了Docker CE容器(服务-Docker CE容器), 但Docker并不(缺省)可用.&lt;br&gt;
在Docker CE容器主页面下, 提供了内置的&amp;quot;Docker 初始化无脑配置教程&amp;quot;链接(一个PDF文件), 按照教程说明, 可以简单的把Docker环境搭建完成.&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Docker 初始化无脑配置教程&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境说明&#34;&gt;环境说明&lt;/h2&gt;
&lt;p&gt;在TF卡里装了&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4076037-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OP固件&lt;/a&gt;, 用这张TF卡插在联通(数码视讯)Q7盒子(以下简称Q7)里启动, op可以正常运行.&lt;br&gt;
TF卡中只用不到1G空间被op系统占用, 剩下的分成了一个exfat的主分区.&lt;/p&gt;
&lt;h2 id=&#34;操作步骤&#34;&gt;操作步骤&lt;/h2&gt;
&lt;p&gt;操作步骤大致按照&amp;quot;Docker 初始化无脑配置教程&amp;quot;, 但略有些不同.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;给Docker分配存储空间&lt;br&gt;
由于原来剩余空间都给了exfat主分区, 所以只能重新分配空间.&lt;br&gt;
本想通过调整分区大小来分出部分空间给Docker, 但试了Win10的&amp;quot;硬盘管理&amp;quot;+&amp;ldquo;分区助专业版&amp;rdquo;, 发现都不能把exfat分区的空间调小, 所以只能重新分配空间.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先备份exfat分区文件&lt;/li&gt;
&lt;li&gt;TF卡重新分区&lt;br&gt;
把TF卡插回Q7的TF卡槽, tf卡启动Q7后, 用SecureCRT登录进去:
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用fdisk命令删除原exfat分区&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用fdisk重分两个分区, 一个exfat分区, 一个ext4分区.&lt;br&gt;
考虑到Docker可能不会占用多少空间, 给ext4分了10G的空间.&lt;br&gt;
(exfat分区的类型代码是7)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;格式化(mkfs命令)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 格式化exfat分区&lt;br&gt;
# mkfs.exfat /dev/sda3&lt;br&gt;
# 格式化ext4分区&lt;br&gt;
# mkfs.ext4 /dev/sda4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意: 如果分区已经mount上就不能格式化, 会显示格式化失败信息.&lt;br&gt;
这种情况需要umount, 如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# umount /dev/sda3&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-02.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;相应的教程内容, 执行的shell功能就是分区&amp;#43;格式化&#34;
	
	
&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;↑ 相应的教程内容, 执行的shell功能就是分区+格式化&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;挂载(mount)新分区&lt;br&gt;
把新的ext4分区挂载(mount)到/opt下, 做为Docker的空间.&lt;br&gt;
与mount有关的配置文件有/etc/mtab + /etc/fstab, /etc/fstab是启动时的挂载配置文件.&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-03.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;相应的教程内容, 实现新分区挂载到/opt&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-04.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;相应的教程内容, 实现新分区挂载到/opt&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-05.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;相应的教程内容, 实现新分区挂载到/opt&#34;
	
	
&gt;&lt;br&gt;
↑ 相应的教程内容, 实现新分区挂载到/opt&lt;br&gt;
按教程操作完成挂载后, 查看/etc/fstab文件, 并没有看到/opt的挂载信息, 不清楚具体是在哪里配置的.&lt;br&gt;
用mount命令查看, 可以看到已经挂载到/opt下了&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-06.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;分区挂载状态&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;把备份的exfat分区文件恢复回去.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确认Docker的配置文件&lt;br&gt;
修改/etc/docker/daemon.json, 把data-root改为/opt/docker/&lt;br&gt;
说明见文后的问题①&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Docker管理系统&lt;br&gt;
/etc/docker-web是一个shell, 内容如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# cat /etc/docker-web&lt;br&gt;
#!/bin/sh&lt;br&gt;
docker run -d &amp;ndash;restart=always &amp;ndash;name=&amp;ldquo;portainer&amp;rdquo; -p 9999:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;docker-web是用来安装docker的web管理系统, 执行前需要先确认下docker是否已启动, 如果没有启动, docker-web的安装会失败, 如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ./docker-web&lt;br&gt;
docker: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?.&lt;br&gt;
See &amp;lsquo;docker run &amp;ndash;help&amp;rsquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用service命令确认docker运行状态&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service dockerd status&lt;br&gt;
inactive&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果发现docker未启动, 则先启动docker&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service dockerd start&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再次确认docker运行状态&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service dockerd status&lt;br&gt;
running&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;确认docker运行后, 可以执行docker-web进行安装&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ./docker-web&lt;br&gt;
Unable to find image &amp;lsquo;portainer/portainer-ce:latest&amp;rsquo; locally&lt;br&gt;
latest: Pulling from portainer/portainer-ce&lt;br&gt;
84cfa456b2b1: Pull complete&lt;br&gt;
39d56ef0881a: Pull complete&lt;br&gt;
16a45878c700: Pull complete&lt;br&gt;
Digest:&lt;br&gt;
Status: Downloaded newer image for portainer/portainer-ce:latest&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入Docker管理界面&lt;br&gt;
在浏览器里输入Q7的ip地址:9999, 设置管理员密码, 选择local进入本地管理界面&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-07.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Docker管理界面&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-08.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Docker管理界面&#34;
	
	
&gt;&lt;br&gt;
点鲸鱼图标即可管理本地的docker&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;① Docker的配置文件有问题, 需要修改&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cat /etc/docker/daemon.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;bip&amp;#34;: &amp;#34;172.31.0.1/24&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;data-root&amp;#34;: &amp;#34;/mnt/mmcblk2p4/docker/&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;log-level&amp;#34;: &amp;#34;warn&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;log-opts&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &amp;#34;max-size&amp;#34;: &amp;#34;10m&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &amp;#34;max-file&amp;#34;: &amp;#34;5&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &amp;#34;registry-mirrors&amp;#34;: [
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &amp;#34;https://dockerhub.azk8s.cn&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中data-root所指/mnt/mmcblk2p4不存在, 由于给docker分配的空间是/opt, 因此考虑把data-root所指目录改到/opt/docker/下&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Q&amp;A</title>
        <link>https://jimway71.github.io/p/qa/</link>
        <pubDate>Sat, 03 Apr 2021 22:57:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/qa/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-29.jpg" alt="Featured image of post Q&amp;A" /&gt;&lt;h2 id=&#34;问题-旧版securecrt不能连接新版本的sshd服务器&#34;&gt;问题: 旧版SecureCrt不能连接新版本的sshd服务器&lt;/h2&gt;
&lt;p&gt;报错如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Key exchange failed. No compatible key exchange method. The server supports these methods: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原因分析:&lt;br&gt;
旧版SecureCrt(版本号6.7.0 (build 153))支持的密钥交换(Key exchange)为以下5种:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kerberos&lt;/li&gt;
&lt;li&gt;Kerberos(Group Exchange)&lt;/li&gt;
&lt;li&gt;Diffie-hellman-group14&lt;/li&gt;
&lt;li&gt;Diffie-hellman-group&lt;/li&gt;
&lt;li&gt;Diffie-hellman&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这5种均不被新的sshd支持, 当前sshd版本信息为:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OpenSSH_8.3p1, OpenSSL 1.1.1j  16 Feb 2021&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;处理方式:&lt;br&gt;
修改/etc/ssh/sshd_config文件, 添加(我是在文件最后添加):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;KexAlgorithms diffie-hellman-group14-sha1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后重启sshd:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#service sshd restart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即可。&lt;br&gt;
(看参考的文档, 说的是添加:&lt;br&gt;
KexAlgorithms &lt;a class=&#34;link&#34; href=&#34;mailto:curve25519-sha256@libssh.org&#34; &gt;curve25519-sha256@libssh.org&lt;/a&gt;,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1&lt;br&gt;
其实添加一种SecureCrt支持的方式就可以了)&lt;br&gt;
参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/duanbiren123/article/details/103034914&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;升级ssh后续问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.tomato.cm/179.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用SecureCRT连接Ubuntu20.04报错：Key exchange failed. No compatible key exchange method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/shenjianyu/p/6407042.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;升级openssh带来的问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;更新:&lt;/strong&gt;&lt;br&gt;
可以改用基于&lt;a class=&#34;link&#34; href=&#34;file:///C:/Users/jimway/AppData/Local/Temp/Mxt220/tmp/licenses/EulaHOME.html&#34; &gt;MobaXterm license&lt;/a&gt;许可的&lt;a class=&#34;link&#34; href=&#34;https://mobaxterm.mobatek.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MobaXterm&lt;/a&gt;, 不再有这种问题。&lt;/p&gt;
&lt;h2 id=&#34;问题-在openwrt上新建一个可用的samba用户&#34;&gt;问题: 在openwrt上新建一个可用的samba用户&lt;/h2&gt;
&lt;p&gt;需要解决的问题:&lt;br&gt;
需要新增一个samba用户, 而samba用户是与同名系统用户关联的, 所以需要先建立一个同名的系统用户.&lt;br&gt;
但是, 当前Openwrt的底层系统里没有useradd或者adduser命令, 用opkg update更新后, 搜索可用的包里也没找到相关的包, 包括有人提到的shadow-useradd或者类似的命令, 所以, 不能用命令添加一个用户&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;那, 就先手动来新增一个用户&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修改/etc/passwd文件, 增加新用户信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/passwd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;增加一行:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;newuser:x:66666:66666:newuser:/home/newuser:/bin/ash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明:&lt;br&gt;
newuser是用户名, /home/newuser就是newuser用户的根目录了.&lt;br&gt;
66666是用户ID, 要注意在整个passwd文件是应该是唯一的.&lt;br&gt;
/bin/ash是shell, 是从root用户那行抄来的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改/etc/group文件, 增加新用户的组信息: 组名和用户名一般都是相同的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/group&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;增加一行:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;newuser:x:66666:newuser&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明:&lt;br&gt;
组名和用户名相同&lt;br&gt;
组ID号和用户ID号也相同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立新用户根目录, 并设置属主/组&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# mkdir /home/newuser&lt;br&gt;
# chown newuser /home/newuser&lt;br&gt;
# chgrp newuser /home/newuser&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;给新用户设置密码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# passwd newuser&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;该设置samba用户了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;给samba新用户设置密码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;# smbpasswd newuser&lt;/del&gt;&lt;br&gt;
&lt;del&gt;&amp;hellip;&amp;hellip;&lt;/del&gt;&lt;br&gt;
&lt;del&gt;Failed to find entry for user newuser.&lt;/del&gt;&lt;br&gt;
# smbpasswd -a newuser&lt;br&gt;
&amp;hellip;&amp;hellip;&lt;br&gt;
Added user newuser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使samba新用户可用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# smbpasswd -e newuser&lt;br&gt;
Enabled user newuser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;问题-在openwrt上设置samba服务器-windowswin10es文件浏览器都可以通过网络访问&#34;&gt;问题: 在openwrt上设置samba服务器, Windows/Win10/Es文件浏览器都可以通过网络访问.&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;环境说明:&lt;/strong&gt;&lt;br&gt;
用S905L的盒子装了个openwrt, 装在TF卡上, 用TF卡启动.&lt;br&gt;
TF卡上除了装op系统的大概1G空间外, 剩下的空间分区并格式化为exfat格式, op启动时会自动加载这个exfat分区, 使用samba(web上在网络存储-网络共享)共享出来可供局域网内设备访问.&lt;br&gt;
Win10当前版本缺省不支持SMB 1.0/CIFS, 为了访问低版本的samba设备, 已通过&amp;quot;启用或关闭Windows功能&amp;quot;打开&amp;quot;SMB 1.0/CIFS文件共享支持&amp;quot;+&amp;ldquo;SMB Direct&amp;rdquo;, 需要能让这种设备访问盒子上的samba服务器 - 其实这并不是一个问题, 当前版本的samba(V4.11.6)早已支持新版本的samba协议.&lt;br&gt;
安卓手机app&amp;quot;Es文件管理器&amp;quot;也需要在局域网内能访问同一个samba服务器.&lt;br&gt;
&lt;strong&gt;问题详述:&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;问题1. linux上的samba服务器与Windows的Samba服务器是有区别的&lt;/u&gt;&lt;br&gt;
Windows的samba服务器被访问时, 如果需要用户登录, 会在开始连接时就要求登录.&lt;br&gt;
而Linux的samba服务器被访问时, 只有当访问到&amp;quot;共享目录&amp;quot;时, 才会问到登录信息.&lt;br&gt;
&lt;u&gt;问题2. 当前版本的Win10在访问samba服务时, 已经不支匿名访问, 只能修改注册表信息来支持&lt;/u&gt;&lt;br&gt;
这个操作比较麻烦, 不考虑&lt;br&gt;
测试中发现, 当一个samba服务器里只要存在任何一个可以匿名访问的文件共享, Win10就无法访问整个Samba服务器, 因此要求samba服务器中的任何共享都是非匿名访问的.&lt;br&gt;
&lt;u&gt;问题3 Es文件管理器App访问linux上的Samba服务器时, 缺省是以匿名方式访问&lt;/u&gt;&lt;br&gt;
不会主动弹出登录信息窗口, 即使无法打开一个需要登录的共享时, 也不会主动弹出.&lt;br&gt;
这就需要手动设置Es的登录信息.&lt;br&gt;
这个问题和问题1有相关性.&lt;br&gt;
&lt;strong&gt;其他&lt;/strong&gt;&lt;br&gt;
由于exfat是微软的文件格式, 没有用户权限信息, 避开了linux复杂的权限问题, 因此选择使用这种文件格式&lt;br&gt;
&lt;strong&gt;结论:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;op上的samba共享都需要设置成用户登录访问&lt;/li&gt;
&lt;li&gt;Es访问时需要手动设置用户登录信息.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Samba服务器的设置如下&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;配置文件&lt;br&gt;
op上luci的缺省配置文件如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[global]&lt;br&gt;
netbios name = |NAME|&lt;br&gt;
interfaces = |INTERFACES|&lt;br&gt;
server string = |DESCRIPTION|&lt;br&gt;
unix charset = |CHARSET|&lt;br&gt;
workgroup = |WORKGROUP|&lt;/p&gt;
&lt;p&gt;## This global parameter allows the Samba admin to limit what interfaces on a machine will serve SMB requests.&lt;br&gt;
bind interfaces only = yes&lt;/p&gt;
&lt;p&gt;## time for inactive connections to-be closed in minutes&lt;br&gt;
deadtime = 15&lt;/p&gt;
&lt;p&gt;## disable core dumps&lt;br&gt;
enable core files = no&lt;/p&gt;
&lt;p&gt;## set security (auto, user, domain, ads)&lt;br&gt;
security = user&lt;/p&gt;
&lt;p&gt;## This parameter controls whether a remote client is allowed or required to use SMB encryption.&lt;br&gt;
## It has different effects depending on whether the connection uses SMB1 or SMB2 and newer:&lt;br&gt;
## If the connection uses SMB1, then this option controls the use of a Samba-specific extension to the SMB protocol introduced in Samba 3.2 that makes   use of the Unix extensions.
server min protocol = NT1&lt;br&gt;
client min protocol = NT1&lt;br&gt;
## If the connection uses SMB2 or newer, then this option controls the use of the SMB-level encryption that is supported in SMB version 3.0 and above and available in Windows 8 and newer.&lt;br&gt;
## (default/auto,desired,required,off)&lt;br&gt;
#smb encrypt = default&lt;/p&gt;
&lt;p&gt;## set invalid users&lt;br&gt;
invalid users = root&lt;/p&gt;
&lt;p&gt;## map unknow users to guest&lt;br&gt;
map to guest = Bad User&lt;/p&gt;
&lt;p&gt;## allow client access to accounts that have null passwords.&lt;br&gt;
null passwords = yes&lt;/p&gt;
&lt;p&gt;## The old plaintext passdb backend. Some Samba features will not work if this passdb backend is used. (NOTE: enabled for size reasons)&lt;br&gt;
## (tdbsam,smbpasswd,ldapsam)&lt;br&gt;
passdb backend = smbpasswd&lt;/p&gt;
&lt;p&gt;## Set location of smbpasswd (&amp;lsquo;smbd -b&amp;rsquo; will show default compiled location)&lt;br&gt;
#smb passwd file = /etc/samba/smbpasswd&lt;/p&gt;
&lt;p&gt;## LAN/WAN options (IPTOS_LOWDELAY TCP_NODELAY) WAN (IPTOS_THROUGHPUT)&lt;br&gt;
socket options = IPTOS_LOWDELAY TCP_NODELAY&lt;/p&gt;
&lt;p&gt;## If this integer parameter is set to a non-zero value, Samba will read from files asynchronously when the request size is bigger than this value.&lt;br&gt;
## Note that it happens only for non-chained and non-chaining reads and when not using write cache.&lt;br&gt;
## The only reasonable values for this parameter are 0 (no async I/O) and 1 (always do async I/O).&lt;br&gt;
## (1/0)&lt;br&gt;
#aio read size = 0&lt;br&gt;
#aio write size = 0&lt;/p&gt;
&lt;p&gt;## If Samba has been built with asynchronous I/O support, Samba will not wait until write requests are finished before returning the result to the client for files listed in this parameter.&lt;br&gt;
## Instead, Samba will immediately return that the write request has been finished successfully, no matter if the operation will succeed or not.&lt;br&gt;
## This might speed up clients without aio support, but is really dangerous, because data could be lost and files could be damaged.&lt;br&gt;
#aio write behind = /*.tmp/&lt;/p&gt;
&lt;p&gt;## lower CPU useage if supported and aio is disabled (aio read size = 0 ; aio write size = 0)&lt;br&gt;
## currently broken (NOTE: see &lt;a class=&#34;link&#34; href=&#34;https://bugzilla.samba.org/show_bug.cgi?id=14095&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugzilla.samba.org/show_bug.cgi?id=14095&lt;/a&gt; )&lt;br&gt;
## (no, yes)&lt;br&gt;
#use sendfile = yes&lt;/p&gt;
&lt;p&gt;## samba will behave as previous versions of Samba would and will fail the lock request immediately if the lock range cannot be obtained.&lt;br&gt;
#blocking locks = No&lt;/p&gt;
&lt;p&gt;## disable loading of all printcap printers by default (iprint, cups, lpstat)&lt;br&gt;
load printers = No&lt;br&gt;
printcap name = /dev/null&lt;/p&gt;
&lt;p&gt;## Enabling this parameter will disable Samba&amp;rsquo;s support for the SPOOLSS set of MS-RPC&amp;rsquo;s.&lt;br&gt;
disable spoolss = yes&lt;/p&gt;
&lt;p&gt;## This parameters controls how printer status information is interpreted on your system.&lt;br&gt;
## (BSD, AIX, LPRNG, PLP, SYSV, HPUX, QNX, SOFTQ)&lt;br&gt;
printing = bsd&lt;/p&gt;
&lt;p&gt;## Disable that nmbd is acting as a WINS server for unknow netbios names&lt;br&gt;
#dns proxy = No&lt;/p&gt;
&lt;p&gt;## win/unix user mapping backend&lt;br&gt;
#idmap config * : backend = tdb&lt;/p&gt;
&lt;p&gt;## Allows the server name that is advertised through MDNS to be set to the hostname rather than the Samba NETBIOS name.&lt;br&gt;
## This allows an administrator to make Samba registered MDNS records match the case of the hostname rather than being in all capitals.&lt;br&gt;
## (netbios, mdns)&lt;br&gt;
mdns name = mdns&lt;/p&gt;
&lt;p&gt;## Clients that only support netbios won&amp;rsquo;t be able to see your samba server when netbios support is disabled.&lt;br&gt;
#disable netbios = Yes&lt;/p&gt;
&lt;p&gt;## Setting this value to no will cause nmbd never to become a local master browser.&lt;br&gt;
#local master = no&lt;/p&gt;
&lt;p&gt;## (auto, yes) If this is set to yes, on startup, nmbd will force an election, and it will have a slight advantage in winning the election. It is recommended that this parameter is used in conjunction with domain master = yes, so that nmbd can guarantee becoming a domain master.&lt;br&gt;
#preferred master = yes&lt;/p&gt;
&lt;p&gt;## (445 139) Specifies which ports the server should listen on for SMB traffic.&lt;br&gt;
## 139 is netbios/nmbd&lt;br&gt;
#smb ports = 445 139&lt;/p&gt;
&lt;p&gt;## This is a list of files and directories that are neither visible nor accessible.&lt;br&gt;
## Each entry in the list must be separated by a &amp;lsquo;/&amp;rsquo;, which allows spaces to be included in the entry. &amp;lsquo;*&amp;rsquo; and &amp;lsquo;?&amp;rsquo; can be used to specify multiple files or directories as in DOS wildcards.&lt;br&gt;
veto files = /Thumbs.db/.DS_Store/._.DS_Store/.apdisk/&lt;/p&gt;
&lt;p&gt;## If a directory that is to be deleted contains nothing but veto files this deletion will fail unless you also set the delete veto files parameter to   yes.&lt;br&gt;
delete veto files = yes&lt;/p&gt;
&lt;p&gt;################ Filesystem and creation rules ################&lt;br&gt;
## reported filesystem type (NTFS,Samba,FAT)&lt;br&gt;
#fstype = FAT&lt;/p&gt;
&lt;p&gt;## Allows a user who has write access to the file (by whatever means, including an ACL permission) to modify the permissions (including ACL) on it.&lt;br&gt;
#dos filemode = Yes&lt;/p&gt;
&lt;p&gt;## file/dir creating rules&lt;br&gt;
#create mask = 0666&lt;br&gt;
#directory mask = 0777&lt;br&gt;
#force group = root&lt;br&gt;
#force user = root&lt;br&gt;
#inherit owner = windows and unix&lt;br&gt;
################################################################&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个配置文件只需要屏蔽 invalid users = root 这一句, 如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#invalid users = root&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置samba用户&lt;br&gt;
使用&amp;quot;&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/qa/#%E9%97%AE%E9%A2%98-%E5%9C%A8openwrt%E4%B8%8A%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8F%AF%E7%94%A8%E7%9A%84samba%E7%94%A8%E6%88%B7&#34; &gt;在openwrt上新建一个可用的samba用户&lt;/a&gt;&amp;ldquo;的方法建立用户&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置共享目录(补记: 可能是在Luci的界面里)&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/29-qa-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;设置共享目录&#34;
	
	
&gt;&lt;br&gt;
按上图方式设置共享目录, 允许用户是刚才设置的smb用户.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问&lt;br&gt;
Win10正常访问.&lt;br&gt;
Es文件浏览器App在局域网里设置相应服务器的登录信息后就可以正常访问.&lt;br&gt;
读写都没有问题.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;emuelec2020春节整合版s905-被百毒封了&#34;&gt;EmuELEC2020春节整合版(s905) 被百毒封了&lt;/h2&gt;
&lt;p&gt;EmuELEC 3.3.1 2020春节整合版详细说明: &lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/read/cv4420521/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.bilibili.com/read/cv4420521/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;下载地址：&lt;/u&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cloud.189.cn/t/F7JfYbF7VnU&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;EmuELEC2020春节整合版(s905) 被百毒封了&lt;/a&gt;  (访问码:nlp7) -&amp;gt; 已经转&lt;a class=&#34;link&#34; href=&#34;https://cloud.189.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;天翼云&lt;/a&gt; 需要的请下载&lt;a class=&#34;link&#34; href=&#34;https://space.bilibili.com/97745521&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;@人中日月&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;基础包链接：&lt;a class=&#34;link&#34; href=&#34;https://pan.baidu.com/s/1s03OQf60qQCmH8dejykplw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pan.baidu.com/s/1s03OQf60qQCmH8dejykplw&lt;/a&gt; 提取码：g13u&lt;br&gt;
(三个增补包，分别是街机改版、ATOMISWAVE和NAOMI的整合包，需要自己另外根据EMUELEC使用指南里面的方法传到系统里。)&lt;/li&gt;
&lt;li&gt;增量包链接：&lt;a class=&#34;link&#34; href=&#34;https://pan.baidu.com/s/17xkfIu-Wg1CzKAq9sGrXIw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pan.baidu.com/s/17xkfIu-Wg1CzKAq9sGrXIw&lt;/a&gt; 提取码：zkdr&lt;/li&gt;
&lt;li&gt;斐讯N1补丁包链接：&lt;a class=&#34;link&#34; href=&#34;https://pan.baidu.com/s/1RaNq2VaWiPvxX-4q2cjs1A&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pan.baidu.com/s/1RaNq2VaWiPvxX-4q2cjs1A&lt;/a&gt; 提取码：pty4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外, 还有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vol4增量包, 应该是FBN街机的&lt;/li&gt;
&lt;li&gt;3.4版的更新包,更新emuelec到3.4&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;问题-openwrt的history只能看到当前连接的命令记录&#34;&gt;问题: openwrt的history只能看到当前连接的命令记录&lt;/h2&gt;
&lt;p&gt;原因: op缺省使用的是ash, 这个轻量化的shell就是这样，除非改用别的shell, 比如bash&lt;br&gt;
处理:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安装bash&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# opkg update &amp;amp; opkg install bash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置用户使用bash&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/passwd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改相应用户的shell为bash，并保存退出。&lt;br&gt;
登出并重新登录后新的shell生效&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# echo $SHELL&lt;br&gt;
/bin/bash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看history&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# history&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应该能看到记录，登出再进，可以看到文件～/.bash_history(bash的history 记录文件)&lt;/p&gt;
&lt;h2 id=&#34;网络相关问题-内网互联&#34;&gt;网络相关问题: 内网互联&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://segmentfault.com/a/1190000016556569&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;frp 和 nginx 搭建一个内网穿透服务器&lt;/a&gt;&lt;br&gt;
网络结构: 外网nginx -&amp;gt; 外网frp server &amp;lt;-&amp;gt; 内网frp client -&amp;gt; 内网web&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.anquanke.com/post/id/231424&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;内网渗透代理之frp的应用与改造（一）&lt;/a&gt;&lt;br&gt;
相关的&lt;a class=&#34;link&#34; href=&#34;https://github.com/mstxq17/FrpProPlugin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FrpProPlugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hostloc.com/forum.php?mod=viewthread&amp;amp;tid=820833&amp;amp;extra=&amp;amp;page=2&amp;amp;mobile=2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;(rinetd YYDS)socat居然比iptab效率高&lt;/a&gt;&lt;br&gt;
我映象比较深的就是 iptables frp nginx socat haproxy rinetd&lt;br&gt;
因为我是转发到rdp然后看油管，稍微卡顿都可以很明显的感觉出来。rinetd很流畅，haproxy和frp可以勉强用用，其它的都是战五渣。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.v2ex.com/t/567570&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;自认为比 frp 更好用的内网穿透工具 nps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里列举了一些比较好用的开源的内网穿透工具，详细介绍一下各个软件工具的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;frp&lt;br&gt;
FRP 功能完整，主要采用 GO 语言实现，重量级的工具，服务端界面样式风格一般。&lt;br&gt;
配置繁琐，不同的协议需要配置不同的参数，采用文件存放数据，不支持数据库管理数据。&lt;/li&gt;
&lt;li&gt;holer&lt;br&gt;
轻量级的内网穿透工具，holer 服务端采用 Java 语言实现，服务端界面漂亮简洁。&lt;br&gt;
Holer 客户端采用了 Java 语言和 GO 语言实现了两种版本，支持几乎所有的 OS 平台。&lt;br&gt;
用到流行的微服务框架 springboot 和 Java 网络框架 netty。&lt;br&gt;
配置很简单，针对所有 TCP 协议只需在客户端设置一个 holer access key 即可。&lt;br&gt;
采用 MySQL 数据库统一管理数据。&lt;/li&gt;
&lt;li&gt;nps&lt;br&gt;
轻量级的内网穿透工具，完全采用 GO 语言实现，服务端界面漂亮简洁。&lt;br&gt;
支持的协议最广泛，配置稍简单，采用文件存放数据，不支持数据库管理数据。&lt;/li&gt;
&lt;li&gt;lanproxy&lt;br&gt;
轻量级的内网穿透工具，客户端采用 GO 语言和 Java 语言实现两种版本，采用了 Java 网络框架 netty，服务端界面体验较差。&lt;br&gt;
配置稍繁琐，采用文件存放数据，不支持数据库管理数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.nasge.com/archives/48.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;内网穿透工具比较(ngrok,frp,lanproxy,goproxy,nps)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doubibackup.com/wkcjzpyd-2.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;关于目前 GFW(墙) 的封锁方式TCP封锁(阻断)猜想&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;问题-ubuntu采用docker官方shell安装时报错&#34;&gt;问题: ubuntu采用Docker官方shell安装时报错&lt;/h2&gt;
&lt;p&gt;报错信息如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# curl -fsSL &lt;a class=&#34;link&#34; href=&#34;https://get.docker.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://get.docker.com&lt;/a&gt; -o get-docker.sh&lt;br&gt;
# sh get-docker.sh&lt;br&gt;
# Executing docker install script, commit: 7cae5f8b0decc17d6571f9f52eb840fbc13b2737&lt;br&gt;
+ sh -c apt-get update -qq &amp;gt;/dev/null&lt;br&gt;
W: The repository &amp;lsquo;cdrom://Ubuntu-Server 16.04.6 LTS &lt;em&gt;Xenial Xerus&lt;/em&gt; - Release amd64 (20190226) xenial Release&amp;rsquo; does not have a Release file.&lt;br&gt;
E: Failed to fetch cdrom://Ubuntu-Server 16.04.6 LTS &lt;em&gt;Xenial Xerus&lt;/em&gt; - Release amd64 (20190226)/dists/xenial/main/binary-amd64/Packages  Please use apt-cdrom to make this CD-ROM recognized by APT. apt-get update cannot be used to add new CD-ROMs&lt;br&gt;
E: Some index files failed to download. They have been ignored, or old ones used instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;错误处理, 操作如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/apt/sources.list&lt;br&gt;
# 屏蔽掉有cdrom的那一行, 如下&lt;br&gt;
#deb cdrom:[Ubuntu-Server 16.04.6 LTS &lt;em&gt;Xenial Xerus&lt;/em&gt; - Release amd64 (20190226)]/ xenial main restricted&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://linux.cn/article-5409-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何修复 apt-get update 无法添加新的 CD-ROM 的错误&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;问题-padavan路由作二级桥接无线路由时-系统时间混乱的问题处理&#34;&gt;问题: Padavan路由作二级桥接无线路由时, 系统时间混乱的问题处理&lt;/h2&gt;
&lt;p&gt;状态: 配置了NTP同步, 但无效&lt;br&gt;
原因: 可能是没有配置WAN造成的&lt;br&gt;
处理:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;手动:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ntpd -t -p 192.168.1.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自动&lt;br&gt;
在&amp;quot;系统管理&amp;rdquo;-&amp;ldquo;服务&amp;quot;中修改&amp;quot;调度任务 (Crontab)&amp;rdquo;, 增加&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0 * * * * ntpd -t -p 192.168.1.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;让系统每小时都做一次时间同步.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux下-以指定用户身份执行&#34;&gt;Linux下, 以指定用户身份执行&lt;/h2&gt;
&lt;p&gt;例: # su - 用户名 -c &amp;ldquo;命令&amp;rdquo;&lt;br&gt;
如:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# su - user -c &amp;ldquo;whoami&amp;rdquo;&lt;br&gt;
user&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明: 以用户user身份执行whoami, 返回的用户身份是&amp;quot;user&amp;quot;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>联通(数码视讯)Q7盒子再刷Openwrt</title>
        <link>https://jimway71.github.io/p/%E8%81%94%E9%80%9A%E6%95%B0%E7%A0%81%E8%A7%86%E8%AE%AFq7%E7%9B%92%E5%AD%90%E5%86%8D%E5%88%B7openwrt/</link>
        <pubDate>Mon, 15 Mar 2021 00:49:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E8%81%94%E9%80%9A%E6%95%B0%E7%A0%81%E8%A7%86%E8%AE%AFq7%E7%9B%92%E5%AD%90%E5%86%8D%E5%88%B7openwrt/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-27.jpg" alt="Featured image of post 联通(数码视讯)Q7盒子再刷Openwrt" /&gt;&lt;h2 id=&#34;说明&#34;&gt;说明&lt;/h2&gt;
&lt;p&gt;联通(数码视讯)Q7盒子(以下简称Q7)做为一个电视盒子应该是没有什么可取之处, 但还可以做点别的, 比如, 做&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Openwrt&lt;/a&gt;盒子。&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/&#34;  title=&#34;恩山-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;恩山论坛&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;推出了&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4076037-1-1.html&#34;  title=&#34;多盒OP固件-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;55+、55+O S905x3、S922x、贝壳云、我家云、微加云等OP固件&amp;rdquo;&lt;/a&gt;, 是基于&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;amlogic(晶晨)&lt;/a&gt;的S9xx系列arm SOC的&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Openwrt&lt;/a&gt;固件, 现在支持包括基于amlogic(晶晨) S922x、S912、&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/196/index.html&#34;  title=&#34;S905X-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905x&lt;/a&gt;、s905x2、S905x3、S905d等多款SOC的盒子。&lt;br&gt;
但是, &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;的固件说明中, 并未明确指出对&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/414/index.html&#34;  title=&#34;S905L-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905L&lt;/a&gt;的支持, 而Q7用的SOC是&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/414/index.html&#34;  title=&#34;S905L-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905L&lt;/a&gt;。&lt;br&gt;
查到&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Amlogic&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;维基Amlogic&lt;/a&gt;说明中是这么说的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;Amlogic &lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/414/index.html&#34;  title=&#34;S905L-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905L&lt;/a&gt;: 与&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/196/index.html&#34;  title=&#34;S905X-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905X&lt;/a&gt;相似，不同之处在于它支持HDMI 2.0b，但缺少VP9解码，摄像头接口和TS输入。&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;按这种说法, &lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/414/index.html&#34;  title=&#34;S905L-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905L&lt;/a&gt;可能是和&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/196/index.html&#34;  title=&#34;S905X-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905X&lt;/a&gt;差不多, 支持&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/196/index.html&#34;  title=&#34;S905X-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905X&lt;/a&gt;应该就能支持&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/414/index.html&#34;  title=&#34;S905L-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905L&lt;/a&gt;, 那么Q7就应该能用。&lt;br&gt;
推论如此, 然后在网上找到了一个实例, &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/&#34;  title=&#34;恩山-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;恩山论坛&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-593965.html&#34;  title=&#34;len_-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Len_&lt;/a&gt;大侠在&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-3570786-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;联通北京数码Q7,S905L电视盒刷成了openwrt系统路由器&amp;rdquo;&lt;/a&gt;贴子里, 明确说明他已经成功完成了将Q7刷上了&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Openwrt&lt;/a&gt;, 虽然没有详细说明, 但从帖子里可以看出来大概是怎么做的, 那么, 就跟随&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-593965.html&#34;  title=&#34;len_-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Len_&lt;/a&gt;大侠, 让Q7废物利用吧。&lt;br&gt;
为了简单化(偷懒😁), 选用的是使用&lt;strong&gt;外接存储(U盘或TF卡)启动Q7&lt;/strong&gt;的方式。&lt;br&gt;
&lt;u&gt;Q7自带TF卡槽&lt;/u&gt;, 这倒是为数不多的优点之一。&lt;/p&gt;
&lt;h2 id=&#34;补充&#34;&gt;补充&lt;/h2&gt;
&lt;p&gt;在&lt;a class=&#34;link&#34; href=&#34;https://github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github&lt;/a&gt;上找了下&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;的源码,  感觉应该是这个: &lt;a class=&#34;link&#34; href=&#34;https://github.com/lllrrr/mknop&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lllrrr/mknop&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/tuanqing/mknop&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;tuanqing/mknop&lt;/a&gt;这个肯定是分支。&lt;br&gt;
另外, &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;还做了&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-958173-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker Openwrt&lt;/a&gt;, 看看里面引用的内核源代码来源:&lt;br&gt;
&lt;strong&gt;内核源码来源说明(两个平*的内核都来自各自最活跃的上游发布者)&lt;/strong&gt;&lt;br&gt;
Amlogic内核：  &lt;a class=&#34;link&#34; href=&#34;https://github.com/150balbes/Amlogic_s905-kernel&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/150balbes/Amlogic_s905-kernel&lt;/a&gt; （5.3.0）&lt;br&gt;
Rockchip内核:   &lt;a class=&#34;link&#34; href=&#34;https://github.com/ayufan-rock64/linux-mainline-kernel/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ayufan-rock64/linux-mainline-kernel/releases&lt;/a&gt;  （5.3.0）&lt;br&gt;
公版内核补丁： &lt;a class=&#34;link&#34; href=&#34;https://kernel.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://kernel.org&lt;/a&gt;  （当前最新5.3.6补丁）&lt;br&gt;
FullCone-Nat： &lt;a class=&#34;link&#34; href=&#34;https://github.com/Chion82/netfilter-full-cone-nat%20%20%20%20&amp;#43;%20%20952-net-conntrack-events-support-multiple-registrant.patch&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;netfilter-full-cone-nat    +  952-net-conntrack-events-support-multiple-registrant.patch&lt;/a&gt;&lt;br&gt;
(来自&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;openwrt&lt;/a&gt;源码)&lt;br&gt;
exfat:              &lt;a class=&#34;link&#34; href=&#34;https://github.com/dorimanx/exfat-nofuse&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/dorimanx/exfat-nofuse&lt;/a&gt;&lt;br&gt;
Wireguard:      &lt;a class=&#34;link&#34; href=&#34;https://git.zx2c4.com/WireGuard&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://git.zx2c4.com/WireGuard&lt;/a&gt;&lt;br&gt;
&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4076037-1-1.html&#34;  title=&#34;多盒OP固件-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;55+、55+O S905x3、S922x、贝壳云、我家云、微加云等OP固件&amp;rdquo;&lt;/a&gt; From &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-3570786-1-1.html&#34;  title=&#34;S905L电视盒刷op-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;联通北京数码Q7,S905L电视盒刷成了openwrt系统路由器&amp;rdquo;&lt;/a&gt; From &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-593965.html&#34;  title=&#34;len_-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Len_&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;所需工具及软件&#34;&gt;所需工具及软件&lt;/h2&gt;
&lt;p&gt;说明: 可以使用U盘或TF卡启动, SD卡没准也可以。 这里使用的是TF卡。&lt;br&gt;
除了&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/%e8%81%94%e9%80%9a%e6%95%b0%e7%a0%81%e8%a7%86%e8%ae%afq7%e7%94%b5%e8%a7%86%e7%9b%92%e5%ad%90%e5%88%b7%e6%9c%ba%e6%88%90%e5%8a%9f-%e4%bd%86%e8%bf%99q7%e7%9b%92%e5%ad%90%e6%98%af%e7%9c%9f%e7%9a%84%e5%9e%83%e5%9c%be/&#34;  title=&#34;Q7盒子垃圾-&amp;gt;&#34;
    &gt;&amp;ldquo;联通(数码视讯)Q7电视盒子刷机成功, 但这Q7盒子是真的垃圾!&amp;rdquo;&lt;/a&gt;帖子中所用的工具及软件外, 还需要用到:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4G或以上大小的TF卡 + 读卡器&lt;br&gt;
用于制做盒子启动盘(TF卡)。&lt;/li&gt;
&lt;li&gt;镜像写入U盘工具&lt;br&gt;
用于把固件镜像文件写到TF卡里。&lt;br&gt;
Windows上这类工具很多, 选用的是&lt;a class=&#34;link&#34; href=&#34;https://www.alexpage.de/download/usbit/usbit.zip&#34;  title=&#34;USB Image Tool-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;USB Image Tool&lt;/a&gt;, 绿色软件, 不需要安装。&lt;/li&gt;
&lt;li&gt;安卓调试工具&lt;a class=&#34;link&#34; href=&#34;https://dl.google.com/android/repository/platform-tools_r31.0.0-windows.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ADB&lt;/a&gt;&lt;br&gt;
用于设置Q7从TF卡启动。&lt;/li&gt;
&lt;li&gt;下载&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4076037-1-1.html&#34;  title=&#34;多盒OP固件-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;55+、55+O S905x3、S922x、贝壳云、我家云、微加云等OP固件&amp;rdquo;&lt;/a&gt;文中所附的固件包。&lt;br&gt;
用的是目录&amp;quot;N1-Openwrt_U盘直刷包&amp;quot;下的最新固件包, 当前是:&lt;br&gt;
&amp;ldquo;openwrt_s905d_n1_R21.2.1_k5.4.105-flippy-55+o.7z&amp;rdquo;&lt;br&gt;
解开压缩文件, 其中&amp;quot;openwrt_s905d_n1_R21.2.1_k5.4.105-flippy-55+o.img&amp;quot;就是要用的固件包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;刷机流程&#34;&gt;刷机流程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;破解Q7&lt;br&gt;
按照&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/%e8%81%94%e9%80%9a%e6%95%b0%e7%a0%81%e8%a7%86%e8%ae%afq7%e7%94%b5%e8%a7%86%e7%9b%92%e5%ad%90%e5%88%b7%e6%9c%ba%e6%88%90%e5%8a%9f-%e4%bd%86%e8%bf%99q7%e7%9b%92%e5%ad%90%e6%98%af%e7%9c%9f%e7%9a%84%e5%9e%83%e5%9c%be/&#34;  title=&#34;Q7盒子垃圾-&amp;gt;&#34;
    &gt;&amp;ldquo;联通(数码视讯)Q7电视盒子刷机成功, 但这Q7盒子是真的垃圾!&amp;rdquo;&lt;/a&gt;帖子的做法, 破解Q7.&lt;br&gt;
按&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/&#34;  title=&#34;恩山-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;恩山论坛&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-593965.html&#34;  title=&#34;len_-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Len_&lt;/a&gt;大侠的说法, &amp;ldquo;Q7需要刷过第三方固件才能确定能从卡和U盘启动&amp;rdquo;, 而Q7原厂固件无法确定能做到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;del&gt;打开Q7的USB调试功能。(大概操作, 跟安卓手机也差不多)&lt;/del&gt;&lt;br&gt;
&lt;del&gt;正常打开Q7, 按正常方式使用遥控器操作, 进入&amp;quot;设置&amp;quot;(类似安卓的设置界面), 找到&amp;quot;关于设备&amp;quot;-&amp;ldquo;版本号&amp;rdquo;, 连续点击版本号很多次, 可能是十次, 也可能是七次, 试吧&amp;hellip;&lt;/del&gt;&lt;br&gt;
&lt;del&gt;然后退回&amp;quot;设置&amp;quot;界面, 就出现&amp;quot;开发者选项&amp;quot;, 进去就可以找到&amp;quot;USB调试&amp;quot;, 然后打开&amp;quot;USB调试&amp;quot;。&lt;/del&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;制作启动TF卡&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择镜像文件&lt;br&gt;
按&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-593965.html&#34;  title=&#34;len_-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Len_&lt;/a&gt;大侠的说法, 在目录&amp;quot;N1-Openwrt_U盘直刷包&amp;quot;下的包都可以刷, 选了最新的55+o版本, 文件是&amp;quot;openwrt_s905d_n1_R21.2.1_k5.4.105-flippy-55+o.7z&amp;quot;, 解压出&amp;quot;openwrt_s905d_n1_R21.2.1_k5.4.105-flippy-55+o.img&amp;quot;文件。&lt;/li&gt;
&lt;li&gt;用镜像写入U盘工具&lt;a class=&#34;link&#34; href=&#34;https://www.alexpage.de/download/usbit/usbit.zip&#34;  title=&#34;USB Image Tool-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;USB Image Tool&lt;/a&gt;把img文件写到TF卡里&lt;/li&gt;
&lt;li&gt;修改TF卡根目录下的&amp;quot;uEnv.txt&amp;quot;文件, 如下图:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/27-q7-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;uEnv.txt&#34;
	
	
&gt;
即FDT要改为p212这个dtb文件(这个文件要确认在tf卡相应的目录下存在)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;del&gt;把TF卡插入到Q7的TF卡槽中, 使用ADB工具, 设置Q7从TF卡启动&lt;/del&gt;&lt;br&gt;
&lt;del&gt;连接Q7:&lt;/del&gt;~~&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;# adb connect Q7地址&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;查看连接状态:&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;# adb devices&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;重启Q7, 并设置成用cf卡或U盘等外围存储设备启动&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;# adb shell reboot update&lt;/del&gt;&lt;br&gt;
&lt;del&gt;(上面这个命令需要确认)&lt;/del&gt;&lt;br&gt;
&lt;del&gt;正常的话, 会重新从TF卡启动系统。&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从做好的TF卡启动盒子&lt;br&gt;
正常启动盒子, 进入电视盒子界面.&lt;br&gt;
下载&lt;a class=&#34;link&#34; href=&#34;https://apkpure.com/reboot-to-libreelec/me.thomastv.rebootupdate&#34;  title=&#34;Reboot to LibreELEC-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;Reboot to LibreELEC&amp;rdquo;&lt;/a&gt;, 这个apk设置系统首先从外部存储设备启动, 比如TF卡, 或者U盘.&lt;br&gt;
在盒子的界面上, 安装&lt;a class=&#34;link&#34; href=&#34;https://apkpure.com/reboot-to-libreelec/me.thomastv.rebootupdate&#34;  title=&#34;Reboot to LibreELEC-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;Reboot to LibreELEC&amp;rdquo;&lt;/a&gt;这个应用, 安装完成后运行这个APK, 并选择&amp;quot;ok&amp;quot;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/27-q7-02.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;uEnv.txt&#34;
	
	
&gt;&lt;br&gt;
正常情况下, 如果有外置存储设备可以启动, 则从外置存储设备启动,否则从内部的存储设备启动.&lt;br&gt;
比如, 插入了刷好固件的TF卡, 就会从TF卡启动, 运行openwrt; 如果没有, 就正常启动, 进入电视盒子界面.&lt;br&gt;
&lt;u&gt;但是, Q7这个盒子比较奇葩, 如果设置好了能从TF卡启动, 那么就只能从TF卡启动, 不插TF卡时会死在第一屏界面.&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把系统安装到内部存储&lt;br&gt;
系统里有提供安装工具(shell), 是/root/install-to-emmc.sh&lt;br&gt;
如果有需要可以使用这个shell将系统装入内部存储&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;完成后启动openwrt&#34;&gt;完成后启动&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Openwrt&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;使用tf卡启动, 成功地在Q7上运行了&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;openwrt&lt;/a&gt;.&lt;br&gt;
openwrt缺省地址: 192.168.1.1, 缺省用户/密码: root/password&lt;br&gt;
但是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不能设置wifi&lt;br&gt;
可能是无线网卡不能正常驱动。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用图片&#34;&gt;使用图片&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/27-q7-03.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;uEnv.txt&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;补充: 关于移动魔百盒R3300L(红)&lt;br&gt;
可以使用给Q7做的启动盘(TF卡)启动.&lt;br&gt;
用&lt;a class=&#34;link&#34; href=&#34;https://apkpure.com/reboot-to-libreelec/me.thomastv.rebootupdate&#34;  title=&#34;Reboot to LibreELEC-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;Reboot to LibreELEC&amp;rdquo;&lt;/a&gt;可以正常工作, 插卡从卡启动, 不插卡正常启动.&lt;br&gt;
用CoreMark测试分数比Q7略低, 差得并不多.&lt;br&gt;
R3300L和Q7内部配置基本一致，甚至包括芯片组:
&lt;ul&gt;
&lt;li&gt;相同的CPU,&lt;/li&gt;
&lt;li&gt;相同的wifi芯片,&lt;/li&gt;
&lt;li&gt;相同的内存+存储配置,&lt;/li&gt;
&lt;li&gt;壳子都是卡扣结构,&lt;/li&gt;
&lt;li&gt;都能从usb口给盒子供电，不受电源开关控制,&lt;/li&gt;
&lt;li&gt;都有tf卡槽。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他&#34;&gt;其他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关于TF卡的大小&lt;br&gt;
前面说过, TF卡要&amp;gt;4G。&lt;br&gt;
但是, 从使用情况看，TF卡仅有不到1G的空间分给了Openwrt要用的两个分区, 其中有一个是启动分区, 其它的空间都是空的。&lt;br&gt;
所以, 估计1G的TF卡也都能用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于Q7的供电&lt;br&gt;
帖子&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/%e8%81%94%e9%80%9a%e6%95%b0%e7%a0%81%e8%a7%86%e8%ae%afq7%e7%94%b5%e8%a7%86%e7%9b%92%e5%ad%90%e5%88%b7%e6%9c%ba%e6%88%90%e5%8a%9f-%e4%bd%86%e8%bf%99q7%e7%9b%92%e5%ad%90%e6%98%af%e7%9c%9f%e7%9a%84%e5%9e%83%e5%9c%be/&#34;  title=&#34;Q7盒子垃圾-&amp;gt;&#34;
    &gt;&amp;ldquo;联通(数码视讯)Q7电视盒子刷机成功, 但这Q7盒子是真的垃圾!&amp;rdquo;&lt;/a&gt;里面说过, Q7可以直接用USB端口的供电启动, 所以可以从别的设备的USB给Q7供电, 至少还可以少占一个电源插座。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CPUMark 测速&lt;br&gt;
命令如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# /etc/coremark.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;测速完成后, 在Luci管理界面, &amp;ldquo;状态&amp;rdquo;-&amp;ldquo;概览&amp;quot;里可以看到CpuMark值&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;再补充---关于网络共享服务&#34;&gt;再补充 - 关于网络共享服务&lt;/h2&gt;
&lt;p&gt;Openwrt中有提供多种网络存储服务, 包括Samba/NFS/miniDLNA/可道云/微力同步等多种相关功能。&lt;br&gt;
在给Q7刷Openwrt后, 还通过配置Samba+miniDLNA, 设置了一个简单的网络共享服务+多媒体服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;设置Sabmba服务&lt;br&gt;
操作如下:&lt;br&gt;
Luci界面-网络存储-&amp;ldquo;Samba&amp;rdquo;-&amp;ldquo;编辑模板&amp;quot;里改配置文件(没搞懂原因), 关掉&amp;quot;invalid users = root&amp;quot;这行&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;## set invalid users&lt;br&gt;
#invalid users = root&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设置共享目录&lt;br&gt;
设置如图:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/27-q7-04.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Samba设置&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;现象:&lt;br&gt;
用手机上有EsExplorer连接上后(当前也就只有手机能连上), 看不到共享的文件目录&lt;br&gt;
原因: 管理界面里共享目录的设置并没有生效, 还是需要手动修改配置文件&amp;rdquo;/etc/samba/smb.conf&amp;quot;进行设置(已确认重启后有效)&lt;br&gt;
但是, &amp;ldquo;Samba&amp;rdquo;-&amp;ldquo;编辑模板&amp;quot;却是有效的, 而且进入linux界面操作, 直接修改/etc/samba/smb.conf的相应内容却无效!~~~ 必须使用管理界面的&amp;quot;编译模板&amp;quot;进行修改!&lt;br&gt;
即: 改模板必须在&amp;quot;Samba&amp;rdquo;-&amp;ldquo;编辑模板&amp;quot;里, 改共享目录配置必须直接改&amp;rdquo;/etc/samba/smb.conf&amp;quot;文件&lt;br&gt;
处理:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/samba/smb.conf&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在文件最后面增加如下配置:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[Udisk]&lt;br&gt;
path = /mnt/mmcblk1p3&lt;br&gt;
create mask = 0777&lt;br&gt;
read only = no&lt;br&gt;
guest ok = yes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如图所示:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/27-q7-05.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Samba设置&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;然后重启samba服务:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service samba4 restart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用smbclient查看共享的情况:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# smbclient -L 192.168.1.206&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;会看到已经成功共享, 如图:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/27-q7-06.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Samba设置&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;注意:&lt;br&gt;
还需要对共享出的根目录权限做设置, 才能有读写全部权限&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# chmod 0777 /mnt/mmcblk1p3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置miniDLNA&lt;br&gt;
在X信电视上发现X信的媒体中心支持DLNA, 而Q7上的Openwrt里, &amp;ldquo;网络存储&amp;quot;下是有miniDLNA服务, 设置比较简单, 基本上是设置下目录, 打开功能就可以了。&lt;br&gt;
经过测试, 在X信电视上用自带的媒体中心可以播放视频、音频、图片等多种媒体, 还可以关屏幕播放mp3音乐。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But&amp;hellip;到最后, 重启Q7后, openwrt的Luci界面出错了, 进不了管理界面, 就此, 折腾Q7告一段落。
总结: Openwrt的SAMBA功能大致能用, miniDLNA功能也没问题, 都可以用。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>关于电视盒子刷机的好贴收集</title>
        <link>https://jimway71.github.io/p/%E5%85%B3%E4%BA%8E%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%88%B7%E6%9C%BA%E7%9A%84%E5%A5%BD%E8%B4%B4%E6%94%B6%E9%9B%86/</link>
        <pubDate>Sun, 07 Mar 2021 11:11:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E5%85%B3%E4%BA%8E%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%88%B7%E6%9C%BA%E7%9A%84%E5%A5%BD%E8%B4%B4%E6%94%B6%E9%9B%86/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-26.jpg" alt="Featured image of post 关于电视盒子刷机的好贴收集" /&gt;&lt;h2 id=&#34;折腾电视盒子httpsbh3nvngithubio202006s905&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://bh3nvn.github.io/2020/06/s905/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;折腾电视盒子&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/26-tvbox-01.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;折腾电视盒子&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;在斐讯n1盒子上刷入linux系统代替树莓派做小型服务器&#34;&gt;在斐讯N1盒子上刷入Linux系统代替树莓派做小型服务器&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/38456769&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;知乎: 在斐讯N1盒子上刷入Linux系统代替树莓派做小型服务器&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;r3300l运行coreelec-emuelec和armbianhttpswwwcnblogscommiltonp11883811html&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/milton/p/11883811.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;R3300L运行CoreELEC, EmuELEC和Armbian&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/26-tvbox-02.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;折腾电视盒子&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;百视通r3300l刷写固件及emuelec&#34;&gt;百视通R3300L刷写固件及EMUELEC&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.shmily.one/anything/r3300l-s905l-flash-emuelec.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shmily: 百视通R3300L刷写固件及EMUELEC&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>再刷移动魔百和CM201-2电视盒子</title>
        <link>https://jimway71.github.io/p/%E5%86%8D%E5%88%B7%E7%A7%BB%E5%8A%A8%E9%AD%94%E7%99%BE%E5%92%8Ccm201-2%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90/</link>
        <pubDate>Sat, 06 Mar 2021 16:14:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E5%86%8D%E5%88%B7%E7%A7%BB%E5%8A%A8%E9%AD%94%E7%99%BE%E5%92%8Ccm201-2%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-25.jpg" alt="Featured image of post 再刷移动魔百和CM201-2电视盒子" /&gt;&lt;h2 id=&#34;参考&#34;&gt;参考:&lt;/h2&gt;
&lt;h3 id=&#34;u盘刷机&#34;&gt;U盘刷机&lt;/h3&gt;
&lt;p&gt;使用U盘刷机&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://www.znds.com/tv-1152186-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【潜龙定制】CM201-2(mv300H,310,300-emmc,nand)语音强刷固件201910&lt;/a&gt;&lt;br&gt;
● 难度: 极低&lt;br&gt;
● 所需工具及软件: U盘+刷机文件(一共4个文件)&lt;br&gt;
● 是否需要拆机:  不需要 _ 如果知道盒子准确类型的话。&lt;br&gt;
● 结果: 完全重刷盒子固件。&lt;br&gt;
● 注意点: 需要区分盒子闪存是EMMC还是NAND。 4文件中个有3个文件不一样, 对应不同的闪存。&lt;br&gt;
● 操作: 把4个文件拷到U盘根目录, U盘插到cm201-2盒子:&lt;br&gt;
如果是开机状态, 电视上会显示找到新的系统需要升级; 如果是关机状态, 开机即自动刷机。&lt;/p&gt;
&lt;h3 id=&#34;ttl连接刷机&#34;&gt;TTL连接刷机&lt;/h3&gt;
&lt;p&gt;使用TTL连上盒子, 进入内部系统(linux), 把需要的apk应用装进系统。&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://www.znds.com/tv-1033164-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;江苏移动魔百和cm201-2拆机ttl安装软件教程&lt;/a&gt;&lt;br&gt;
● 难度: 略高&lt;br&gt;
● 所需要工具及软件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;U盘&lt;/li&gt;
&lt;li&gt;需要安装的apk&lt;/li&gt;
&lt;li&gt;排针、烙铁、焊锡等&lt;/li&gt;
&lt;li&gt;万用表&lt;/li&gt;
&lt;li&gt;USB转TTL模块，连接线&lt;/li&gt;
&lt;li&gt;拆机工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;● 是否需要拆机:  需要&lt;br&gt;
● 结果:  未对盒子底层系统做修改, 仅安装了几个apk。&lt;br&gt;
选用的是TTL连接盒子的方式。&lt;/p&gt;
&lt;h2 id=&#34;破解方法&#34;&gt;破解方法&lt;/h2&gt;
&lt;p&gt;破解方法很多:&lt;br&gt;
● 不拆机破解&lt;br&gt;
这是利用系统漏洞破解, 通过漏洞是装上可以装App的市场或其他工具。&lt;br&gt;
● 更新固件刷机&lt;br&gt;
刷入自制的系统, 除了硬件没变, 原系统的固件都没有了。&lt;br&gt;
因为移动魔百和CM201的型号极其杂乱, 各地移动公司都有出, 不同厂家代工, 另外不同年份出的盒子硬件都有不同, 同款盒子还有闪存不同, 所以这种方式需要区分型号后, 再找相应的刷机固件。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/25-cm201-2-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;同款板子使用不同类型闪存&#34;
	
	
&gt;&lt;br&gt;
↑ 同款板子使用不同类型闪存&lt;br&gt;
● TTL连接进入底层系统刷机&lt;br&gt;
板子上有TTL接口, 手上又有相应的工具材料的话, 这倒是最简单的一种破解方法, 因为通过TTL连进系统后, 就有了全部权限(root用户)。&lt;/p&gt;
&lt;h1 id=&#34;关于移动魔百和cm201&#34;&gt;关于移动魔百和CM201&lt;/h1&gt;
&lt;p&gt;移动魔百和CM201从型号上分大概有cm201s、cm201-1、 cm201-2等等, 代工方有朝歌、长虹、易视腾等等, 外观倒差不多, 都是一个小黑盒子。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/25-cm201-2-02.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;外壳&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/25-cm201-2-03.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;外壳&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/25-cm201-2-04.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;TTL接口&#34;
	
	
&gt;&lt;br&gt;
↑ 这块板子上有TTL接口，但没有插针, 也没有标注针脚定义&lt;/p&gt;
&lt;h2 id=&#34;刷机过程&#34;&gt;刷机过程&lt;/h2&gt;
&lt;h3 id=&#34;硬件准备&#34;&gt;硬件准备&lt;/h3&gt;
&lt;p&gt;● 给板子的TTL接口焊上排针&lt;br&gt;
● 用排线连接板子上TTL针脚和USB转TTL模块，连接如下:&lt;br&gt;
(收发对倒连接)  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;板上脚标 - 模块脚标&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GND - GND&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RX    -  TX&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TX    -  RX&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;● TTL模块插入电脑USB口&lt;br&gt;
在电脑&amp;quot;设备管理器&amp;quot;-&amp;ldquo;端口&amp;quot;里找到com端口(comx) —— 这个端口号在后面设置电脑上putty连接盒子时要用到， &amp;ldquo;属性&amp;rdquo;-&amp;ldquo;端口设置&amp;rdquo;-&amp;ldquo;位/秒(B)&amp;quot;(波特率), 改为115200。&lt;br&gt;
抄个图过来↓&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/25-cm201-2-05.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;抄图&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;软件准备&#34;&gt;软件准备&lt;/h3&gt;
&lt;p&gt;● 准备要安装的应用&lt;br&gt;
一定要有一个桌面应用, 比如当贝桌面;&lt;br&gt;
一定要有一个可以做安装的app, 比如市场应用(比如蚂蚁市场), 或者是一个文件管理器, 比如File Manager, 文件管理器也可以安装apk应用。&lt;br&gt;
把想要安装的apk包拷到一个U盘的根目录里, 插到盒子的USB口上&lt;br&gt;
● 设置电脑和盒子的连接。&lt;br&gt;
设置使用putty连接。&lt;br&gt;
putty官网下载地址在&lt;a class=&#34;link&#34; href=&#34;https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这&lt;/a&gt;。&lt;br&gt;
可以用来做串口连接的软件很多, 比如securecrt等等, 不过putty是免费软件, 也不需要注册什么的, 安装使用上比较方便。&lt;br&gt;
打开putty, 按图中的提示设置。下面这个图也是抄的&amp;hellip;&amp;hellip;  ↓&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/25-cm201-2-06.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;抄图&#34;
	
	
&gt;&lt;br&gt;
先选择连接方式(Connection type)为串口连接(Serial), 再选择串口号(Serial line), 串口号是前面的&amp;quot;设备管理器&amp;quot;里找到的com端口，波特率(Speed)填115200(和前面的Com口波特率一致)。&lt;br&gt;
接着点击Open开始连接，然后给盒子开机，连接正确的话, 盒子开机后, putty上会显示盒子的输出信息, 是个linux的终端界面(Console界面)。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/25-cm201-2-07.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;COM5-PuTTY&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装apk应用-修改界面&#34;&gt;安装apk应用, 修改界面&lt;/h3&gt;
&lt;p&gt;在putty的连接界面上，输入命令执行操作。&lt;br&gt;
首先要确认下U盘的目录名, 了解linux的应该知道, 外挂的盘一般会加载到/mnt目录下, 一般而言, U盘会加载到&amp;rdquo;/mnt/sda/sda1&amp;quot;目录下, 用ls命令可以确认是否正确&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ls /mnt/sda/sda1/ -la&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果正确, 则进入U盘根目录&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# cd /mnt/sda/sda1/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;把apk包拷贝到&amp;rdquo;/usr/app/&amp;ldquo;目录下, 即完成apk包的安装&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# cp *.apk /usr/app/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;启动当贝桌面&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# am start com.dangbei.tvlauncher&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装完成。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;## 实际和现实总有差距!&lt;/del&gt;&lt;br&gt;
&lt;del&gt;因为把U盘刷机的4个文件也拷到了U盘根目录下, 盒子开机后提示有更新, 因为连着网络, 还以为是在线更新, 没理。&lt;/del&gt;&lt;br&gt;
&lt;del&gt;后来重启盒子后, 盒子就直接开始更新, 这时也不敢停, 怕刷一半给刷成砖了。&lt;/del&gt;&lt;br&gt;
&lt;del&gt;等刷完了, 也退不回去了, 没有官方固件。&lt;/del&gt;&lt;br&gt;
&lt;del&gt;更新完成后重启, 看到的已经是另一幅模样了, 不过通过TTL拷进去的几个应用都在, 两种方法齐上, 搞成了混合刷机。&lt;/del&gt;&lt;br&gt;
从系统管理菜单里恢复出厂后(密码:10086), 又重做了一遍, 这回没出问题。&lt;/p&gt;
&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;
&lt;p&gt;也没怎么测, 系统用着没问题, 遥控没问题, 操作反应够快, 应用运行也够快。&lt;br&gt;
用speedtest测了下网速, 使用wifi连接的情况下, 可以到80Mbps左右, 速度也还可以。&lt;/p&gt;
&lt;h2 id=&#34;迁移补记-于-2022823&#34;&gt;迁移补记 于 2022.8.23&lt;/h2&gt;
&lt;p&gt;● 最近一次查看这部CM201-2盒子时, 发现又回到了类似初始的状态, 已经不是能自定义的桌面, 应该是系统再次自动更新, 又&lt;strong&gt;回到未刷机的状态&lt;/strong&gt;。&lt;br&gt;
● 近期在论坛上看到有大神将Armbian移植到基于海思Hi3798芯片的多种电视盒子, 包括CM201-2盒子, 有时间可以try.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.znds.com/tv-1207323-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;打造最强华为海思hi3798mv100/200/300机顶盒NAS服务器系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://bbs.histb.com/d/233-rk322x-armbian-hi3798-mv100&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;rk322x armbian 移植hi3798 mv100&lt;/a&gt;, 其中:&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://pan.baidu.com/s/1kGh4qKXxyn8IvGccODxLoQ&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;百度云共享&lt;/a&gt;, 提取码：slkc&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/FORUM/thread-4084778-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;移动魔百和cm201-1-ys刷armbian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有Armbian For S9xxx的Github链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;amlogic-s9xxx-armbian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hixxxx support for Linux Kernel 代码现在看着都有了:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/teasiu/HiSTBLinuxKernel&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HiSTBLinuxKernel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/torvalds/linux/tree/master/arch/arm64/boot/dts/hisilicon&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;torvalds linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://bbs.histb.com/d/83-hi3798&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hi3798可适配机型维护参考&lt;/a&gt;, From &lt;a class=&#34;link&#34; href=&#34;https://bbs.histb.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;海思机顶盒NAS社区&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>联通(数码视讯)Q7电视盒子刷机成功, 但这Q7盒子是真的垃圾</title>
        <link>https://jimway71.github.io/p/%E8%81%94%E9%80%9A%E6%95%B0%E7%A0%81%E8%A7%86%E8%AE%AFq7%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%88%B7%E6%9C%BA%E6%88%90%E5%8A%9F-%E4%BD%86%E8%BF%99q7%E7%9B%92%E5%AD%90%E6%98%AF%E7%9C%9F%E7%9A%84%E5%9E%83%E5%9C%BE/</link>
        <pubDate>Tue, 02 Mar 2021 17:17:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E8%81%94%E9%80%9A%E6%95%B0%E7%A0%81%E8%A7%86%E8%AE%AFq7%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%88%B7%E6%9C%BA%E6%88%90%E5%8A%9F-%E4%BD%86%E8%BF%99q7%E7%9B%92%E5%AD%90%E6%98%AF%E7%9C%9F%E7%9A%84%E5%9E%83%E5%9C%BE/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-24.jpg" alt="Featured image of post 联通(数码视讯)Q7电视盒子刷机成功, 但这Q7盒子是真的垃圾" /&gt;&lt;h2 id=&#34;关于联通q7电视盒子&#34;&gt;关于联通Q7电视盒子&lt;/h2&gt;
&lt;p&gt;Q7配置如下:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-02.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;配置&#34;
	
	
&gt; &lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-03.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;照片&#34;
	
	
&gt; &lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-04.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;照片&#34;
	
	
&gt;   &lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-05.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;照片&#34;
	
	
&gt;   &lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-06.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;照片&#34;
	
	
&gt;   &lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-07.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;照片&#34;
	
	
&gt;   &lt;br&gt;
USB BOOT孔(红圈内两个孔): 刷机时需要短接&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-08.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;照片&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;破解方式&#34;&gt;破解方式&lt;/h2&gt;
&lt;p&gt;联通(数码视讯)Q7(以下简称Q7)有很多种破解方式:&lt;/p&gt;
&lt;p&gt;➀ 不拆机破解: 主要通过漏洞是装上可以装App的市场或其他工具&lt;/p&gt;
&lt;p&gt;➁ TTL破解: 连接TTL线，通过进入底层系统打开adb调试, 再通过其它工具安装App,&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/ayxiaopan/p/11927675.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;北京联通盒子-数码视讯Q7-破解&lt;/a&gt;&lt;br&gt;
或者在底层的Linux系统里直接安装App.&lt;/p&gt;
&lt;p&gt;➂ 使用USB Burn方式刷机: 直接刷成别的系统，&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4056563-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【2020年11月】北京联通数码视讯Q7破解教程&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;破解教程&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最后用的是方式➂进行刷机。&lt;/strong&gt;&lt;br&gt;
相关的包下载地址:&lt;br&gt;
o 刷机固件:&lt;br&gt;
链接：&lt;a class=&#34;link&#34; href=&#34;https://pan.baidu.com/s/18ukQVyQiScAeQPCReoBr0Q&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pan.baidu.com/s/18ukQVyQiScAeQPCReoBr0Q&lt;/a&gt;
提取码：yp6t&lt;br&gt;
使用其中的压缩包: 20191218-Q7-4.4.2-root-twrp-Milton.rar&lt;br&gt;
o 遥控器文件:&lt;br&gt;
压缩包: 北京联通数码视讯Q7.rar&lt;br&gt;
在上面链接的固件里找。&lt;br&gt;
o 刷机软件&lt;a class=&#34;link&#34; href=&#34;https://androidmtk.com/download-amlogic-usb-burning-tool&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;USB Burn Tool&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;刷机过程&#34;&gt;刷机过程&lt;/h2&gt;
&lt;p&gt;➀ 拆机&lt;br&gt;
Q7盒子外壳是用卡扣固定, 而非螺丝，用改锥插入盒子外壳边缘撬开。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-09.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;拆机&#34;
	
	
&gt;&lt;br&gt;
板子上有螺丝固定, 需要拆掉。&lt;br&gt;
➁ 刷机&lt;br&gt;
用双公头USB线连接盒子(板子中间的USB口)和电脑的USB口。&lt;br&gt;
USB连上后，电脑在开机状态时，会给盒子供电，盒子会开机运行 (即Q7这个盒子可以直接从USB口供电，即使没接电源，或者接了电源没按下开电源开关也能正常开机运行)。&lt;br&gt;
刷机流程:&lt;br&gt;
➀ 先打开开Ami USB Burn Tool软件, 导入镜像文件后，按开始按键:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-10.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;刷机&#34;
	
	
&gt;&lt;br&gt;
➁ 短接板子USB BOOT那两个触点后, 用双头USB线连接盒子和电脑, 这时盒子上的灯会亮, 但HDMI没有输出(电视不会有显示), USB Burn Tools软件上会显示找到设备并开始刷入固件, 这时保持USB BOOT触点的短接。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-11.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;刷机&#34;
	
	
&gt;&lt;br&gt;
➂ 等到刷过 &amp;ldquo;4% 加载UBOOT&amp;rdquo; 后, 断开短接的USB BOOT触点，再等待刷机到100%&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-12.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;刷机&#34;
	
	
&gt;&lt;br&gt;
刷机完成。&lt;/p&gt;
&lt;p&gt;刷机流程可参考: &lt;a class=&#34;link&#34; href=&#34;https://www.codenong.com/cs105475272/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;北京联通数码视讯q7 刷 安卓6.0+遥控器文件教程&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-13.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;刷机&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;另: 刷机所用软件&amp;quot;Ami USB Burn Tool&amp;quot;不能在Win10上使用, Win7上使用没问题:&lt;br&gt;
刷机时, 先用的是工作机操作, 发现USB Burn Tool软件找不到设备, 后来换了一台旧电脑就可以了 _ 旧电脑是Win7系统, 而工作机装的是Win10.&lt;/p&gt;
&lt;h2 id=&#34;刷机完成后的测试&#34;&gt;刷机完成后的测试&lt;/h2&gt;
&lt;p&gt;➀ 开机界面&lt;br&gt;
这样:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-14.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;刷机&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;和这样:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-15.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;刷机&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;很差点意思!&lt;br&gt;
➁ CpuZ测试&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-16.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;刷机&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;➂ 网络测速&lt;br&gt;
测试方式: 在浏览器里打开&lt;a class=&#34;link&#34; href=&#34;https://www.speedtest.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;speedtest&lt;/a&gt;进行测试&lt;br&gt;
使用wifi连接(Q7只支持2.4G频段的wifi)&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-17.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;刷机&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;而在同样网络下, 同样使用Wifi连接的一台电视, 同样也只支持2.4G的wifi, 是这样的&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/24-q7-18.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;刷机&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;Q7明显的慢, 打开App明显慢也就算了, 居然有的App里连视频都打不开, 不行, 非常差。&lt;br&gt;
这盒子很垃圾, 用的居然还是2.4G无线网卡和百兆有线网卡, 用wifi连接, 网速根本跑不上去, 高清视频看着非常卡。&lt;br&gt;
除了S905L这颗芯还凑合能用, 这个盒子其它没有什么可取之处！&lt;br&gt;
(后话, 做电视盒子不行, 干别的活还不错)&lt;/p&gt;
</description>
        </item>
        <item>
        <title>华为P40 pro安装谷歌GMS, 可以正常同步通讯录, 其它功能都能正常运行, 且不报错</title>
        <link>https://jimway71.github.io/p/%E5%8D%8E%E4%B8%BAp40-pro%E5%AE%89%E8%A3%85%E8%B0%B7%E6%AD%8Cgms-%E5%8F%AF%E4%BB%A5%E6%AD%A3%E5%B8%B8%E5%90%8C%E6%AD%A5%E9%80%9A%E8%AE%AF%E5%BD%95-%E5%85%B6%E5%AE%83%E5%8A%9F%E8%83%BD%E9%83%BD%E8%83%BD%E6%AD%A3%E5%B8%B8%E8%BF%90%E8%A1%8C-%E4%B8%94%E4%B8%8D%E6%8A%A5%E9%94%99/</link>
        <pubDate>Fri, 26 Jun 2020 16:52:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E5%8D%8E%E4%B8%BAp40-pro%E5%AE%89%E8%A3%85%E8%B0%B7%E6%AD%8Cgms-%E5%8F%AF%E4%BB%A5%E6%AD%A3%E5%B8%B8%E5%90%8C%E6%AD%A5%E9%80%9A%E8%AE%AF%E5%BD%95-%E5%85%B6%E5%AE%83%E5%8A%9F%E8%83%BD%E9%83%BD%E8%83%BD%E6%AD%A3%E5%B8%B8%E8%BF%90%E8%A1%8C-%E4%B8%94%E4%B8%8D%E6%8A%A5%E9%94%99/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-23.jpg" alt="Featured image of post 华为P40 pro安装谷歌GMS, 可以正常同步通讯录, 其它功能都能正常运行, 且不报错" /&gt;&lt;p&gt;2019年由于美国政府封杀华为，在政策要求下, 谷歌不再给华为提供GMS许可。&lt;/p&gt;
&lt;p&gt;而在这之前，由于中国政府封杀谷歌, 国行版本手机都是没有安装谷歌Play Store的, 包括华为手机。&lt;br&gt;
但是谷歌服务框架, 即GMS, 在华为手机上是安装好的。只需要从华为应用商店简单的下载安装谷歌Play Store, 就可以正常使用谷歌的服务及其应用。&lt;/p&gt;
&lt;p&gt;在谷歌不再给华为提供GMS许可之后, 华为官方就不在其生产的手机上安装谷歌相应的服务和应用, 包括国行版本和非国行版本。&lt;br&gt;
华为在国行手机上不提供谷歌服务影响不大，毕竟谷歌在国内被封杀多年, 还能使用谷歌服务的用户并不太多; 但是, 国外安卓用户对谷歌服务有着相当大的依赖性, 手机上不能提供谷歌服务对多数国外用户而言, 基本上是无法使用的。&lt;br&gt;
为此, 华为也想过一些方法: 这之后不久, 有一个&lt;a class=&#34;link&#34; href=&#34;lzplay.net&#34;  title=&#34;lzplay -&amp;gt;&#34;
    &gt;lzplay&lt;/a&gt;网站横空出世, 为华为手机安装GMS提供支持, 但之后不久, 这个网站又突然消失了。&lt;br&gt;
这段故事我也是在寻找在P40pro上安装GMS的方法时才知道一点，由于当时并没有关注, 具体情况也不清楚。&lt;/p&gt;
&lt;p&gt;这之后，在网上找到的安装GMS方法基本上都是个人提供的, 但跟&lt;a class=&#34;link&#34; href=&#34;lzplay.net&#34;  title=&#34;lzplay -&amp;gt;&#34;
    &gt;lzplay&lt;/a&gt;都存在一定的关系。&lt;/p&gt;
&lt;p&gt;为了给一部华为P40 pro安装GMS, 前后大概花了一个月时间, 找了好几个教程, 失败了很多次, 失败的原因也是多种多样, 有:&lt;br&gt;
a. 不能同步通讯录(最后一次, 更换另一个人提供的Google Contact Sync后解决)&lt;br&gt;
b. 设置谷歌帐户时, 似乎网络连不上, 但用浏览器看, 却又能正常访问谷歌(有时重新启动后能解决)&lt;br&gt;
&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;找了很多攻略, 国内的国外的, 试了各种方式, 花了不少时间, 并没有找到一个完美方案。&lt;br&gt;
最后, 把华为手机处理了事, 完美的结局☻&lt;/p&gt;
</description>
        </item>
        <item>
        <title>WSL下编译LEDE的openwrt, 用于斐讯K2</title>
        <link>https://jimway71.github.io/p/wsl%E4%B8%8B%E7%BC%96%E8%AF%91lede%E7%9A%84openwrt-%E7%94%A8%E4%BA%8E%E6%96%90%E8%AE%AFk2/</link>
        <pubDate>Mon, 01 Jun 2020 01:06:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/wsl%E4%B8%8B%E7%BC%96%E8%AF%91lede%E7%9A%84openwrt-%E7%94%A8%E4%BA%8E%E6%96%90%E8%AE%AFk2/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-22.jpg" alt="Featured image of post WSL下编译LEDE的openwrt, 用于斐讯K2" /&gt;&lt;p&gt;2020.6.1&lt;/p&gt;
&lt;h3 id=&#34;openwrt编译命令汇总&#34;&gt;Openwrt编译命令汇总:&lt;/h3&gt;
&lt;p&gt;开始编译:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get update  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git clone https://github.com/coolsnowwolf/lede  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ./lede  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ vim feeds.conf.default  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ./scripts/feeds update -a  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ./scripts/feeds install -a  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make menuconfig  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在make menuconfig中:&lt;br&gt;
选择: MediaTek Ralink MIPS / MT7620 based boards /Phicomm PSG128 rev.Ax&amp;quot;&lt;br&gt;
选择: Luci _ Application _ SSR PLUS&amp;hellip;&amp;quot;&lt;br&gt;
说明: 斐讯K2路由器, CPU型号为MT7620, 芯片架构为MIPS, 路由器型号为PSG1218 rev.Ax; K1 是 PSG1208,K2 是 PSG1218 rev.Ax, K2C是PSG1218 rev.Bx&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Target system -&amp;gt; MediaTek Ralink MIPS  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Subtarget -&amp;gt; MT7620 based boards  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Target Profile -&amp;gt; Phicomm PSG128 rev.Ax  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;继续编译:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make -j8 download &lt;span class=&#34;nv&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;s  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make -j15 &lt;span class=&#34;nv&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;s  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;由于空间不够，luci-&amp;gt;application留下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;accesscontrol  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- adbyby-plus  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;arpbind  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autoreboot  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- ddns  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;firewall  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;flowoffload  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- nlbwmon 流量监控  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ramfree  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssr_plus + trojan  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;upnp  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(因为不能保存配置, 再去掉IPV6支持)  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不知道为什么, 内网的网段(ip)不能成功修改, 每次改过后, 路由就不能保存(或者会丢失)修改的内容: 需要在编译的时候就改掉这个地址。&lt;br&gt;
位于: ./package/base-files/files/bin/config_generate&lt;br&gt;
在make menuconfig完成后修改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于用WSL代替虚拟机运行Ubuntu:&lt;br&gt;
当前WSL上Ubuntu最早版本是18.04LTS(16.04LTS已经没有了)，最新的是20.04LTS&lt;br&gt;
用WSL比较简单, 不用费劲去安装, 但移动虚拟机会很麻烦。这个问题可以参考:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在系统重置或重新安装之前，如何备份（WSL）Windows 10的Linux子系统: &lt;br&gt;
Windows 10 v1903 包含内置的WSL导出/导入命令。具体来说，wsl &amp;ndash;export会产生tar和wsl &amp;ndash;import，并会导入先前导出的tar。然后，您可以在计算机之间移动此文件。 您还可以使用指定stdin / stdout -，这应允许您直接转移到另一台计算机并使用远程shell（如）导入ssh。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;错误处理&#34;&gt;错误处理:&lt;/h3&gt;
&lt;p&gt;1 sudo apt-get install gcc-multilib g++-multilib&lt;br&gt;
原因：type_traits:38:10: fatal error: bits/c++config.h: No such file or directory&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/4643197/missing-include-bits-cconfig-h-when-cross-compiling-64-bit-program-on-32-bit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/questions/4643197/missing-include-bits-cconfig-h-when-cross-compiling-64-bit-program-on-32-bit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 sudo apt install qtchooser&lt;br&gt;
原因: File &amp;ldquo;/usr/lib/python2.7/subprocess.py&amp;rdquo;, line 1047, in _execute_child&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://github.com/kovidgoyal/build-calibre/issues/9&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/kovidgoyal/build-calibre/issues/9&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;编译时长记录&#34;&gt;编译时长记录:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在Google云主机(e2-standard-8（8 个 vCPU，32 GB 内存), 30GSSD硬盘, Ubuntu 16.04)上完成，最后编译用了7个线程，总共用时不到1小时&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://mianao.info/2020/05/05/%E7%BC%96%E8%AF%91%E6%9B%B4%E6%96%B0OpenWrt-PassWall%E5%92%8CSSR-plus%E6%8F%92%E4%BB%B6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;编译更新OpenWrt PassWall和SSR-plus插件&lt;/a&gt; From &lt;a class=&#34;link&#34; href=&#34;https://mianao.info/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mianao&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/coolsnowwolf/lede&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Lean 的 Openwrt 源码仓库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>电视直播源</title>
        <link>https://jimway71.github.io/p/%E7%94%B5%E8%A7%86%E7%9B%B4%E6%92%AD%E6%BA%90/</link>
        <pubDate>Fri, 06 Mar 2020 01:31:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E7%94%B5%E8%A7%86%E7%9B%B4%E6%92%AD%E6%BA%90/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-21.jpg" alt="Featured image of post 电视直播源" /&gt;&lt;p&gt;抄自: &lt;a class=&#34;link&#34; href=&#34;https://kischang.top/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;kischang&lt;/a&gt;  的 &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;http://kischang.top/articles/2020/03/01/1583054275763.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2020高清稳定快速的电视直播源,支持在线更新,支持电视指南&lt;/a&gt;&amp;quot;(已404)&lt;/p&gt;
&lt;p&gt;首先感谢两个数据源：&lt;br&gt;
第一个：提供直播地址的服务：&lt;br&gt;
产品大师：&lt;a class=&#34;link&#34; href=&#34;http://www.chanpindashi.com/2020/01/18/2655.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.chanpindashi.com/2020/01/18/2655.html&lt;/a&gt;&lt;br&gt;
本服务从此地址获取基础的直播地址。&lt;/p&gt;
&lt;p&gt;第二个：电视指南&lt;br&gt;
51zmt： &lt;a class=&#34;link&#34; href=&#34;http://epg.51zmt.top:8000&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://epg.51zmt.top:8000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;工作逻辑说明：&lt;br&gt;
从直播地址源中获取基础的直播地址，解析处理后，发给电视指南，解析出对应的台标和指南对应关系，然后恢复到第一个源中的分组和台名信息。&lt;/p&gt;
&lt;p&gt;可以直接在 &lt;a class=&#34;link&#34; href=&#34;https://jellyfin.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jellyfin&lt;/a&gt; 中配置使用。&lt;br&gt;
最终的访问地址：&lt;a class=&#34;link&#34; href=&#34;http://kischang.top:8080/main/tv.m3u&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://kischang.top:8080/main/tv.m3u&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本服务缓存了配置，每隔 3 天自动更新，如果发现数据出错，您也可以自行触发清空缓存的动作：&lt;a class=&#34;link&#34; href=&#34;http://kischang.top:8080/main/re_gen&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://kischang.top:8080/main/re_gen&lt;/a&gt;&lt;br&gt;
不要总触发清空，毕竟每次更新都要占用数据源的服务器资源。&lt;br&gt;
源码地址：&lt;a class=&#34;link&#34; href=&#34;https://github.com/kisChang/tvm3u&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/kisChang/tvm3u&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;侵删&lt;/p&gt;
</description>
        </item>
        <item>
        <title>谷歌地图App不显示地点照片、评价等信息的解决方法</title>
        <link>https://jimway71.github.io/p/%E8%B0%B7%E6%AD%8C%E5%9C%B0%E5%9B%BEapp%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%9C%B0%E7%82%B9%E7%85%A7%E7%89%87%E8%AF%84%E4%BB%B7%E7%AD%89%E4%BF%A1%E6%81%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
        <pubDate>Thu, 05 Mar 2020 02:33:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E8%B0%B7%E6%AD%8C%E5%9C%B0%E5%9B%BEapp%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%9C%B0%E7%82%B9%E7%85%A7%E7%89%87%E8%AF%84%E4%BB%B7%E7%AD%89%E4%BF%A1%E6%81%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-17.jpg" alt="Featured image of post 谷歌地图App不显示地点照片、评价等信息的解决方法" /&gt;&lt;p&gt;说明: 在安卓手机上测试成功，苹果手机应该也可以。&lt;/p&gt;
&lt;p&gt;用了两年的这部三星手机上, 谷歌地图一直不能显示地点的照片和评价信息，一直以为是港行手机刷国行ROM造成的(在谷歌Play里, &amp;ldquo;&lt;strong&gt;Play保护机制认证&lt;/strong&gt;&amp;ldquo;显示&amp;rdquo;&lt;strong&gt;设备未通过认证&lt;/strong&gt;&amp;quot;)，也曾经找了些法子试着处理，但一直都没成功。&lt;/p&gt;
&lt;p&gt;今天突然发现备用的另一部国外版本Rom手机上, 谷歌地图居然也不显示地点照片和评价信息，而在谷歌Play里, &amp;ldquo;&lt;strong&gt;Play保护机制认证&lt;/strong&gt;&amp;ldquo;显示为&amp;rdquo;&lt;strong&gt;设备已通过认证&lt;/strong&gt;&amp;rdquo;, 那这个问题就跟设备认证没关系了。&lt;/p&gt;
&lt;p&gt;那是什么原因造成的呢? 上网搜到知乎的一个问答: &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/question/40255438&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何在大陆使用 Google Maps 的地点评价功能?&lt;/a&gt;&amp;rdquo;, 里面有不只一个人提到 &amp;ldquo;要取出(中国运营商的)SIM卡&amp;rdquo;, 那就试试吧。&lt;/p&gt;
&lt;p&gt;手上刚好有一张外国sim卡, 于是操作方式就成了:&lt;br&gt;
1.清除谷歌地图数据, 删除谷歌地图(或删除谷歌地图升级)&lt;br&gt;
2.关机, 取出&amp;quot;中国运营商的SIM卡&amp;rdquo;, 插入外国SIM卡&lt;br&gt;
3.开机, 重装谷歌地图&lt;br&gt;
4.测试&lt;/p&gt;
&lt;p&gt;完成后, 两部手机都能看到地点照片和评价信息, 问题解决了, 菜单里&amp;quot;您的时间轴&amp;quot;也出现了, 以前这个也没有。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/googlemap-on-phone-in-china.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;googlemap-on-phone-in-china&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在上面这个知乎问答里，有人提到要&amp;quot;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/question/40255438/answer/963968378&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在没插sim卡的时候，把各种谷歌的功能都先打开&lt;/a&gt;&lt;/strong&gt;&amp;quot;, 看来谷歌的各种服务对&amp;quot;&lt;strong&gt;(中国运营商的)SIM卡&lt;/strong&gt;&amp;ldquo;很敏感, 以后给手机装系统需要记住这一点。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Windows 10(版本1709)不能访问NAS的原因分析及处理</title>
        <link>https://jimway71.github.io/p/windows-10%E7%89%88%E6%9C%AC1709%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AEnas%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90%E5%8F%8A%E5%A4%84%E7%90%86/</link>
        <pubDate>Thu, 05 Mar 2020 01:53:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/windows-10%E7%89%88%E6%9C%AC1709%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AEnas%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90%E5%8F%8A%E5%A4%84%E7%90%86/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-16.jpg" alt="Featured image of post Windows 10(版本1709)不能访问NAS的原因分析及处理" /&gt;&lt;p&gt;问题:&lt;/p&gt;
&lt;p&gt;在Macbook pro上装了windows 10后, 访问家里的NAS一直是正常的。&lt;/p&gt;
&lt;p&gt;有一天, 突然访问不了, 报错是: windows无法访问xxx(NAS); 详细信息里的错误代码是0x80004005&lt;br&gt;
但是, 在其他的电脑上(Macbook+Thinkpad x230)和手机上(三星S9+Nubia Z11minis)都能正常访问&lt;/p&gt;
&lt;p&gt;处理:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在网上查报错的信息, 试了几种法子, 都没有解决&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过了很久了, 也没什么法子, 只好重装机器&lt;br&gt;
备份数据 &amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;先想是把机器恢复到初始状态&lt;br&gt;
恢复完成后, 还是不能访问NAS(奇怪? 但也没多想)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找出以前给这台机器装windows10时做的BootCamp的win10安装U盘和驱动U盘, Win10版本应该是1809&lt;/p&gt;
&lt;p&gt;回到Mac系统里, 删除BootCamp分区, 再从BootCamp里重新分区装windows10系统&lt;br&gt;
装完系统再装驱动, 再试, 依然不能访问NAS&lt;br&gt;
奇怪? 上次装完系统后, 肯定是能访问NAS的!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再去网上搜索, 终于找到一篇&amp;quot;&lt;a class=&#34;link&#34; href=&#34;http://www.52help.net/htips/168.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;windows 10无法访问其它系统或Nas共享的samba共享目录的解决办法&lt;/a&gt;&amp;quot;, 其中说道:&lt;br&gt;
问题的原因是: &amp;ldquo;造成新版Win10无法连接SAMBA网络共享的原因是，Win10强制屏蔽了不安全的samba v1和v2协议&amp;rdquo;&lt;br&gt;
解决的方法是: &amp;ldquo;控制面板-程序-程序和功能-启用或关闭windows功能，开启（勾选）SMB 1.0/CIFS文件共享支持&amp;rdquo;&lt;br&gt;
按这个方法操作, 问题解决.&lt;br&gt;
So easy&lt;/p&gt;
&lt;p&gt;原因再分析: 微软考虑到安全原因关闭了旧的SMB协议, 但是我家里的NAS只支持旧的SMB协议, 所以不能访问.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优化: 只打开SMB 1.0/CIFS客户端&lt;br&gt;
MBP上装的这个win10版本(1709)的&amp;quot;启动或或关闭windows功能&amp;quot;中, &amp;ldquo;SMB 1.0/CIFS文件共享支持&amp;quot;项目下打开有三项, 分别是:&lt;br&gt;
SMB 1.0/CIFS服务器&lt;br&gt;
SMB 1.0/CIFS客户端&lt;br&gt;
SMB 1.0/CIFS自动删除&lt;br&gt;
只要打开&amp;quot;SMB 1.0/CIFS客户端&amp;quot;就可以了, 关掉其它两项.&lt;br&gt;
经测试, 可以正常访问NAS&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>安装翻墙服务器(V2ray&#43;ss&#43;brook)</title>
        <link>https://jimway71.github.io/p/%E5%AE%89%E8%A3%85%E7%BF%BB%E5%A2%99%E6%9C%8D%E5%8A%A1%E5%99%A8v2ray-ss-brook/</link>
        <pubDate>Thu, 05 Mar 2020 01:53:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E5%AE%89%E8%A3%85%E7%BF%BB%E5%A2%99%E6%9C%8D%E5%8A%A1%E5%99%A8v2ray-ss-brook/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-15.jpg" alt="Featured image of post 安装翻墙服务器(V2ray&#43;ss&#43;brook)" /&gt;&lt;p&gt;简单说明:&lt;br&gt;
系统: Ubuntu 18.04 LTS。&lt;br&gt;
a.安装: V2RAY mKCP+dtls, AAAA; ss: BBBB; brook: CCCC。&lt;br&gt;
b.(V2ray安装的)shadowsocks改用了新的加密方式(AHEAD: chacha20-ietf-poly1305), 以避免被GFW检测到&lt;br&gt;
终端软件上, 不再使用单独的shadowsocks终端, 而改用v2ray终端(包含shadowsocks终端)&lt;br&gt;
电脑上使用V2rayN, 安卓手机上使用BifrostV&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在Ubuntu Server 18.04版上进行安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0.确认unzip已安装(可以直接运行unzip)&lt;/strong&gt;&lt;br&gt;
如果没有安装, 用下面命令装(如果unzip没有安装, 会自动提示这条命令)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# sudo apt install unzip&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.V2RAY+ss(单端口)安装, 再+BBR&lt;/strong&gt;&lt;br&gt;
V2RAY一键安装&lt;br&gt;
选择:&lt;br&gt;
V2RAY ~ 协议 mKCP_dtls, 端口 AAAA&lt;br&gt;
ss 和原来一样&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://ssr.tools/1026&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ssr.tools/1026&lt;/a&gt;
安装时, BBR自己就装上了&lt;/p&gt;
&lt;p&gt;使用233版V2ray一键安装脚本(集成BBR/锐速/Shadowsocks):&lt;/p&gt;
&lt;h1 id=&#34;bash-curl--s--l-httpsgitiov2raysh&#34;&gt;bash &amp;lt;(curl -s -L &lt;a class=&#34;link&#34; href=&#34;https://git.io/v2ray.sh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://git.io/v2ray.sh&lt;/a&gt;)&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;2.Brook安装&lt;/strong&gt;&lt;br&gt;
参考&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://doub.io/brook-jc1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doub.io/brook-jc1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1)下载&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# mkdir /root/brook/&lt;br&gt;
# cd /root/brook/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最新版本地址: &lt;a class=&#34;link&#34; href=&#34;https://github.com/txthinking/brook#download&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/txthinking/brook#download&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# wget -N &amp;ndash;no-check-certificate &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;https://github.com/txthinking/brook/releases/download/v20200201/brook%22&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/txthinking/brook/releases/download/v20200201/brook&#34;&lt;/a&gt;&lt;br&gt;
# chmod +x brook&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2)启动&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# nohup   ./brook server -l :CCCC-p passwd &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3)防火墙&lt;br&gt;
[ 现在没开云服务器ubuntu自身的防火墙iptable/ufw&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# sudo ufw  allow CCCC&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;云的防火墙也要打开&lt;/p&gt;
&lt;p&gt;4)开机自启动&lt;br&gt;
由于ubuntu 18.04的变化, 原rc.local初始不再有效, 需要处理, 参考:&lt;br&gt;
Ubuntu 18.04 rc.local systemd设置&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/zhengchaooo/article/details/80202599&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/zhengchaooo/article/details/80202599&lt;/a&gt;&lt;br&gt;
命令如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ln -fs /lib/systemd/system/rc-local.service /etc/systemd/system/rc-local.service&lt;br&gt;
# touch /etc/rc.local&lt;br&gt;
# chmod 755 /etc/rc.local&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;并在/etc/rc.local第一行加上下面这行:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#!/bin/bash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后面一样&lt;br&gt;
参考&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://blog.csdn.net/fireroll/article/details/15503463&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://blog.csdn.net/fireroll/article/details/15503463&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;放在/etc/rc.local里&lt;br&gt;
加入:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nohup   /root/brook/brook server -l :CCCC-p passwd &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意brook所在目录&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.谷歌云防火墙开端口(需要打开相应端口的tcp/udp端口)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.本机ubuntu防火墙(ufw/iptables)不开&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.设置时区&lt;/strong&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://www.cnblogs.com/h2appy/archive/2008/11/27/1342029.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.cnblogs.com/h2appy/archive/2008/11/27/1342029.html&lt;/a&gt;&lt;br&gt;
tzselect&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.定时关机&lt;/strong&gt;&lt;br&gt;
cron里的时间是标准时间(GMT)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://www.cnblogs.com/peida/archive/2013/01/08/2850483.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.cnblogs.com/peida/archive/2013/01/08/2850483.html&lt;/a&gt;&lt;br&gt;
cron任务分两类, 系统任务_在/etc/crontab里; 用户任务_在/var/spool/cron/crontabs/里&lt;br&gt;
crontab -e是编辑用户任务, crontab -l是显示用户任务.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cat /etc/crontab  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# /etc/crontab: system-wide crontab  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Unlike any other crontab you don&amp;#39;t have to run the `crontab&amp;#39;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# command to install the new version when you edit this file  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# and files in /etc/cron.d. These files also have username fields,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# that none of the other crontabs do. 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SHELL=/bin/sh  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# m h dom mon dow user  command  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;17 *    * * *   root    cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.hourly  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.daily )  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.weekly )  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.monthly )  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;30 21 * * 2,4,6,0 root reboot  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;每周2,4,6,0 _ GMT时间21:30分(中国时间5:30)用户root重启&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://blog.csdn.net/xiyuan1999/article/details/8160998&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://blog.csdn.net/xiyuan1999/article/details/8160998&lt;/a&gt;&lt;br&gt;
查看调度任务&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# crontab -l //列出当前的所有调度任务&lt;br&gt;
# crontab -l -u jp   //列出用户jp的所有调度任务&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>在美国租车</title>
        <link>https://jimway71.github.io/p/%E5%9C%A8%E7%BE%8E%E5%9B%BD%E7%A7%9F%E8%BD%A6/</link>
        <pubDate>Sat, 10 Jun 2017 00:32:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E5%9C%A8%E7%BE%8E%E5%9B%BD%E7%A7%9F%E8%BD%A6/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-14.png" alt="Featured image of post 在美国租车" /&gt;&lt;p&gt;2017.6.9&lt;/p&gt;
&lt;h4 id=&#34;使用中国驾照可以开车的州以及证件有效性&#34;&gt;使用中国驾照可以开车的州，以及证件有效性&lt;/h4&gt;
&lt;p&gt;　　持中国驾照可以在美国大部分州短期内合法驾车，但有少部分州是不可以持中国驾照开车，其中包括肯塔基州、麻萨诸塞州、密歇根州、新泽西州、俄亥俄州、德克萨斯州、佛蒙特州、威斯康辛州等，大多数都位于美国东北部。&lt;br&gt;
　　下面这个文档是我找到的最详细的相关说明文档:&lt;br&gt;
　　　&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://zaq.us/china-driver-license/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;中国驾照在美国开车的规定(官方文件)&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
　　在上述这些州里，你可能因为租车公司员工不清楚法律规定而拿到车，但万一碰上警察就可能遇上麻烦。&lt;br&gt;
　　如果只是路上要经过其中某个州，而不方便绕过的话，那就小心点开车，也别招警察注意，因为在这段路程中，不仅不合法，可能租车相关的保险也是无效的。&lt;/p&gt;
&lt;p&gt;　　持中国驾照，在美国租车最好携带翻译件，这样租车公司员工能看明白驾照上写的是什么。携程上有各租车公司的翻译件模板，照着做一个就ok。&lt;br&gt;
携程翻译件模板下地址如下:&lt;br&gt;
　　　&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;http://car.ctrip.com/OSDWeb/o/tool/translation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;免费驾照翻译件下载&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
　　翻译件必须和驾照原件一起使用。&lt;/p&gt;
&lt;p&gt;　　在美国开车不需要什么驾照公证件，租车公司就不知道这么个东西，你给他公证件，他就当个翻译件来用。&lt;/p&gt;
&lt;p&gt;　　所谓的国际驾照(IDP)对仅持有中国驾照的人而言是完全无效的，中国没有加入联合国道路交通公约，不能颁发国际驾照。这个骗局十多年前就看到了，到现在还在继续。&lt;/p&gt;
&lt;p&gt;　　如果你想拿到有效的IDP，你可以通过拿到加入到相关公约国家的驾照，比如韩国，并使用该国有效驾照申请IDP。&lt;br&gt;
　　IDP有效期应该是一年，需要和相应的驾照一起使用才有效。&lt;/p&gt;
&lt;h4 id=&#34;交通规则&#34;&gt;交通规则&lt;/h4&gt;
&lt;p&gt;　这个先不写了，网上好多。&lt;/p&gt;
&lt;h4 id=&#34;第三方保险&#34;&gt;第三方保险&lt;/h4&gt;
&lt;p&gt;　租车公司提供的车损险是有免责条款的，比如车顶、车底、玻璃等是不在保险覆盖范围内的，在详细的合同条款里应该会有，我记得在某一家租车公司的文档里看到过，另外还问过Hertz中国的客服并得到确认。&lt;br&gt;
　　虽然大部分公司不会拿这些损伤说事，比如去年在路易斯安娜州租的车，就被前面卡车掉落的石子把前挡砸出了一个小坑，最终还车也没从信用卡里另外收钱(当时有买车损险)，但万一有事真搬出这条款出来你也没办法。&lt;/p&gt;
&lt;p&gt;　 第三方保险有车损险，而且包括了这些租车公司不保的项目，另外还包括什么道路救援、轮胎打气、丢钥匙等等各种可能出的问题，保得很全，租车公司分开一项一项给你收钱的项目，第三方保险一个基本上全包了，基本上说，除了三者险、人身伤害险、财产险，第三方的保险都有了。&lt;br&gt;
　　而且，还不贵，一年的保险不到600RMB，覆盖了全世界(战乱国家除外).&lt;br&gt;
　　在国内租一次车，七八天的车损补充险，大概就有四五百块了。&lt;/p&gt;
&lt;p&gt;　　当然用租车公司的车损险，万一有车损处理起来会非常方便。&lt;br&gt;
　　用第三方保险缺点就是万一出了事故，需要先垫款，而且周期可以会比较长。 　　　&lt;/p&gt;
&lt;p&gt;　　找的这家是rentalcars用的第三方保险，叫rentalcover，最近发现好像主页上没有年度保险了，不会不卖了吧。&lt;/p&gt;
&lt;h4 id=&#34;租车费以外的其它费用各种保险罚款道路救援等&#34;&gt;租车费以外的其它费用(各种保险、罚款、道路救援等) 　&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;跟车相关的保险有车损+盗抢(LDW/CDW)，三者(ALI/SLI/EP)&lt;br&gt;
不同租车公司的写法不太一样。&lt;/li&gt;
&lt;li&gt;车损盗抢+三者是必须有的&lt;br&gt;
这没什么好说的。&lt;/li&gt;
&lt;li&gt;道路救援(RAP)&lt;br&gt;
其实一般用不到。&lt;/li&gt;
&lt;li&gt;人身保险(PAI/PEI)&lt;/li&gt;
&lt;li&gt;财物险(PEP)&lt;br&gt;
买个旅游保险就都有了&lt;/li&gt;
&lt;li&gt;加油服务(FUEL SERVICE OPTION)&lt;br&gt;
如果还车的时候不赶时间，肯定选满油还车(FULL TO FULL)，租车公司的油，贵，还要加税。&lt;/li&gt;
&lt;li&gt;异地还车费(One way fee/Drop fee)&lt;br&gt;
有的州不收异地还车费，比如加州、内华达州、佛罗里达州(好像有的公司不免) 。&lt;br&gt;
　　Avis异地还车起步价$50(budget好像也是), alamo是$100(hertz好像一样), 另加税。&lt;/li&gt;
&lt;li&gt;增加驾驶员(Additional Driver)&lt;br&gt;
加州应该是免费的, 其它的都收费。&lt;br&gt;
不同的租车公司在这块的收费价格差异还是很大的，往往越是号称低价的，在这些不太容易看明白的项目上收费就越高，比如Dollar/Thrifty，最后算起来，总的费用可能比有些看着价格高点的公司还要多。&lt;br&gt;
其实这跟廉价航空一样，比如spirit航空, 票价便宜, 但随身行李也要收费, 餐食收费，托运行李收费也比别家贵不少, 总得找地方把钱赚出来。&lt;/li&gt;
&lt;li&gt;过路费&lt;br&gt;
过路费有三种收法:
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;租用etoll pass, 类似国内的ETC.&lt;br&gt;
车上带的etolls pass一般都有开关, 可以启用或关闭。&lt;br&gt;
只要租期内用了一次，整个租期内按全部天数计算租用费，部分公司有封顶, 一个月内最多$20左右。每天租金各公司不同，ALAMO/AVIS最低, $3.95/天， Hertz略高, $4.95/天，Dollar/Thrifty更高, $8.99/天，而且没有封顶。&lt;br&gt;
过路费另算，这个应该只是代收, 没有别的费用。&lt;br&gt;
这块的费用一般是还车后，租车公司直接从信用卡里扣。&lt;br&gt;
具体费用明细可以在美国路桥费官网查，地址是: &lt;br&gt;
　　　&lt;a class=&#34;link&#34; href=&#34;http://www.htallc.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;htallc&lt;/a&gt;&lt;br&gt;
查的时候，需要租车合同号或用的信用卡号的前6位和后4位。&lt;br&gt;
结果像这样&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/tollfee-usa.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;toll fee&#34;
	
	
&gt;&lt;br&gt;
纽约到华盛顿这条路上收费挺贵的。&lt;br&gt;
有时候会有同一个租车合同会收两次过路费，应该是数据延迟。&lt;br&gt;
关于etoll pass系统，美国各地都不同, 加州叫FastTrak，伊利诺伊州叫ipass, 东北部十多个州用的ezpass, 德克萨斯州用的EZ Tag，佛罗里达州叫sunpass.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TPW 　　　&lt;br&gt;
Toll pass waive, 通行费免除, 买了这个后，不再向租车方收取过路费，相当于一价全包。&lt;br&gt;
比如， Alamo在部分地区提供这种服务，比如伊利诺伊州, $7.99/天, 不含税。&lt;br&gt;
估计是这些地方通行费收的便宜, 全包租车公司肯定也是赚的。&lt;br&gt;
曾在芝加哥租到了辆没带etoll pass的车子, 回去找alamo, 就被卖了TPW, 肯定是不划算的, 还好时间不长。&lt;br&gt;
主要是担心下面的这个坑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Toll by plate/Charge by plate ~ 收通行费+服务费 或 toll pass日租金 　&lt;br&gt;
车辆上没有etoll pass, 过路费收费公司会把帐单给租车公司，租车公司再转给第三方公司来收费，每一笔都收服务费。 　　　&lt;br&gt;
Dollar就是这么干的，每一笔收$20左右。&lt;br&gt;
像alamo这样的公司有可能是按etoll pass租金+过路费的收费模式，当时急着走，就没细问。&lt;br&gt;
另外，导航虽然有避开收费站的功能，但并不能保证肯定都能避开, 因为路也在变。 &lt;br&gt;
去年在德州休斯顿, 用谷歌导航，就没能避开两个收费站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其实还有一种方式，就是自己交费。 　&lt;br&gt;
旧金山大桥金门大桥的过桥费，就可以自己在网站上交，在网上操作，好像是车牌挂张信用卡就行。&lt;br&gt;
而佛罗里达州的电子过路费收费系统sunpass, 且支持租车用户时自己买卡交费。&lt;br&gt;
这家的网站是:  &lt;a class=&#34;link&#34; href=&#34;http://www.sunpass.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;sunpass&lt;/a&gt; 　&lt;br&gt;
注意: 不知道什么原因，这个网站在我国境内是不存在的，需要通过技术手段访问。&lt;br&gt;
同时，sunpass也有提供手机app，当然也需要技术手段访问。 　&lt;br&gt;
在Walgreen超市，或者CVS药店, 会有一种mini sunpass出售, 有的publix超市可能也有, 价格是$4.99+税。&lt;br&gt;
这种是贴在前挡风玻璃上，在后视镜后面的位置，一次性的，用完撕下来大概就废了(很难撕下来)。在网上看，有人说可以用胶带把pass粘在前风挡上,  但这样不能确认是否有效。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/mini-sunpass.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;mini sunpass&#34;
	
	
&gt;&lt;br&gt;
买了mini sunpass后，如果还没有sunpass帐户，先用买的这张sunpass的ID去注册一个帐号, 充值, 加上车辆信息, 就能用了。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/mini-sunpass-vehicle-info.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;mini-sunpass-vehicle-info&#34;
	
	
&gt;&lt;br&gt;
App上增加车车辆信息的操作界面就这样，上面需要的车辆信息，可以在车钥匙的标牌上，或者车辆前挡风玻璃上找到。写车辆信息应该是为了在没有读到卡的情况下，根据车辆牌号等信息，直接从对应帐户扣款。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/etollpass-usa.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;etollpass-usa&#34;
	
	
&gt;
租用车辆需要设置下面的起止时间，到期后，车辆信息会被自动删除。&lt;br&gt;
在app上可以查看交费收费的明细信息，见下图:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/sunpass-bill.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;sunpass-bill&#34;
	
	
&gt;
佛罗里达州的过路费看来收的地方不多，而且比较便宜，主要是大城市周边收费，如果时间不长，10块钱就够了。&lt;br&gt;
还车后，如果不再用这个帐号，剩下的钱可以退款，或者直接关掉帐户(Close Account).&lt;br&gt;
这些操作在app上没有, 只能在网页上操作。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/sunpass-app.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;sunpass-app&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;导航&#34;&gt;导航&lt;/h4&gt;
&lt;p&gt;有了谷歌地图，还需要其它导航吗?&lt;br&gt;
订机票、酒店、租车等等的时候，把确认邮件发到你的gmail邮箱里，谷歌地图上就会在对应的地点显示所有的这些行程。另外，你只需要在规划行程的时间把其它要去的地方在地图上标上，到时间出门打开地图就可以开始导航，根本不需要再去查地址，so easy.&lt;br&gt;
怕没有网络？谷歌有离线地图，提前下好就行了。&lt;br&gt;
离线地图除了没有实时路况，别的也不缺什么。&lt;br&gt;
当然, 流量还是需要的，买美国电话卡是最好的方案，电话流量全部搞定。&lt;br&gt;
Lycamobile用的是tmobile的网络，价格不错，在美国东部的覆盖也可以，再加上国内手机号漫游过去，实在不行用国内手机(可以漫游到任何一个支持的网络)，通讯就没问题了。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/Lycamobile-usa.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Lycamobile-usa&#34;
	
	
&gt;&lt;br&gt;
不过不知道是不是华为系统的问题, mate 7装上lyca的卡后开热点，别的手机联上了却不能上网, 还好的是交易的这家美国当地有客服，跟客服电话里沟通了半天，最后认为可能是手机问题 ~~ 以前也有过华为手机开热点出现类似的情况，后来把sim卡换到另外的手机上就好了。&lt;/p&gt;
&lt;h4 id=&#34;租车&#34;&gt;租车&lt;/h4&gt;
&lt;p&gt;租车预定的渠道大概三种&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;租车公司&lt;br&gt;
租车公司主页要都有一些优惠的页面，可以到里面找找&lt;br&gt;
一般租车公司都给合作的航空、信用卡公司、或者信用卡组织等提供一些折扣码，有些是在相关公司的页面上能找到。&lt;br&gt;
但.com的租车网站往往没有包保险的套餐, 加上保险后可能会比较贵。&lt;/li&gt;
&lt;li&gt;租车公司他国分支机构&lt;br&gt;
比如.cn的，或者.uk的, 或者.de的&lt;br&gt;
上面说到的折扣码, 有些公司是全球通用的，比如avis/hertz, 也有些不是, 比如alamo。&lt;br&gt;
.cn和.uk往往提供包保险的套餐, 而.uk的价格经常会比较便宜一些。&lt;br&gt;
前些年不少人用.uk的网站预定租车，现在不少租车公司都不让这么干了，用.uk网站订车会有被拒绝提车的风险。&lt;br&gt;
　　Hertz这家的网站比较有意思，在.cn的网站上也可以订到uk的价格: 其价格策略是根据你选的location来定, 而不是网站是.cn或是别的。所以在.cn的网站上, 只要选择的国家是united kingdom，就能订到uk的价格，不过这样怕是也有问题。&lt;br&gt;
　　Alamo还可以这么订车，当然也不能保证能拿到车。&lt;br&gt;
　　如果价格实在太好，也可以去试一下，订个不预付的订单，跟美国租车公司客服确认订单的有效性，并留好后手，避免万一拿不到车打乱行程。&lt;br&gt;
　　~~~ 如果用其它国家订单, 汇率变化可能会影响到最终价格。&lt;/li&gt;
&lt;li&gt;代理&lt;br&gt;
代理也会有好价格，比如国内的携程、租租车什么的，不过好像看到有人报怨携程晚上没客服，那就得靠自己了。&lt;br&gt;
用Bid方式租车可能并不合适，因为bid只租了车，如果加上保险，没准比套餐的价格还贵。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;　　另外，提车的时候，有的租车点有自助的机器(kiosk), 一般在机场这种大的点会有, 有可能有中文，即使没中文也更好理解，我觉得应该尽量选择使用kiosk,可以避开语言障碍和人为的干扰。&lt;/p&gt;
&lt;p&gt;　　说到人为干扰，在网上看到过有人被店员加了没有要的项目，好像最多的就是道路救援，如果是预付款的订单，出现要收钱的和未税的项，肯定是另加了东西，有的还放了提车收费单上来，其中后加上的项目很明确，只是有些人就因为不清楚那些英文简写的意思，而看不出来。&lt;br&gt;
　　还有，如果对车大小类型没有硬性要求，可以尽量订便宜的车，因为便宜的车可能会没有，免费升级会经常碰到，尤其是比较小的网点。&lt;br&gt;
　　在我的租车经历里，有一半都被升级了，而没被升级的几次中，有一次是在门店直接下的订单(傻了),另外的都是订的mini van, 没法升级。&lt;br&gt;
　　在一个行程里，租车费用并不是主要的费用，酒店才是大头，所以也不用在租车上花太多时间，差不多就行了。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>花生壳动态域名 for Linux 在ubuntu 8.0.4 x86_64系统下的使用</title>
        <link>https://jimway71.github.io/p/%E8%8A%B1%E7%94%9F%E5%A3%B3%E5%8A%A8%E6%80%81%E5%9F%9F%E5%90%8D-for-linux-%E5%9C%A8ubuntu-8.0.4-x86_64%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Thu, 14 May 2009 21:39:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E8%8A%B1%E7%94%9F%E5%A3%B3%E5%8A%A8%E6%80%81%E5%9F%9F%E5%90%8D-for-linux-%E5%9C%A8ubuntu-8.0.4-x86_64%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-13.jpg" alt="Featured image of post 花生壳动态域名 for Linux 在ubuntu 8.0.4 x86_64系统下的使用" /&gt;&lt;p&gt;一、花生壳for linux安装包里有phlinux-1.1-install.ubuntu.8.04.tar.gz, 是为ubuntu 8.0.4 i386下使用&lt;br&gt;
二、在ubuntu 8.0.4 x86_64下使用, 会报错(无文件错误)&lt;br&gt;
三、分析原因, 是因为在ubuntu x86_64下没有i386的库&lt;br&gt;
解决方法是安装32位的库文件&lt;br&gt;
四、安装方法:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# sudo apt-get install ia32-libs*&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注:&lt;br&gt;
新装系统, 需要更新/etc/apt/sources.list&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# sudo vim /etc/apt/sources.list&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;并做update&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# sudo apt-get update&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;嗯, 原来就没写完 :)&lt;br&gt;
怪不得这么短&lt;br&gt;
就这样吧&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CodeBlocks的Windows NT/2K/XP/CE版本的安装及相关说明</title>
        <link>https://jimway71.github.io/p/codeblocks%E7%9A%84windows-nt/2k/xp/ce%E7%89%88%E6%9C%AC%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E7%9B%B8%E5%85%B3%E8%AF%B4%E6%98%8E/</link>
        <pubDate>Wed, 28 Feb 2007 16:37:16 +1000</pubDate>
        
        <guid>https://jimway71.github.io/p/codeblocks%E7%9A%84windows-nt/2k/xp/ce%E7%89%88%E6%9C%AC%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E7%9B%B8%E5%85%B3%E8%AF%B4%E6%98%8E/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-12.jpg" alt="Featured image of post CodeBlocks的Windows NT/2K/XP/CE版本的安装及相关说明" /&gt;&lt;p&gt;一、相关版本软件的下载&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Windows NT/2K/XP&lt;br&gt;
　CodeBlocks 1.0rc2版: (引自 &lt;a class=&#34;link&#34; href=&#34;http://www.codeblocks.org/downloads.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.codeblocks.org/downloads.php&lt;/a&gt;)&lt;br&gt;
　　&lt;a class=&#34;link&#34; href=&#34;http://prdownloads.sourceforge.net/codeblocks/codeblocks-1.0rc2_mingw.exe?download&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Code::Blocks IDE 1.0rc2, with MinGW compiler&lt;/a&gt;&lt;br&gt;
　注: CodeBlocks 1.0rc2所带MinGW的版本不确定, gcc/g++的版本为3.4.4 (mingw special)&lt;br&gt;
　CodeBlocks Unicode Dll for Windows 2.6.3版: (引自 &lt;a class=&#34;link&#34; href=&#34;http://www.codeblocks.org/nightly/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.codeblocks.org/nightly/&lt;/a&gt;, 应该可以不用)&lt;br&gt;
　　&lt;a class=&#34;link&#34; href=&#34;http://prdownload.berlios.de/codeblocks/wxmsw26u_gcc_cb_wx2.6.3p2.7z&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CodeBlocks Unicode Dll for Windows 2.6.3版, ZIP格式文件&lt;/a&gt;&lt;br&gt;
　CodeBlocks Nightly Builds: (引自 &lt;a class=&#34;link&#34; href=&#34;http://www.codeblocks.org/nightly/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.codeblocks.org/nightly/&lt;/a&gt;)&lt;br&gt;
　　&lt;a class=&#34;link&#34; href=&#34;http://forums.codeblocks.org/index.php?board=20.0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Forum about Nightly build&lt;/a&gt;, 找个最新的版本下载&lt;br&gt;
　MinGW: (引自 &lt;a class=&#34;link&#34; href=&#34;http://www.mingw.org/download.shtml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.mingw.org/download.shtml&lt;/a&gt;)&lt;br&gt;
　　因CodeBlocks下载了带了MinGW编译器, 所以不用下载&lt;br&gt;
　wxWidgets 2.8.0版: (引自 &lt;a class=&#34;link&#34; href=&#34;http://www.wxwidgets.org/downloads/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.wxwidgets.org/downloads/&lt;/a&gt;)&lt;br&gt;
　　&lt;a class=&#34;link&#34; href=&#34;http://prdownloads.sourceforge.net/wxwindows/wxMSW-2.8.0-Setup.exe&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wxMSW 2.8.0&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、相应版本的安装&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Windows NT/2K/XP&lt;br&gt;
　1)安装CodeBlocks带MinGW的版本&lt;br&gt;
　　略&lt;br&gt;
　2)安装CodeBlocks的Unicode版本Dll&lt;br&gt;
　　把文件解压覆盖到CodeBlocks安装目录下(我的安装目录: C:\Program Files\CodeBlocks)&lt;br&gt;
　3)安装CodeBlocks的新的Nightly Builds版本&lt;br&gt;
　　把文件解压覆盖到CodeBlocks安装目录下(我的安装目录: C:\Program Files\CodeBlocks)&lt;br&gt;
　4)安装wxWidgets&lt;br&gt;
　　可安装到D:\wxWidgets-2.8.0&lt;br&gt;
注意:&lt;br&gt;
　　wxWidgets后续的编译需要约1.5G(静态debug库)/0.5G(动态debug库)&lt;em&gt;(注:release库相对较小)的硬盘空间来完成, 在编译完成后, 还需占用约1G(静态debug库)/0.5G(动态debug库)&lt;/em&gt;(注:release库相对较小)的空间, 即需要有1.5G(静态库)/0.5G(动态库)的空间完成后续的编译操作, 所以, 需要注意检查目标磁盘是否有足够空间&lt;br&gt;
　　安装过程: 略&lt;br&gt;
　5)编译wxWidgets(支持ODBC)&lt;br&gt;
　　a. 建立用于设置环境的批处理文件&lt;br&gt;
　　在目录D:\wxWidgets-2.8.0\build\msw下新建批处理文件envset.bat, 如下:&lt;br&gt;
　　　　set PATH=%PATH%;C:\Program Files\CodeBlocks\bin;C:\Program Files\CodeBlocks\mingw32\bin;&lt;br&gt;
　　　　set LIBRARY_PATH=C:\Program Files\CodeBlocks\lib&lt;br&gt;
　　　　set C_INCLUDE_PATH=C:\Program Files\CodeBlocks\include&lt;br&gt;
　　　　set CPLUS_INCLUDE_PATH=C:\Program Files\CodeBlocks\include;D:\wxWidgets-2.8.0\include;D:\wxWidgets-2.8.0\contrib\include;&lt;br&gt;
　　b.编译&lt;br&gt;
　　a)进入DOS命令行模式&lt;br&gt;
　　b)切换工作目录至D:\wxWidgets-2.8.0\build\msw&lt;br&gt;
　　c)执行清理命令(debug版本, 第一次运行应该可以不用)&lt;br&gt;
　　mingw32-make -f makefile.gcc UNICODE=1 USE_ODBC=1 MONOLITHIC=1 SHARED=1 clean&lt;br&gt;
　　参数说明:&lt;br&gt;
　　　UNICODE=1表示使用unicode编码&lt;br&gt;
　　　USE_ODBC=1 表示生成支持ODBC的库&lt;br&gt;
　　　MONOLITHIC=1 表示生成单一的库文件 (0表示生成多个按模块分割的库文件)&lt;br&gt;
　　　SHARED=1 表示生成的动态链接库DLL (0表示生成静态链接库)&lt;br&gt;
　　　BUILD=debug 表示生成带Debug信息的版本方便调试 (release是发布版, 缺省是debug版本)&lt;br&gt;
　　缺省的参数设置可以参考配置文件config.gcc&lt;br&gt;
　　d)执行编译命令(动态库debug版本)&lt;br&gt;
　　mingw32-make -f makefile.gcc UNICODE=1 USE_ODBC=1 MONOLITHIC=1 SHARED=1 VENDOR=jimway&lt;br&gt;
　　然后, 开始漫长的等待, 时间视机器的性能而定, 最终在目录....\lib\下生成库文件&lt;br&gt;
　　e)执行编译命令(动态库release版本)&lt;br&gt;
　　mingw32-make -f makefile.gcc UNICODE=1 USE_ODBC=1 MONOLITHIC=1 SHARED=1 BUILD=release VENDOR=jimway&lt;br&gt;
　　然后, 继续漫长的等待, 时间同样视机器的性能而定, 最终在目录....\lib\下生成库文件&lt;br&gt;
注意:&lt;br&gt;
　　关于动态库编译的警告(Warning)&lt;br&gt;
　　当使用“SHARED=1”编译选项时, 在编译中, 会出现大量的Warning, 大致如下:&lt;br&gt;
　　　&amp;ldquo;type attributes are honored only at type definition&amp;rdquo;&lt;br&gt;
　　似乎是编译器的问题, 现在仅可以通过降低Warning级别来关掉, 或等待新的版本来处理这个问题&lt;br&gt;
　　可以参考文档&lt;a class=&#34;link&#34; href=&#34;http://forums.codeblocks.org/index.php/topic,270.0.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wxWidgets 2.6 (MSW, GCC) installation instructions&lt;/a&gt;&lt;br&gt;
　6)测试使用建立一个wxWidgets Project, 并使用动态库编译&lt;br&gt;
　　成功&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考:&lt;br&gt;
官方网站:&lt;br&gt;
wxwidgets: &lt;a class=&#34;link&#34; href=&#34;http://www.wxwidgets.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.wxwidgets.org/&lt;/a&gt;&lt;br&gt;
MinGW: &lt;a class=&#34;link&#34; href=&#34;http://www.mingw.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.mingw.org/&lt;/a&gt;&lt;br&gt;
codeblocks: &lt;a class=&#34;link&#34; href=&#34;http://www.codeblocks.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.codeblocks.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;说明文档:&lt;br&gt;
wxWiki: &lt;a class=&#34;link&#34; href=&#34;http://www.wxwidgets.org/wiki/index.php/Main_Page&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.wxwidgets.org/wiki/index.php/Main_Page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其它下载:&lt;br&gt;
Codeblocks的Nightly Builds: &lt;a class=&#34;link&#34; href=&#34;http://forums.codeblocks.org/index.php/board,20.0.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forums.codeblocks.org/index.php/board,20.0.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其它文档:&lt;br&gt;
Rex的Codeblocks安装说明: &lt;a class=&#34;link&#34; href=&#34;http://flord.net/node/109&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://flord.net/node/109&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WinCE相关文档:&lt;br&gt;
Development: wxWinCE &lt;a class=&#34;link&#34; href=&#34;http://www.wxwidgets.org/wiki/index.php/Development:_wxWinCE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.wxwidgets.org/wiki/index.php/Development:_wxWinCE&lt;/a&gt;&lt;br&gt;
wxEmbedded: wxWidgets for embedded applications &lt;a class=&#34;link&#34; href=&#34;http://www.wxwidgets.org/docs/embedded.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.wxwidgets.org/docs/embedded.htm&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>圣灵岛(Whitsunday Islands)和大堡礁(Great Barrier Reef)</title>
        <link>https://jimway71.github.io/p/%E5%9C%A3%E7%81%B5%E5%B2%9Bwhitsunday-islands%E5%92%8C%E5%A4%A7%E5%A0%A1%E7%A4%81great-barrier-reef/</link>
        <pubDate>Wed, 28 Feb 2007 07:25:16 +1000</pubDate>
        
        <guid>https://jimway71.github.io/p/%E5%9C%A3%E7%81%B5%E5%B2%9Bwhitsunday-islands%E5%92%8C%E5%A4%A7%E5%A0%A1%E7%A4%81great-barrier-reef/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-11.jpg" alt="Featured image of post 圣灵岛(Whitsunday Islands)和大堡礁(Great Barrier Reef)" /&gt;&lt;p&gt;说起大堡礁, 一般人都会想到凯恩斯(Cains), 因为这是大多数的来自中国的澳洲旅游团必到的景点之一。其实, 大堡礁位于澳大利亚东北部昆士兰州的东海岸, 由南至北延绵二千多公里, 从昆士兰州的很多地方都能去看大堡礁, 圣灵岛就是其中之一。&lt;br&gt;
圣灵岛位于凯恩斯的南部, 黄金海岸的北部, 是由74个大大小小的岛屿组成的一个度假胜地, 在这里不仅能看到大堡礁, 还能看到白色的天堂沙滩(WhiteHeaven Beach)和热带雨林。(&lt;a class=&#34;link&#34; href=&#34;http://maps.google.com/maps?f=q&amp;amp;hl=zh-CN&amp;amp;q=20%C2%B016%2718.06%22S,148%C2%B051%2755.09%22E&amp;amp;ie=UTF8&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;z=11&amp;amp;ll=-20.250602,148.808441&amp;amp;spn=0.304063,0.818481&amp;amp;t=h&amp;amp;om=1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;圣灵岛及周边地图&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/whitsunday-ap.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Whitsunday Airport&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;如果要坐飞机到圣灵岛, 可以选择飞到Whitsunday Coast Airport (&lt;a class=&#34;link&#34; href=&#34;http://maps.google.com/maps?f=q&amp;amp;hl=zh-CN&amp;amp;q=&amp;#43;20%C2%B029%2742.26%22S,&amp;#43;148%C2%B033%2719.37%22E&amp;amp;ie=UTF8&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;om=1&amp;amp;z=13&amp;amp;ll=-20.491989,148.555412&amp;amp;spn=0.075897,0.20462&amp;amp;t=h&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Whitsunday Coast Airport及周边地图&lt;/a&gt;), 再坐Taxi或Whitsunday Transit的公车, 经A1公路, 穿过Proserpine镇, 然后转到Shute Harbour Road, 一个小时之内就能到达Shute Harbour, 总共有50多公里的路程, 从Shute Harour就可以坐船出海了&lt;br&gt;
或者直接飞到位于圣灵岛之一的Hamilton Island Airport(&lt;a class=&#34;link&#34; href=&#34;http://maps.google.com/maps?f=q&amp;amp;hl=zh-CN&amp;amp;q=&amp;#43;20%C2%B021%2729.28%22S,&amp;#43;148%C2%B057%276.52%22E&amp;amp;ie=UTF8&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;z=15&amp;amp;ll=-20.353318,148.960533&amp;amp;spn=0.018991,0.051155&amp;amp;t=h&amp;amp;om=1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hamilton Island Airport及周边地图&lt;/a&gt;)&lt;br&gt;
这两个机场都是小型机场，都只有一条跑道。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/great-barrier-reef-01.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;坐船来到X公司大堡礁海上基地, 在这里可以潜水、浮潜、坐透明底船或潜艇看海底世界, 晚上还可以住在这里。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/white-heaven-beach-01.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/white-heaven-beach-02.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;br&gt;
White Heaven Beach&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/airlie-beach.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;br&gt;
Airlie Beach&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/daydream-island-01.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/daydream-island-02.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/daydream-island-03.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;br&gt;
Daydream Island&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/hamilton-island-01.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/hamilton-island-02.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/hamilton-island-03.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/hamilton-island-04.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Great Barrier Reef&#34;
	
	
&gt;&lt;br&gt;
Hamilton Island&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;旅游TIPS:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;季节:&lt;br&gt;
12月到3月是这里的雨季, 这段时间的雨量较大, 另一方面游人会较少一些, 价格应该会优惠一些&lt;/li&gt;
&lt;li&gt;交通&lt;br&gt;
可以坐飞机到Whitsunday Coast Airport(即Proserpine airport, 在Proserpine的南部约十公里), 坐出租车或shutle约45公里到Airport, 价格A$15-16/人, 很方便(小地方的出租车, 人多了按人头收费)&lt;br&gt;
可以坐飞机到Hamilton island airport, 在Hamilton island上, 如果住在岛上倒很方便, 不过一般会贵A$50/人左右, 而且要去Airlie beach时还需要坐船过去, 这里的船票可都不太便宜&lt;br&gt;
具体机票价格可以查jetstar或virgin blue的网站, 或在webjet上可以查询到各航空公司的价格&lt;br&gt;
一般来说, jetstar的价格要便宜一些&lt;/li&gt;
&lt;li&gt;住宿:&lt;br&gt;
在Airlie beach的YHA、在Cannonvale(离Airlie beach约2km)的Bush village网上的评价最好, 价格也不贵, 而且一般的daytrip在这里都能提供接送服务&lt;br&gt;
YHA提供厨房, 很大很干净, Bush Village可能也有提供&lt;br&gt;
另外, 还有宾馆或Aparment, 如果人多, 时间较长, Aparment可能也是一个很好的选择&lt;br&gt;
注:&lt;br&gt;
大公司的船一般在shute harbour出发(离Airlie beach约10km), 有的会接Daydream island和Hamilton island的游客&lt;br&gt;
小公司的船有在Abel Point出发(离Airlie beach约2km)&lt;/li&gt;
&lt;li&gt;YHA相关&lt;br&gt;
如果有YHA卡, 参加某些活动会有折扣, 有时折扣会较多, 另外, 如果住YHA, 没有YHA卡时, 需要另付约A$3.5/天.人, 且这里对OverSea的游客办YHA卡需收A$37, 所以对中国游客来说, 在国内办个YHA卡不仅便宜, 而且应该能用得着&lt;/li&gt;
&lt;li&gt;吃饭及购物&lt;br&gt;
在Airlie beach, 吃饭的地方挺多的, 在Water front backpacker边上二楼还有个中餐馆, 另外, 在Airlie beach还有个小超市&lt;br&gt;
在Cannonvale有个Coles(较大的超市)&lt;/li&gt;
&lt;li&gt;活动&lt;br&gt;
一般通过travel agent订各种活动, 一般在晚上8点前, 在Airlie beach还有Travel agent开门(当然, 也有很多关门了的, 选择余地就会少一些, 所以最好白天来订。我们订的那家, 一位女士服务态度极好, 我们在那谈了一个多小时, 但早晚上都不开门)&lt;br&gt;
Airlie Beach的travel agent极多, 住宿的地方也可以订, 所以我感觉不需要预先订好。Hamilton island上的Travel Agent远不如Airlie beach的多, 价格折扣也极少, 且有些活动不提供接送, 所以主要的住宿还是不在Hamilton island为好, 我感觉最多住上一天为好&lt;/li&gt;
&lt;li&gt;Buggy&lt;br&gt;
Hamilton island上的buggy是一种小型车, 一车可坐4人, 速度很慢, 应该低于20km/h, 租用需要出示驾照, 租一天约A$65。因岛较大, 虽然有红、绿、橙三条免费的bus线路, 但并不能覆盖全岛, 且等车时间较长, 所以租辆buggy是个很好的选择&lt;/li&gt;
&lt;li&gt;自驾船&lt;br&gt;
自驾船是一种更自由的选择, 而且自驾船上还可以住宿, 不用再考虑住宿的问题&lt;br&gt;
在shute harbour往里走, 有个自驾船租赁的公司, 看着不错, 没有租过, 可以在rentayacht上查询相关资料&lt;/li&gt;
&lt;li&gt;其它&lt;br&gt;
澳洲阳光巨强, 必须带SPF30+的防晒霜&lt;br&gt;
药品:&lt;br&gt;
去reef的航程较远, 外海浪大, 容易晕船, 最好带晕船药&lt;br&gt;
另:&lt;br&gt;
1)华人(当括当地的和游客)都很少, 基本上不用考虑能用中文跟人对话&lt;br&gt;
2)似乎有个心型小岛, 情侣可以去看一下喔&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
