<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Openwrt on 点滴随记</title>
        <link>https://jimway71.github.io/tags/openwrt/</link>
        <description>Recent content in Openwrt on 点滴随记</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 24 Nov 2022 18:03:00 +0800</lastBuildDate><atom:link href="https://jimway71.github.io/tags/openwrt/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>翻墙系列</title>
        <link>https://jimway71.github.io/p/%E7%BF%BB%E5%A2%99%E7%B3%BB%E5%88%97/</link>
        <pubDate>Thu, 24 Nov 2022 18:03:00 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E7%BF%BB%E5%A2%99%E7%B3%BB%E5%88%97/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-61.jpg" alt="Featured image of post 翻墙系列" /&gt;&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;大规模封锁的问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/net4people/bbs/issues/129#issuecomment-1266617327&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2022年10月3日以来的针对基于TLS翻墙软件的大规模封锁&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/XTLS/Xray-core/issues/1237&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;近期大范围的服务器封锁及对策 #1237&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go/pull/464&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Upgrade trojan-go client&amp;rsquo;s TLS fingerprints to some of the most popular ones #464&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中都提到了Clienthello指纹, 或TLS Fingerprint&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://tlsfingerprint.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TLS Fingerprint&lt;/a&gt; 相关信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;处理:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立一个备用的服务器端(trojan-go客户端+CDN)&lt;/li&gt;
&lt;li&gt;选用相应的Trojan-go客户端
&lt;ul&gt;
&lt;li&gt;桌面客户端: V2rayN&lt;br&gt;
&lt;u&gt;为了安全, 设置全部服务器的Fingerprint为&amp;quot;Chrome&amp;quot; (在V2rayN里设置fingerprint(uTLS))&lt;/u&gt;&lt;/li&gt;
&lt;li&gt;安卓客户端: v2rayNG &lt;u&gt;有报告使用时被封&lt;/u&gt;&lt;br&gt;
&lt;u&gt;为了安全, 设置全部服务器的Fingerprint为&amp;quot;Chrome&amp;quot; (在V2rayNG里设置uTLS)&lt;/u&gt;&lt;/li&gt;
&lt;li&gt;桌面客户端: Qv2ray&lt;br&gt;
&lt;u&gt;Qv2ray不能设置Fingerprint&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Openwrt固件支持Trojan-go&lt;br&gt;
&lt;u&gt;当前使用的ShadowSocksR Plus+版本中使用的&amp;quot;V2Ray/XRay&amp;quot;中&amp;quot;Trojan&amp;quot; 经测试, 可以支持Trojan-go服务器(websocket传输)。&lt;/u&gt;&lt;br&gt;
&lt;u&gt;为了安全, 设置Trojan-go服务器的指纹伪造为&amp;quot;Chrome&amp;quot; &lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;h3 id=&#34;trojantrojan-go&#34;&gt;Trojan/Trojan-go&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt; 开源官网, &lt;u&gt;但很久未更新了&lt;/u&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/gfw-report/trojan-go&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;gfw-report/trojan-go&lt;/a&gt; 这个Fork在&lt;strong&gt;近期有更新&lt;/strong&gt;, 参看&lt;a class=&#34;link&#34; href=&#34;https://github.com/cary-sas/v2ray_bin/issues/50&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;考虑更新trojan-go核心到这个版本 #50&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://p4gefau1t.github.io/trojan-go/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go Docs&lt;/a&gt; 开源文档官网&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/h31105/deployX.sh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TSP &amp;amp; Trojan-Go / V2Ray 容器化管理部署脚本&lt;/a&gt; 开源官网
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/h31105/deployX.sh/issues/25&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;关于Trojan-go的配置文件 #25&lt;/a&gt; issue讨论&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.chengxiaobai.com/trouble-maker/trojan-shared-443-port-scheme&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan 共用 443 端口方案&lt;/a&gt; 使用SNI做分发标记&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://p4gefau1t.github.io/trojan-go/advance/websocket/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用Websocket进行CDN转发和抵抗中间人攻击&lt;/a&gt; &lt;strong&gt;Trojan-go怎样利用websocket套用CDN&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;支持的客户端&#34;&gt;支持的客户端&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u&gt;桌面客户端&lt;/u&gt; &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/2dust/v2rayN&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;v2rayN&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
支持Windows系统&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/2dust/v2rayN/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;V2rayN Releases&lt;/a&gt; 可下载, 两个zip压缩文件, 直接解压后即可运行&lt;br&gt;
非常简单方便, 无需其他程序, 不需要设置。&lt;br&gt;
经测试, &lt;strong&gt;支持Trojan-go&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;为了安全, 在使用V2rayN客户端时, 需要设置全部服务器的Fingerprint为&amp;quot;Chrome&amp;quot;(在V2rayN里设置fingerprint(uTLS))&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font color=grey&gt;&lt;u&gt;桌面客户端&lt;/u&gt; &lt;del&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Qv2ray/Qv2ray&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Qv2ray&lt;/strong&gt;&lt;/a&gt; &lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;官方说明中支持, 但开发组于2021-08-17声明该项目已不再维护&lt;/del&gt;&lt;br&gt;
支持Linux/MacOS/Windows系统&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Qv2ray/Qv2ray/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Qv2ray Releases&lt;/a&gt; 可下载&lt;br&gt;
&lt;u&gt;安装配置比较复杂&lt;/u&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要V2ray-core
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/v2fly/v2ray-core&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;v2fly - v2ray-core&lt;/a&gt; v2ray核心, 下载Release&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/v2ray/v2ray-core/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;v2ray-core&lt;/a&gt;&lt;/del&gt; 已移到&lt;a class=&#34;link&#34; href=&#34;https://github.com/v2fly/v2ray-core&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;v2fly - v2ray-core&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;需要trojan/trojan-go插件
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Qv2ray/QvPlugin-Trojan/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;QvPlugin-Trojan&lt;/a&gt; Trojan插件&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Qv2ray/QvPlugin-Trojan-Go/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;QvPlugin-Trojan-Go&lt;/a&gt; Trojan-go插件&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go/releases/download/v0.10.5/trojan-go-windows-amd64.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;trojan-go-windows-amd64&lt;/a&gt; From &lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go Releases&lt;/a&gt;, 在界面的&amp;quot;插件&amp;quot;-&amp;ldquo;Trojan-go&amp;rdquo;-&amp;ldquo;设定&amp;quot;里选择(必选)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经测试, &lt;strong&gt;支持Trojan-go&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;但Qv2ray不能设置Fingerprint&lt;/u&gt;&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u&gt;安卓客户端&lt;/u&gt; &lt;a class=&#34;link&#34; href=&#34;https://play.google.com/store/apps/details?id=com.v2ray.ang&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;v2rayNG&lt;/a&gt; &lt;u&gt;有报告使用时被封&lt;/u&gt;&lt;br&gt;
开源代码: &lt;a class=&#34;link&#34; href=&#34;https://github.com/2dust/v2rayNG&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github v2rayNG&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;支持Trojan/Trojan-go&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;为了安全, 在使用V2rayNG客户端时, 需要设置全部服务器的Fingerprint为&amp;quot;Chrome&amp;rdquo; (在V2rayNG里设置uTLS)&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font color=grey&gt;&lt;del&gt;&lt;u&gt;安卓客户端&lt;/u&gt; &lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go-android&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go-android&lt;/a&gt; &lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;官方说明中支持&lt;/del&gt;&lt;br&gt;
forked from &lt;a class=&#34;link&#34; href=&#34;https://github.com/trojan-gfw/igniter&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;trojan-gfw/igniter&lt;/a&gt;, &lt;u&gt;也很久未更新&lt;/u&gt;&lt;br&gt;
支持Android&lt;br&gt;
&lt;u&gt;官网上无apk安装包可下载, 网上也没找到可用的apk&lt;/u&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://play.google.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google Play Store&lt;/a&gt;中也没有&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;del&gt;&lt;u&gt;安卓客户端&lt;/u&gt; &lt;a class=&#34;link&#34; href=&#34;https://github.com/SagerNet/SagerNet&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;SagerNet&lt;/strong&gt; Github&lt;/a&gt;&lt;/del&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://sagernet.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SagerNet&lt;/a&gt;&lt;br&gt;
Android 的通用代理工具链，用Kotlin语言编写&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/SagerNet/SagerNet/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SegnerNet Releases&lt;/a&gt; 可下载&lt;br&gt;
从&lt;a class=&#34;link&#34; href=&#34;https://sagernet.org/configuration/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SegnerNet Config&lt;/a&gt;中可以看到, 支持Socks5/HTTP、Shadowsocks、ShadowsocksR、VMESS/VLESS、Trojan-Go等协议&lt;br&gt;
从&lt;a class=&#34;link&#34; href=&#34;https://github.com/SagerNet/SagerNet/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SegnerNet Releases&lt;/a&gt;中可以看到, 还支持Hysteria、Naive、Mieru、Tuic等较新的协议&lt;br&gt;
使用trojan/trojan-go需要用到插件: &lt;a class=&#34;link&#34; href=&#34;https://github.com/SagerNet/SagerNet/releases/tag/trojan-go-plugin-0.10.6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;trojan-go-plugin&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://play.google.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google Play Store&lt;/a&gt;中有SagerNet Apk, 也有trojan-go-plugin&lt;br&gt;
&lt;strong&gt;注意&lt;/strong&gt;: 在SagerNet Apk中使用trojan/trojan-go协议时, 需要修改&amp;quot;设置&amp;quot;中的&amp;quot;协议设置&amp;quot;, Trojan提供程序修改为Trojan-Go(否则使用上可能有问题)&lt;br&gt;
经测试, &lt;strong&gt;支持trojan-go, 但非常不稳定&lt;/strong&gt;&lt;br&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u&gt;固件客户端&lt;/u&gt; &lt;a class=&#34;link&#34; href=&#34;https://github.com/coolsnowwolf/lede&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Lede Openwrt&lt;/a&gt;&lt;br&gt;
&lt;u&gt;当前使用的ShadowSocksR Plus+版本中使用的&amp;quot;V2Ray/XRay&amp;quot;中&amp;quot;Trojan&amp;quot; 经测试, 可以支持Trojan-go服务器(websocket传输)。&lt;/u&gt;&lt;br&gt;
&lt;u&gt;为了安全, 设置Trojan-go服务器的指纹伪造为&amp;quot;Chrome&amp;quot; &lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trojan-Go访问原理 (Copy from &lt;a class=&#34;link&#34; href=&#34;https://ssrvps.org/archives/7708&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;一键搭建Trojan-Go面板，Trojan-Go支持WebSocket，免费开启CDN隐藏自己VPS的真实IP，从而实现不被墙！&lt;/a&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当一个客户端试图连接Trojan-Go的监听端口时，会发生下面的事情：&lt;br&gt;
● 如果TLS握手成功，检测到TLS的内容非Trojan协议（有可能是HTTP请求，或者来自GFW的主动探测）。Trojan-Go将TLS连接代理到本地127.0.0.1:80上的HTTP服务。这时在远端看来，Trojan-Go服务就是一个HTTPS网站。&lt;br&gt;
● 如果TLS握手成功，并且被确认是Trojan协议头部，并且其中的密码正确，那么服务器将解析来自客户端的请求并进行代理，否则和上一步的处理方法相同。&lt;br&gt;
● 如果TLS握手失败，说明对方使用的不是TLS协议进行连接。此时Trojan-Go将这个TCP连接代理到本地127.0.0.1:1234上运行的HTTPS服务（或者HTTP服务），返回一个展示400 Bad Reqeust的HTTP页面。fallback_port是一个可选选项，如果没有填写，Trojan-Go会直接终止连接。虽然是可选的，但是还是强烈建议填写。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;x-ui&#34;&gt;X-ui&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/vaxilu/x-ui&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;X-ui&lt;/a&gt; 开源官网&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.vzse.cn/?p=277&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vps搭建x-ui面板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://coderfan.net/how-to-use-x-ui-pannel-to-set-up-proxies-for-bypassing-gfw.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;科学上网：使用X-UI面板快速搭建多协议、多用户代理服务，支持CDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cdn相关&#34;&gt;CDN相关&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zh.m.wikipedia.org/zh-hans/WebSocket&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WebSocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ssrvps.org/archives/10188&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan+CDN搭建代理服务器，救活被墙VPS IP（Trojan-Go+TLS+Cloudflare CDN）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;一键安装&#34;&gt;一键安装&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/jinwyp/one_click_script&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;一键安装脚本&lt;/a&gt; 开源官网&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;用例&#34;&gt;用例&lt;/h2&gt;
&lt;h3 id=&#34;trojantrojan-go-1&#34;&gt;Trojan/Trojan-go&lt;/h3&gt;
&lt;h4 id=&#34;trojan-go套nginx&#34;&gt;Trojan-go套Nginx&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;部署结构&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;监听0.0.0.0:443端口, 接收https请求;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;监听127.0.0.1:80/1080(来自&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;的fallback)端口, 接收来自&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;转发的(http)请求&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;环境&lt;br&gt;
Ubuntu 18.0.4LTS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;&lt;br&gt;
使用apt命令安装&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# apt install nginx&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;并修改配置文件&lt;br&gt;
主要配置文件都未做修改(包括/etc/nginx/nginx.conf)&lt;br&gt;
仅修改了/etc/nginx/sites-enabled/default文件, 增加在1080端口监听的http服务, 并选择了不同的根目录 - /nginx/html&lt;br&gt;
修改后的内容如下:&lt;br&gt;
注: nginx -t命令可检查配置文件的有效性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;83
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cat /etc/nginx/sites-enabled/default  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Default server configuration
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        listen 127.0.0.1:80;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # SSL configuration
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # listen 443 ssl default_server;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # listen [::]:443 ssl default_server;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # Note: You should disable gzip for SSL traffic.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # See: https://bugs.debian.org/773332
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # Read up on ssl_ciphers to ensure a secure configuration.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # See: https://bugs.debian.org/765782
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # Self signed certs generated by the ssl-cert package
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # Don&amp;#39;t use them in a production server!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # include snippets/snakeoil.conf;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        root /var/www/html;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # Add index.php to the list if you are using PHP
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        index index.html index.htm index.nginx-debian.html;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server_name _;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        location / {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                # First attempt to serve request as file, then
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                # as directory, then fall back to displaying a 404.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                try_files $uri $uri/ =404;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # pass PHP scripts to FastCGI server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #location ~ \.php$ {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #       include snippets/fastcgi-php.conf;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #       # With php-fpm (or other unix sockets):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #       fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #       # With php-cgi (or other tcp sockets):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #       fastcgi_pass 127.0.0.1:9000;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # deny access to .htaccess files, if Apache&amp;#39;s document root
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # concurs with nginx&amp;#39;s one
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #location ~ /\.ht {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #       deny all;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        listen 127.0.0.1:1080;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        root /nginx/html;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        index index.html index.htm index.nginx-debian.html;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server_name _;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        location / {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                try_files $uri $uri/ =404;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# nginx -t
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx: configuration file /etc/nginx/nginx.conf test is successful
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# service nginx restart
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# service nginx status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Nov 25 15:08:38 testdev systemd[1]: Stopped A high performance web server and a reverse proxy server.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Nov 25 15:08:38 testdev systemd[1]: Starting A high performance web server and a reverse proxy server...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Nov 25 15:08:38 testdev systemd[1]: nginx.service: Failed to parse PID from file /run/nginx.pid: Invalid argument
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Nov 25 15:08:38 testdev systemd[1]: Started A high performance web server and a reverse proxy server.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面&amp;quot;service nginx status&amp;quot;命令报错: &amp;ldquo;nginx.service: Failed to parse PID from file /run/nginx.pid: Invalid argument&amp;rdquo;&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://bobcares.com/blog/failed-to-parse-pid-from-file-run-nginx-pid-invalid-argument/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Failed to parse pid from file /run/nginx.pid invalid argument&lt;/a&gt;&lt;br&gt;
→ &amp;ldquo;This is an example of Nginx and systemd fighting over resources. This warning is unimportant since systemd only uses the PIDFile option to remove PIDFile after the Nginx service has terminated.&amp;rdquo;&lt;br&gt;
由于&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;运行正常, 因此可以忽略这个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;# 建立trojan-go保存目录:&lt;br&gt;
# mkdir /nginx&lt;br&gt;
# chown user:user /nginx&lt;br&gt;
# su user -&lt;br&gt;
$ mkdir /nginx/trojan&lt;br&gt;
$ cd /nginx/trojan&lt;br&gt;
# 从&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;官网&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Releases&lt;/a&gt;中下载for linux-amd64的最新版本(当前是v0.10.6版, Sep 14, 2021)&lt;br&gt;
$ wget &lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go/releases/download/v0.10.6/trojan-go-linux-amd64.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/p4gefau1t/trojan-go/releases/download/v0.10.6/trojan-go-linux-amd64.zip&lt;/a&gt;&lt;br&gt;
# 解压到/nginx/trojan目录&lt;br&gt;
# 先安装zip&lt;br&gt;
$ sudo apt install zip&lt;br&gt;
# 解压zip包&lt;br&gt;
$ unzip trojan-go-linux-amd64.zip&lt;br&gt;
# 复制服务器配置文件例子&lt;br&gt;
$ mkdir conf&lt;br&gt;
$ cp example/server.json conf/&lt;br&gt;
# 准备其它目录(证书目录cert/、log目录log/)&lt;br&gt;
$ mkdir cert&lt;br&gt;
$ mkdir log&lt;br&gt;
# 拷入证书文件&lt;br&gt;
$ cp /tmp/certname.pem /nginx/trojan/cert/&lt;br&gt;
$ cp /tmp/certname.key /nginx/trojan/cert/&lt;br&gt;
# 手动修改例子配置文件server.json&lt;br&gt;
$ vim conf/server.json&lt;br&gt;
&amp;hellip;&lt;br&gt;
# conf/server.json文件内容见后面&lt;br&gt;
# 启动trojan-go&lt;br&gt;
$ ./trojan-go -config /nginx/trojan/conf/server.json&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 配置文件/nginx/trojan/conf/server.json修改后如下:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 注意: 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# trojan-go启动时会检查端口remote_addr/remote_port和fallback_addr/fallback_port是否可连接;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 如果不可连接, trojan-go会直接退出  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cat /nginx/trojan/conf/server.json  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;run_type&amp;#34;: &amp;#34;server&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;local_addr&amp;#34;: &amp;#34;0.0.0.0&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;local_port&amp;#34;: 443,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;remote_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;remote_port&amp;#34;: 80,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;password&amp;#34;: [  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;mypassword&amp;#34;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ],  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;log_level&amp;#34;: 1,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;log_file&amp;#34;: &amp;#34;/nginx/trojan/log/trojan-access.log&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;ssl&amp;#34;: {  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;verify&amp;#34;: true,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;cert&amp;#34;: &amp;#34;/nginx/trojan/cert/certname.pem&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;key&amp;#34;: &amp;#34;/nginx/trojan/cert/certname.key&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;sni&amp;#34;: &amp;#34;mydomain&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fallback_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fallback_port&amp;#34;: 1080,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fingerprint&amp;#34;: &amp;#34;chrome&amp;#34;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;websocket&amp;#34;: {  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;enabled&amp;#34;: true,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;path&amp;#34;: &amp;#34;/113a3256&amp;#34;,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;host&amp;#34;: &amp;#34;mydomain&amp;#34;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查看nginx+trojan-go运行状态&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo netstat -ap | grep tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[sudo] password for user:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost.localdom:http 0.0.0.0:*               LISTEN      32337/nginx: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost.localdo:socks 0.0.0.0:*               LISTEN      32337/nginx: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp6       0      0 [::]:https              [::]:*                  LISTEN      1294/./trojan-go
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ps -aux | grep nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root     32337  0.0  0.1 141116  1556 ?        Ss   15:24   0:00 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;www-data 32339  0.0  0.6 143736  6356 ?        S    15:24   0:00 nginx: worker process
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ps -aux | grep trojan
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root      1294  0.0  1.4 4909504 13892 pts/0   Sl+  07:52   0:03 ./trojan-go -config /nginx/trojan/conf/server.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;经测试, 运行符合预期&lt;/p&gt;
&lt;h4 id=&#34;nginx套trojan-go&#34;&gt;Nginx套Trojan-go&lt;/h4&gt;
&lt;p&gt;注: 在有CDN/无CDN的两种情况下, 实际使用中, Trojan-go线程需要两个, 在配置文件中提供不同的证书: cloudflare源证书、域名证书, 以配合。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.chengxiaobai.com/trouble-maker/trojan-shared-443-port-scheme&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan 共用 443 端口方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.aiopsclub.com/nginx/nginx_stream_proxy/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx系列之nginx四层反向代理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/cuber/ngx_http_google_filter_module&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ngx_http_google_filter_module&lt;/a&gt; Nginx Module for Google
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.linuxbabe.com/nginx/set-nginx-reverse-proxy-google-com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Set Up Nginx Reverse Proxy for Google.com on a Ubuntu VPS&lt;/a&gt; 详细说明了在使用apt安装的nginx上怎么编译google模块并使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;部署结构&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;监听0.0.0.0:443端口, 接收https请求, 并监听127.0.0.1:80/81端口, 处理来自&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;的fallback;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在443端口上根据sni判断目的:
&lt;ul&gt;
&lt;li&gt;tt.mydomain转127.0.0.1:544端口Trojan/Trojan-go;&lt;/li&gt;
&lt;li&gt;cftt.mydomain转127.0.0.1:545端口Trojan/Trojan-go(仿真经过[Cloudfloud][]cdn);&lt;/li&gt;
&lt;li&gt;gg.mydomain转google(暂时未使用&lt;a class=&#34;link&#34; href=&#34;https://github.com/cuber/ngx_http_google_filter_module&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ngx_http_google_filter_module&lt;/a&gt;模块), 直接server &lt;a class=&#34;link&#34; href=&#34;https://www.google.com.hk&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.google.com.hk&lt;/a&gt;:443失败;&lt;/li&gt;
&lt;li&gt;gh.mydomain转github(仅转发)&lt;/li&gt;
&lt;li&gt;其它, 127.0.0.1:543处理https&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在80端口处理来自tt.mydomain-&amp;gt;(https)trojan(127.0.0.1:544)-&amp;gt;(http)80的https消息.&lt;/li&gt;
&lt;li&gt;在81端口处理来自cftt.mydomain-&amp;gt;(https)trojan(127.0.0.1:545)-&amp;gt;(http)81的https消息.&lt;/li&gt;
&lt;li&gt;在127.0.0.1:543端口处理来自其它域名的https访问&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;程序1监听127.0.0.1:544端口(https), 接收来自&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;转发的Trojan/Trojan-go请求, remote/fallback转发到127.0.0.1:80端口的&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;处理&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;程序2监听127.0.0.1:545端口(https), 接收来自&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;转发的Trojan/Trojan-go请求, remote/fallback转发到127.0.0.1:81端口的&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;处理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参考&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.chengxiaobai.com/trouble-maker/trojan-shared-443-port-scheme&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan 共用 443 端口方案&lt;/a&gt; 使用SNI做分发标记&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;环境&lt;br&gt;
Ubuntu 18.0.4LTS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;&lt;br&gt;
使用apt命令安装&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# apt install nginx&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;并修改配置文件&lt;br&gt;
主要配置文件都未做修改(包括/etc/nginx/nginx.conf)&lt;br&gt;
修改了/etc/nginx/nginx.conf和/etc/nginx/sites-enabled/default文件, 监听以下端口:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0.0.0.0:443 https(入口)&lt;/li&gt;
&lt;li&gt;127.0.0.1:543 https&lt;/li&gt;
&lt;li&gt;127.0.0.1:80 http&lt;/li&gt;
&lt;li&gt;127.0.0.1:81 http&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修改后的内容如下:&lt;br&gt;
注: nginx -t命令可检查配置文件的有效性。&lt;br&gt;
/etc/nginx/nginx.conf:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# nginx.conf仅增加了stream这一段配置
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cat /etc/nginx/nginx.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user www-data;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;worker_processes auto;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pid /run/nginx.pid;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;include /etc/nginx/modules-enabled/*.conf;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;events {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        worker_connections 768;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # multi_accept on;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 流量转发核心配置
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;stream {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # SNI识别, 并装域名映射成为配置名
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        map $ssl_preread_server_name $backend_name {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                tt.mydomain trojan;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                cftt.mydomain cftrojan;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                gg.mydomain google;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                gh.mydomain github;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                # 都不匹配
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                default web;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # web, 转本地443
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        upstream web {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                server 127.0.0.1:543;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # trojan
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        upstream trojan {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                server 127.0.0.1:544;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # cloudflare 做CDN 的 trojan
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        upstream cftrojan {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                server 127.0.0.1:545;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # google
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        upstream google {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        #       google on;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                server www.google.com.hk:443;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # github
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        upstream github {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                server github.com:443;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # 监听443端口, 并开启ssl_preread
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                listen 443 reuseport;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                listen [::]:443 reuseport;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#               proxy_protocol off;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                proxy_pass  $backend_name;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                ssl_preread on;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;......
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;/etc/nginx/sites-enabled/default:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cat /etc/nginx/sites-enabled/default  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        listen 127.0.0.1:543 ssl;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        root /var/www/shtml;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # Add index.php to the list if you are using PHP
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        index index.html index.htm index.nginx-debian.html;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server_name _;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # ssl证书地址
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ssl_certificate     /var/cert/mydomain.pem;  # pem文件的路径
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ssl_certificate_key  /var/cert/mydomain.key; # key文件的路径
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        location / {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                try_files $uri $uri/ =404;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        listen 127.0.0.1:80;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        root /var/www/html1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        index index.html index.htm index.nginx-debian.html;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server_name _;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        location / {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                try_files $uri $uri/ =404;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        listen 127.0.0.1:81;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        root /var/www/html2;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        index index.html index.htm index.nginx-debian.html;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server_name _;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        location / {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                try_files $uri $uri/ =404;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;......  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;# 检查nginx配置文件是否正常&lt;br&gt;
# nginx -t&lt;br&gt;
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok&lt;br&gt;
nginx: configuration file /etc/nginx/nginx.conf test is successful&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;重启nginx, 并查看运行状态&lt;br&gt;
# service nginx restart&lt;br&gt;
&amp;hellip;&lt;br&gt;
# service nginx status&lt;br&gt;
&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;# 建立trojan-go保存目录:&lt;br&gt;
# mkdir /nginx&lt;br&gt;
# chown user:user /nginx&lt;br&gt;
# su user -&lt;br&gt;
$ mkdir /usr/local/bin/trojan&lt;br&gt;
$ cd /usr/local/bin/trojan&lt;br&gt;
# 从&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;官网&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Releases&lt;/a&gt;中下载for linux-amd64的最新版本(当前是v0.10.6版, Sep 14, 2021)&lt;br&gt;
$ wget &lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go/releases/download/v0.10.6/trojan-go-linux-amd64.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/p4gefau1t/trojan-go/releases/download/v0.10.6/trojan-go-linux-amd64.zip&lt;/a&gt;&lt;br&gt;
# 解压到/usr/local/bin/trojan目录&lt;br&gt;
# 先安装zip&lt;br&gt;
$ sudo apt install zip&lt;br&gt;
# 解压zip包&lt;br&gt;
$ unzip trojan-go-linux-amd64.zip&lt;br&gt;
# 复制服务器配置文件例子&lt;br&gt;
$ mkdir conf&lt;br&gt;
$ cp example/server.json conf/server1.json&lt;br&gt;
$ cp example/server.json conf/server2.json&lt;br&gt;
# 准备其它目录(证书目录cert/、log目录log/)&lt;br&gt;
$ mkdir cert&lt;br&gt;
$ mkdir log&lt;br&gt;
# 拷入证书文件&lt;br&gt;
$ cp /tmp/mydomain.pem /var/cert/&lt;br&gt;
$ cp /tmp/mydomain.key /var/cert/&lt;br&gt;
# 手动修改例子配置文件server.json&lt;br&gt;
$ vim /usr/local/bin/trojan/conf/server1.json&lt;br&gt;
&amp;hellip;&lt;br&gt;
$ vim /usr/local/bin/trojan/conf/server2.json&lt;br&gt;
&amp;hellip;&lt;br&gt;
# conf/server.json文件内容见后面&lt;br&gt;
# 启动trojan-go&lt;br&gt;
$ /usr/local/bin/trojan/trojan-go -config /usr/local/bin/trojan/conf/server1.json &amp;amp;&lt;br&gt;
$ /usr/local/bin/trojan/trojan-go -config /usr/local/bin/trojan/conf/server2.json &amp;amp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 配置文件/usr/local/bin/trojan/conf/server1.json和/usr/local/bin/trojan/conf/server2.json修改后如下:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 注意: 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# trojan-go启动时会检查端口remote_addr/remote_port和fallback_addr/fallback_port是否可连接;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 如果不可连接, trojan-go会直接退出  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cat /usr/local/bin/trojan/conf/server1.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;run_type&amp;#34;: &amp;#34;server&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;local_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;local_port&amp;#34;: 544,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;remote_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;remote_port&amp;#34;: 80,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;password&amp;#34;: [
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;123456a&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;log_level&amp;#34;: 1,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;log_file&amp;#34;: &amp;#34;/usr/local/bin/trojan/log/trojan1-access.log&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;ssl&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;verify&amp;#34;: true,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;cert&amp;#34;: &amp;#34;/var/cert/mydomain.pem&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;key&amp;#34;: &amp;#34;/var/cert/mydomain.key&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;sni&amp;#34;: &amp;#34;tt.mydomain&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fallback_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fallback_port&amp;#34;: 80,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fingerprint&amp;#34;: &amp;#34;chrome&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;websocket&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;enabled&amp;#34;: true,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;path&amp;#34;: &amp;#34;/713a5254&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;host&amp;#34;: &amp;#34;tt.mydomain&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cat /usr/local/bin/trojan/conf/server2.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;run_type&amp;#34;: &amp;#34;server&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;local_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;local_port&amp;#34;: 545,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;remote_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;remote_port&amp;#34;: 81,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;password&amp;#34;: [
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;123456a&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;log_level&amp;#34;: 1,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;log_file&amp;#34;: &amp;#34;/usr/local/bin/trojan/log/trojan2-access.log&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;ssl&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;verify&amp;#34;: true,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;cert&amp;#34;: &amp;#34;/var/cert/mydomain.pem&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;key&amp;#34;: &amp;#34;/var/cert/mydomain.key&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;sni&amp;#34;: &amp;#34;cftt.mydomain&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fallback_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fallback_port&amp;#34;: 81,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fingerprint&amp;#34;: &amp;#34;chrome&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;websocket&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;enabled&amp;#34;: true,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;path&amp;#34;: &amp;#34;/713a5254&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;host&amp;#34;: &amp;#34;tt.mydomain&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查看nginx+trojan-go运行状态&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo netstat -ap | grep tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[sudo] password for user:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost.localdom:http 0.0.0.0:*               LISTEN      12501/nginx: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost.localdomai:81 0.0.0.0:*               LISTEN      12501/nginx: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 0.0.0.0:https           0.0.0.0:*               LISTEN      12501/nginx: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost.locald:klogin 0.0.0.0:*               LISTEN      12501/nginx: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost.locald:kshell 0.0.0.0:*               LISTEN      5838/trojan-go
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost.localdoma:545 0.0.0.0:*               LISTEN      5872/trojan-go
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp6       0      0 [::]:https              [::]:*                  LISTEN      12501/nginx: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ps -aux | grep nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root     24830  0.0  0.1 145520  1648 ?        Ss   03:34   0:00 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;www-data 24834  0.0  0.6 148148  6504 ?        S    03:34   0:00 nginx: worker process
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ps -aux | grep trojan
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root      5838  0.0  1.5 4910912 14656 pts/2   Sl   02:41   0:01 /usr/local/bin/trojan/trojan-go -config /usr/local/bin/trojan/conf/server1.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root      5872  0.0  1.4 4910400 13876 pts/2   Sl   02:41   0:00 /usr/local/bin/trojan/trojan-go -config /usr/local/bin/trojan/conf/server2.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;经测试, 运行符合预期&lt;br&gt;
把trojan-go的启动放在/etc/rc.loca里, 跟随系统启动, 但好像有些问题, 在log文件里看到是:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;github.com/p4gefau1t/trojan-go/proxy.(*Node).BuildNext:stack.go:29 invalid fallback address | dial tcp 127.0.0.1:81: connect: connection refused&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;应该是nginx还没启动&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cat /etc/rc.local
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sleep &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/usr/local/bin/trojan/trojan-go -config /usr/local/bin/trojan/conf/server1.json &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/usr/local/bin/trojan/trojan-go -config /usr/local/bin/trojan/conf/server2.json &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;nginxtrojan-go-on-ipv6-vps&#34;&gt;Nginx+Trojan-go On IPV6 VPS&lt;/h4&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/ed709fcc54c6&#34;  title=&#34;-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ubuntu 20.04 使用systemd创建自定义服务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;环境、目标及方案:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VPS网络环境&lt;br&gt;
1*IPV6地址, 可以访问Internet, 可以从Internet访问&lt;br&gt;
1*IPV4地址, 可以访问Internet, 不可以从Internet访问&lt;/li&gt;
&lt;li&gt;目标&lt;br&gt;
网上IPV4/IPV6的机器均可访问该VPS提供的Trojan-go服务, 且用浏览器访问时, 可以正常访问其网页。&lt;/li&gt;
&lt;li&gt;操作系统(命令&amp;quot;lsb_release -a&amp;quot;查看)&lt;br&gt;
Ubuntu 18.0.4LTS&lt;/li&gt;
&lt;li&gt;部署结构
&lt;ul&gt;
&lt;li&gt;网络&lt;br&gt;
通过使用&lt;a class=&#34;link&#34; href=&#34;https://www.cloudflare.com/&#34;  title=&#34;C&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cloudflare&lt;/a&gt;的CDN, IPV4/IPV6的网络设置可通过https访问VPS的443端口&lt;br&gt;
&amp;mdash; 最简单的处理方式&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;&lt;br&gt;
监听443端口, 并将请求转给Trojan(127.0.0.1:1443)处理(在传输层_stream层处理)&lt;br&gt;
监听127.0.0.1:80, 处理来自Trojan-go转发的(http)请求&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;&lt;br&gt;
监听127.0.0.1:1443端口, 处理Trojan/Trojan-go消息, 并(在应用层_http层)将非Trojan/Trojan-go消息转发到127.0.0.1:80(为http消息), 给&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;使用cloudflare设置cdn&#34;&gt;使用Cloudflare设置CDN&lt;/h5&gt;
&lt;p&gt;在&lt;a class=&#34;link&#34; href=&#34;https://www.cloudflare.com/&#34;  title=&#34;C&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cloudflare&lt;/a&gt;的DNS中进行设置, 让相关域名被&amp;quot;Proxied&amp;quot;&lt;/p&gt;
&lt;h5 id=&#34;配置nginx&#34;&gt;配置Nginx&lt;/h5&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;N&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;使用apt命令进行安装, 版本信息如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-v&#34; data-lang=&#34;v&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;V&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.14.0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Ubuntu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;built&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;OpenSSL&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.1.1&lt;/span&gt;  &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Sep&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2018&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nc&#34;&gt;TLS&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SNI&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;support&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;enabled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;configure&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;arguments&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;cc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;opt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-g -O2 -fdebug-prefix-map=/build/nginx-YlUNvj/nginx-1.14.0=. -fstack-protector-strong -Wformat -Werror=format-security -fPIC -Wdate-time -D_FORTIFY_SOURCE=2&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ld&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;opt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -fPIC&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;usr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;share&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;conf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;etc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;conf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;access&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lock&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;modules&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;usr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;lib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;modules&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;lib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;fastcgi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;lib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;fastcgi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;lib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;proxy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;scgi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;lib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;scgi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;uwsgi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;lib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;nginx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;uwsgi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;debug&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;pcre&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;jit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_ssl_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_stub_status_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_realip_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_auth_request_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_v2_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_dav_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_slice_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;threads&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_addition_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_geoip_module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;dynamic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_gunzip_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_gzip_static_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_image_filter_module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;dynamic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_sub_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;http_xslt_module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;dynamic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;dynamic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;stream_ssl_module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;mail&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;dynamic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;mail_ssl_module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;配置文件&amp;quot;/etc/nginx/nginx.conf&amp;quot;中增加了&amp;quot;stream&amp;quot;段, 如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cat /etc/nginx/nginx.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;events段
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;stream {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        upstream trojan-go {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                server 127.0.0.1:1443;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                listen 443 reuseport;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                listen [::]:443 reuseport;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                proxy_pass trojan-go;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http段
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;配置文件&amp;quot;/etc/nginx/sites-enabled/default&amp;quot;如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        # listen 80;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        listen 127.0.0.1:80;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        root /var/www/html;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        index index.html index.htm index.nginx-debian.html;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server_name _;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        location / {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                try_files $uri $uri/ =404;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;只有一个监听127.0.0.1:80的http服务。&lt;/p&gt;
&lt;h5 id=&#34;配置trojan-go&#34;&gt;配置Trojan-go&lt;/h5&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/p4gefau1t/trojan-go&#34;  title=&#34;T&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trojan-go&lt;/a&gt;文件放在/usr/local/bin/trojan目录下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# ll /usr/local/bin/trojan/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;total 13300
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x 8 root root     4096 Nov 29 21:41 ./
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x 3 root root     4096 Nov 29 20:20 ../
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x 2 root root     4096 Nov 29 20:53 cert/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x 2 root root     4096 Nov 29 21:25 conf/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x 2 root root     4096 Nov 29 20:20 example/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x 2 root root     4096 Nov 29 20:21 geo/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x 2 root root     4096 Nov 29 23:25 log/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rwxr-xr-x 1 root root 13582336 Sep 14  2021 trojan-go*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rw-r--r-- 1 root root      515 Nov 29 21:38 trojan-go.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x 2 root root     4096 Nov 29 20:21 zip/ 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中:&lt;br&gt;
* cert目录: 证书&lt;br&gt;
* conf目录: 配置文件server.json&lt;br&gt;
* log目录: log文件&lt;br&gt;
* trojan-go.service: 自定义Trojan-go服务文件&lt;/p&gt;
&lt;p&gt;配置文件&amp;quot;server.json&amp;quot;如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cat /usr/local/bin/trojan/conf/server.json 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;run_type&amp;#34;: &amp;#34;server&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;local_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;local_port&amp;#34;: 1443,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;remote_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;remote_port&amp;#34;: 80,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;password&amp;#34;: [
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;123456a&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;log_level&amp;#34;: 1,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;log_file&amp;#34;: &amp;#34;/usr/local/bin/trojan/log/trojan-access.log&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;ssl&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;cert&amp;#34;: &amp;#34;/usr/local/bin/trojan/cert/mydomain.pem&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;key&amp;#34;: &amp;#34;/usr/local/bin/trojan/cert/mydomain.key&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;sni&amp;#34;: &amp;#34;vps.mydomain&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fallback_addr&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fallback_port&amp;#34;: 80,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;fingerprint&amp;#34;: &amp;#34;chrome&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;websocket&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;enabled&amp;#34;: true,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;path&amp;#34;: &amp;#34;/---------&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;host&amp;#34;: &amp;#34;vps.mydomain&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;自定义服务Trojan-go服务文件如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cat /usr/local/bin/trojan/trojan-go.service 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Unit]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Description=Trojan-Go - An unidentifiable mechanism that helps you bypass GFW
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Documentation=https://p4gefau1t.github.io/trojan-go/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;After=network.target nss-lookup.target
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Service]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User=root
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NoNewPrivileges=true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ExecStart=/usr/local/bin/trojan/trojan-go -config /usr/local/bin/trojan/conf/server.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Restart=on-failure
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;RestartSec=10s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;LimitNOFILE=infinity
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Install]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WantedBy=multi-user.target
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这是用例子文件/usr/local/bin/trojan/example/trojan-go.service修改的, 仅修改了两处:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Service-&amp;gt;ExecStart 目录和文件名都不一样&lt;/li&gt;
&lt;li&gt;Service-&amp;gt;User 原为nobody, 改为root&lt;br&gt;
原用nobody时, 启动时会报错, 应该是权限不够&lt;br&gt;
(linux对于非root权限用户不能使用1024以下的端口, 或者, 目录与文件访问权限不够 - 很可能是后面这个问题)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;设置trojan-go自启动&#34;&gt;设置Trojan-go自启动&lt;/h5&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/ed709fcc54c6&#34;  title=&#34;-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ubuntu 20.04 使用systemd创建自定义服务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 服务文件要放在/lib/systemd/system/目录下
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cp /usr/local/bin/trojan/trojan-go.service /lib/systemd/system/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 重新加载服务配置
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# systemctl daemon-reload
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 设置trojan-go开机启动
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# systemctl enable trojan-go.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Created symlink /etc/systemd/system/multi-user.target.wants/trojan-go.service → /lib/systemd/system/trojan-go.service.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# service trojan-go restart
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# service trojan-go status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;● trojan-go.service - Trojan-Go - An unidentifiable mechanism that helps you bypass GFW
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Loaded: loaded (/lib/systemd/system/trojan-go.service; enabled; vendor preset: enabled)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Active: active (running) since Tue 2020-10-29 23:31:17 CST; 1h 51min ago
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     Docs: https://p4gefau1t.github.io/trojan-go/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Main PID: 1962 (trojan-go)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Tasks: 4 (limit: 513)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   CGroup: /system.slice/trojan-go.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           └─1962 /usr/local/bin/trojan/trojan-go -config /usr/local/bin/trojan/conf/server.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Oct 29 23:31:17 VPS systemd[1]: Started Trojan-Go - An unidentifiable mechanism that helps you bypass GFW.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Oct 29 23:31:17 VPS trojan-go[1962]: [INFO]  2020/10/29 23:31:17 trojan-go v0.10.6 initializing
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;经测试, 该服务器运行符合预期。&lt;/p&gt;
&lt;h2 id=&#34;未解决问题&#34;&gt;&lt;strong&gt;未解决问题&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;使用ngx_http_google_filter_module代理google&#34;&gt;使用ngx_http_google_filter_module代理Google&lt;/h3&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/cuber/ngx_http_google_filter_module&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ngx_http_google_filter_module&lt;/a&gt; Nginx Module for Google
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.linuxbabe.com/nginx/set-nginx-reverse-proxy-google-com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Set Up Nginx Reverse Proxy for Google.com on a Ubuntu VPS&lt;/a&gt; 详细说明了在使用apt安装的nginx上怎么编译google模块并使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://chinadigitaltimes.net/chinese/607420.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://jimway71.github.io/img/61-01.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>临时记录</title>
        <link>https://jimway71.github.io/p/%E4%B8%B4%E6%97%B6%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Mon, 15 Aug 2022 23:33:00 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E4%B8%B4%E6%97%B6%E8%AE%B0%E5%BD%95/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-19.jpg" alt="Featured image of post 临时记录" /&gt;&lt;h2 id=&#34;openwrt&#34;&gt;OpenWrt:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_38892883/article/details/79551504&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Openwrt通用固件make menuconfig配置&lt;/a&gt;:&lt;br&gt;
2018-03-14 12:10:35 发布&lt;br&gt;
内容: OpenWrt的make menuconfig详细配置&lt;br&gt;
包括:&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Target System &amp;mdash;&amp;gt;&lt;br&gt;
Target Profile &amp;mdash;&amp;gt;&lt;br&gt;
LuCI &amp;mdash;&amp;gt; Collections&lt;br&gt;
LuCI &amp;mdash;&amp;gt; Applications&lt;br&gt;
Kernel modules  &amp;mdash;&amp;gt; Block Device&lt;br&gt;
Kernelmodules &amp;mdash;&amp;gt; Filesystems&lt;br&gt;
(Utilities  &amp;mdash;&amp;gt;Filesystem)&lt;br&gt;
Kernel modules &amp;mdash;&amp;gt; Native Language Support&lt;br&gt;
Kernel modules &amp;mdash;&amp;gt;  Other modules&lt;br&gt;
Base system  &amp;mdash;&amp;gt;&lt;br&gt;
Kernel modules  &amp;mdash;&amp;gt; USB Support&lt;br&gt;
Network  &amp;mdash;&amp;gt;&lt;br&gt;
Kernel modules  &amp;mdash;&amp;gt; Video Support&lt;br&gt;
Multimedia    &amp;mdash;&amp;gt;&lt;br&gt;
Libraries &amp;mdash;&amp;gt;&lt;br&gt;
Utilities  &amp;mdash;&amp;gt;&lt;br&gt;
Kernel modules &amp;mdash;&amp;gt;Wireless Drivers&lt;br&gt;
Utilities  &amp;mdash;&amp;gt; Compression&lt;br&gt;
Utilities  &amp;mdash;&amp;gt;  Filesystem&lt;br&gt;
Utilities  &amp;mdash;&amp;gt;  disc&lt;br&gt;
Utilities  &amp;ndash;&amp;gt;&lt;br&gt;
Network&amp;ndash;&amp;gt; wireless&lt;br&gt;
Network&amp;ndash;&amp;gt; VPN&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenWRT 软件包中文对照说明:&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://www.wbini.com/id-12.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.wbini.com/id-12.html&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://onlyke.com/html/713.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;拒绝DNS污染和UDP干扰，在Openwrt路由器上部署DNSCrypt，加密查询DNS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;电视盒子&#34;&gt;电视盒子&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.znds.com/tv-1207323-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;打造最强华为海思hi3798mv100/200/300机顶盒NAS服务器系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://bbs.histb.com/d/83-hi3798&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hi3798可适配机型维护参考 - From 海思机顶盒NAS社区&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;视频播放相关&#34;&gt;视频播放相关&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://plyr.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;plyr&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/sampotts/plyr&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;plyr Github&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://www.yixao.net/share/16426.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;plyr 一款简单易用，可定制化的Html5的音视频播放器&lt;/a&gt;&lt;br&gt;
特性:&lt;br&gt;
HTML视频和音频&lt;br&gt;
无障碍-完全支持VTT字幕和屏幕阅读器&lt;br&gt;
可自定义-使用所需的标记让播放器可定制化&lt;br&gt;
干净的HTML-使用原生的元素。&lt;br&gt;
表示音量，&lt;br&gt;
自适应-适用于任何屏幕尺寸&lt;br&gt;
流媒体-支持hls.js，Shaka和dash.js流媒体播放&lt;br&gt;
API-通过标准化的API切换播放，音量，搜索等&lt;br&gt;
灵活，所有活动都跨格式标准化&lt;br&gt;
全屏-支持本机全屏并回退到“全屏”模式&lt;br&gt;
⌨️ 快捷键-支持键盘快捷键&lt;br&gt;
画中画-支持画中画模式&lt;br&gt;
Playsinline-支持playsinline属性&lt;br&gt;
速度控制-即时调整速度&lt;br&gt;
多个字幕-支持多个字幕轨道&lt;br&gt;
i18n支持-支持控件国际化&lt;br&gt;
预览缩略图-支持显示预览缩略图&lt;br&gt;
没有框架-用“原生” ES6 JavaScript编写，不需要jQuery&lt;br&gt;
♀️ SASS-包含在您的构建过程中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows 10 - 播放到设备(play to Devices)&lt;br&gt;
执行程序名: wmpdmc.exe&lt;br&gt;
WMPDMC.exe是一个可执行文件，它是Microsoft Corporation开发的Windows Media Player 11程序的一部分。该软件的大小通常约为8.24 MB&lt;br&gt;
这个&amp;quot;播放到设备&amp;quot;功能，是本地视频DLNA投屏功能, 通过此功能可以把视频播放到电视机上，在电视机的大屏幕上播放。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;网络&#34;&gt;网络&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SSLH：让 HTTPS、SSH 共享端口&lt;br&gt;
考虑的缘由:&lt;br&gt;
· 公网上服务器使用ssh通用端口22/tcp总会招来很多测试攻击;&lt;br&gt;
· 而如果使用非22/tcp端口, 则(应该是)会被当做非正常访问, 而被GFW攻击而出现异常中断
处理的方式:&lt;br&gt;
· 使用VNC方式访问, 缺点是操作相对复杂。&lt;br&gt;
· 让ssh共用已开放的http(或https)端口, 设置上可能麻烦点, 但使用方便。&lt;br&gt;
解决方案参考:&lt;br&gt;
· &lt;a class=&#34;link&#34; href=&#34;https://linux.cn/article-11247-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SSLH：让 HTTPS 和 SSH 共享同一个端口&lt;/a&gt;&lt;br&gt;
可以在虚拟机上测试, 并可以同时测试&lt;a class=&#34;link&#34; href=&#34;https://github.com/vaxilu/x-ui&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;x-ui 支持多协议多用户的 xray 面板&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;系统性能测试对比&#34;&gt;系统性能测试(对比)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://openbenchmarking.org/test/pts/sysbench&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;sysbench and (CPUs)result - OpenBenchMarking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hugo相关&#34;&gt;HuGo相关&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(&lt;a class=&#34;link&#34; href=&#34;https://forum.freecodecamp.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;freecodecamp&lt;/a&gt;)从WordPress到Hugo — 我如何迁移250多个页面的网站和我使用的脚本:  &lt;a class=&#34;link&#34; href=&#34;https://www.freecodecamp.org/news/wordpress-to-hugo-scripts/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;From WordPress to Hugo – How I Migrated a 250+ Page Site and the Scripts I Used&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;临时链接s&#34;&gt;临时链接(s)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/445661017&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;知乎: Pycharm安装配置Pyside6&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.perfcode.com/p/pyside6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PySide6详细中文教程&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://www.codebaoku.com/it-python/it-python-227355.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;两种将python打包成exe的方式讲解 - 含auto-py-to-exe&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://cloud.tencent.com/developer/article/1724427&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PyCharm中配置PySide2的图文教程&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://plugins.jetbrains.com/plugin/15282-acode-time&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ACode Time&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;python--pyside&#34;&gt;Python &amp;amp; Pyside&lt;/h2&gt;
&lt;p&gt;**&lt;a class=&#34;link&#34; href=&#34;https://www.daimajiaoliu.com/daima/479a101359003f8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PySide程序的国际化&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>各种问题汇总记录</title>
        <link>https://jimway71.github.io/p/%E5%90%84%E7%A7%8D%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Mon, 15 Aug 2022 16:22:00 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E5%90%84%E7%A7%8D%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB%E8%AE%B0%E5%BD%95/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-18.jpg" alt="Featured image of post 各种问题汇总记录" /&gt;&lt;h2 id=&#34;其他qa相关链接&#34;&gt;其他Q&amp;amp;A相关链接:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/qa/&#34; &gt;Q&amp;amp;A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/docker%E7%9B%B8%E5%85%B3/&#34; &gt;Docker相关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/docker%E5%AE%B9%E5%99%A8%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%BD%91%E7%BB%9C/&#34; &gt;Docker容器无法访问网络&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/wordpress-qa/&#34; &gt;Wordpress Q&amp;amp;A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/openwrt-info/&#34; &gt;Openwrt Info - Openwrt for Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;windows系统下的问题&#34;&gt;Windows系统下的问题&lt;/h2&gt;
&lt;h3 id=&#34;启动pycharm时报错的问题&#34;&gt;启动PyCharm时报错的问题&lt;/h3&gt;
&lt;p&gt;现象:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Internal error. Please refer to https://jb.gg/ide/critical-startup-errors
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;com.intellij.ide.plugins.StartupAbortedException: Cannot start app
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at com.intellij.idea.StartupUtil.lambda$start$15(StartupUtil.java:263)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at java.base/java.util.concurrent.CompletableFuture.uniExceptionally(CompletableFuture.java:986)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at java.base/java.util.concurrent.CompletableFuture.uniExceptionallyStage(CompletableFuture.java:1004)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at java.base/java.util.concurrent.CompletableFuture.exceptionally(CompletableFuture.java:2307)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at com.intellij.idea.StartupUtil.start(StartupUtil.java:262)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at com.intellij.idea.Main.bootstrap(Main.java:118)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at com.intellij.idea.Main.main(Main.java:79)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Caused by: java.net.BindException: Address already in use: bind
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at java.base/sun.nio.ch.Net.bind0(Native Method)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at java.base/sun.nio.ch.Net.bind(Net.java:459)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at java.base/sun.nio.ch.Net.bind(Net.java:448)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:227)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:134)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1334)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:506)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:491)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:973)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:260)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:356)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:503)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    at java.base/java.lang.Thread.run(Thread.java:829)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-----
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Your JRE: 11.0.15+10-b2043.56 amd64 (JetBrains s.r.o.)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;D:\Green Files\JetBrains\PyCharm Community Edition\jbr
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/question&amp;amp;answer-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Internal error. Please refer to https://jb.gg/ide/critical-startup-errors&#34;
	
	
&gt;&lt;br&gt;
猜测: 可能与Hyper-v启动的op系统有关。&lt;/p&gt;
&lt;p&gt;相关资料:&lt;br&gt;
● &lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/93340000&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;知乎: intellij pycharm启动报错Address already in use: bind&lt;/a&gt;&lt;br&gt;
● &lt;a class=&#34;link&#34; href=&#34;https://intellij-support.jetbrains.com/hc/en-us/community/posts/360004973960-Critical-Internal-Error-on-Startup-of-IntelliJ-IDEA-Cannot-Lock-System-Folders-&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Critical Internal Error on Startup of IntelliJ IDEA: &amp;ldquo;Cannot Lock System Folders&amp;rdquo;&lt;/a&gt;&lt;br&gt;
●&lt;a class=&#34;link&#34; href=&#34;https://github.com/docker/for-win/issues/3171&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Unable to bind ports: Docker-for-Windows &amp;amp; Hyper-V excluding but not using important port ranges #3171&lt;/a&gt;&lt;br&gt;
● &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-US/troubleshoot/windows-server/networking/default-dynamic-port-range-tcpip-chang&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;The default dynamic port range for TCP/IP has changed since Windows Vista and in Windows Server 2008&lt;/a&gt;&lt;br&gt;
● &lt;a class=&#34;link&#34; href=&#34;https://intellij-support.jetbrains.com/hc/en-us/community/posts/360010020399-Pycharm-2020-3-Internal-Error-java-net-BindException-Address-already-in-use-bind-Windows-10&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pycharm 2020.3 - Internal Error - java.net.BindException: Address already in use: bind - Windows 10&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原因:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;根据&amp;quot;&lt;a class=&#34;link&#34; href=&#34;https://intellij-support.jetbrains.com/hc/en-us/community/posts/360010020399-Pycharm-2020-3-Internal-Error-java-net-BindException-Address-already-in-use-bind-Windows-10&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pycharm 2020.3 - Internal Error - java.net.BindException: Address already in use: bind - Windows 10&lt;/a&gt;&amp;ldquo;中的说法:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To lock folders IDE is starting a server on localhost, it tries to bind on the first available port between 6942 and 6991, this exception is thrown if IDE was not able to bind on any of the ports in this range.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyCharm启动时, 需要从tcp端口6942到6991中找到一个可用的端口, 如果找不到, 就会报这个错误。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用cmd命令:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看ipv4 TCP的动态端口范围:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;c:\&amp;gt; netsh int ipv4 show dynamicport tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;协议 tcp 动态端口范围
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;启动端口        : 49152
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;端口数          : 16384
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查看ipv6 TCP的动态端口范围:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;c:\&amp;gt; netsh int ipv6 show dynamicport tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;协议 tcp 动态端口范围
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;启动端口        : 49152
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;端口数          : 16384
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查看ipv4 tcp保留端口:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;c:\&amp;gt; netsh int ipv4 show excludedportrange protocol=tcp  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;协议 tcp 端口排除范围
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;开始端口    结束端口
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----------    --------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      2869        2869
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      5357        5357
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     10243       10243
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     50000       50059     *
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     53994       54093
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54094       54193
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54194       54293
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54396       54495
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54496       54595
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54596       54695
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* - 管理的端口排除。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查看ipv6 tcp保留端口:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;c:\&amp;gt; netsh int ipv6 show excludedportrange protocol=tcp  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;协议 tcp 端口排除范围
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;开始端口    结束端口
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----------    --------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      2869        2869
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      5357        5357
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     10243       10243
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     50000       50059     *
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     53994       54093
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54094       54193
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54194       54293
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54396       54495
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54496       54595
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54596       54695
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* - 管理的端口排除。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;解决方法:&lt;br&gt;
&lt;strong&gt;只要确保tcp端口6942到6991不在上述tcp动态端口范围, 也不在上述tcp保留端口范围, 就应该没问题&lt;/strong&gt;&lt;br&gt;
参考&amp;rdquo;&lt;a class=&#34;link&#34; href=&#34;https://github.com/docker/for-win/issues/3171#issuecomment-554587817&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Unable to bind ports: Docker-for-Windows &amp;amp; Hyper-V excluding but not using important port ranges #3171&lt;/a&gt;&amp;ldquo;的操作：&lt;br&gt;
以&lt;strong&gt;管理员身份运行&lt;/strong&gt;&amp;lsquo;命令提示符&amp;rsquo;(netsh的set命令需要管理员权限), 运行:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;c:\&amp;gt; netsh int ipv4 set dynamic tcp start=49152 num=16384
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;确定。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;c:\&amp;gt; netsh int ipv4 show dynamicport tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;协议 tcp 动态端口范围
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;启动端口        : 49152
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;端口数          : 16384
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;c:\&amp;gt; netsh int ipv4 show excludedportrange protocol=tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;协议 tcp 端口排除范围
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;开始端口    结束端口
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----------    --------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      2869        2869
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      5357        5357
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     10243       10243
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     50000       50059     *
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     53994       54093
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54094       54193
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54194       54293
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54396       54495
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54496       54595
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     54596       54695
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* - 管理的端口排除。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;操作完成后需要重启, 重启后PyCharm可以正常启动。&lt;br&gt;
实际操作记录:&lt;br&gt;
其实也不知道哪条命令起的作用&amp;hellip;&lt;br&gt;
● 先停了Hyper-V中的全部虚拟机&lt;br&gt;
● 把tcp动态端口范围调整到25192-300, 重启后, PyCharm就可以正常启动了;&lt;br&gt;
● 再把tcp动态端口范围调整到20000-20000, 重启, PyCharm启动也没问题;&lt;br&gt;
● 最后, 把tcp动态端口范围调整回到49152-16384, 启动Hyper-V中全部虚拟机, PyCharm的启动依然正常。&lt;br&gt;
反正一通操作后, 一切回归正常, 而tcp的端口配置也应该没有改变。 - 不清楚怎么好的!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;linux系统下的问题&#34;&gt;Linux系统下的问题&lt;/h2&gt;
&lt;h3 id=&#34;crontab所用时区&#34;&gt;crontab所用时区&lt;/h3&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://serverfault.com/questions/791713/what-time-zone-is-a-cron-job-using&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What time zone is a cron job using?&lt;/a&gt;&lt;br&gt;
下面的命令返回crontab看到的时区信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Armbian(Ubuntu Bionic with Armbian Linux 5.3.0-aml-g12)中成功&lt;/li&gt;
&lt;li&gt;在Ubuntu 16.04.7 LTS中成功(raksmart)&lt;/li&gt;
&lt;li&gt;在Ubuntu 22.04 LTS中成功(pacificrack)&lt;/li&gt;
&lt;li&gt;在Ubuntu-22.04中失败(WSL), 报错如下(env报的错):&lt;br&gt;
Usage: eval `lesspipe`&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;# env -i $(cat /proc/$(&amp;lt;/var/run/crond.pid)/environ|xargs -0 echo) date +%Z&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分解:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/var/run/crond.pid: 取cron的pid号&lt;/li&gt;
&lt;li&gt;/proc/$(&amp;lt;/var/run/crond.pid)/environ: 取cron的环境变量设置&lt;/li&gt;
&lt;li&gt;env -i $(cat /proc/$(&amp;lt;/var/run/crond.pid)/environ|xargs -0 echo): 环境变量设置为cron环境变量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ubuntu22下cron服务的调用&#34;&gt;Ubuntu22下cron服务的调用&lt;/h3&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://blog.51cto.com/zhangxueliang/5456900&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;linux ubuntu22.04 使用cron设置定时启动任务及cron语法详解&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 启动cron服务  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# service cron start
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 停用cron服务
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# service cron stop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 查看cron服务状态
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# service cron status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 重新启动cron服务
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# service cron restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ubuntu官方镜像站列表&#34;&gt;Ubuntu官方镜像站列表&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://launchpad.net/ubuntu/&amp;#43;cdmirrors&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Official CD Mirrors for Ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看程序占用的socket端口信息&#34;&gt;查看程序占用的socket端口信息&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 以root用户身份查看netstat -ap, 可以看到占用socket端口的进程程序名+进程ID号  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@machine:~$ sudo netstat -ap | grep tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[sudo] password for user:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost:domain        0.0.0.0:*               LISTEN      597/systemd-resolve
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost:3010          0.0.0.0:*               LISTEN      57431/sshd: user@
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 0.0.0.0:http            0.0.0.0:*               LISTEN      686/nginx: master p
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 0.0.0.0:ssh           0.0.0.0:*               LISTEN      694/sshd: /usr/sbin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0     64 4.44.70.19.sta:ssh 23.22.35.87:53607   ESTABLISHED 57341/sshd: user
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 4.44.70.19.sta:ssh 23.22.35.87:53608   ESTABLISHED 57367/sshd: user
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp6       0      0 [::]:https              [::]:*                  LISTEN      652/trojan-go
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp6       0      0 [::]:ssh              [::]:*                  LISTEN      694/sshd: /usr/sbin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp6       0      0 localhost:3010          [::]:*                  LISTEN      57431/sshd: user@
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 用ps -aux可以查看进程程序名与进程ID号对应表
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@machine:~$ ps -aux | grep trojan
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root         652  0.0  1.2 4924136 12028 ?       Ssl  05:11   0:04 /tmp/trj/trojan-go -config /tmp/trj/server.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user     57701  0.0  0.2   7004  2176 pts/0    S+   11:00   0:00 grep --color=auto trojan
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@machine:~$ ps -aux | grep nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root         686  0.0  0.0  10536   812 ?        Ss   05:11   0:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root         689  0.0  0.4  11592  3972 ?        S    05:11   0:00 nginx: worker process
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user     57733  0.0  0.2   7004  2180 pts/0    S+   11:00   0:00 grep --color=auto nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 以非root用户身份查看netstat -ap, 可以看到socket端口占用情况, 但看不到相关的进程信息  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user@machine:~$ netstat -ap | grep tcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(Not all processes could be identified, non-owned process info
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; will not be shown, you would have to be root to see it all.)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost:domain        0.0.0.0:*               LISTEN      -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 localhost:3010          0.0.0.0:*               LISTEN      -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 0.0.0.0:http            0.0.0.0:*               LISTEN      -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 0.0.0.0:ssh           0.0.0.0:*               LISTEN      -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0    864 4.44.70.19.sta:ssh 23.22.35.87:53607   ESTABLISHED -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp        0      0 4.44.70.19.sta:ssh 23.22.35.87:53608   ESTABLISHED -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp6       0      0 [::]:https              [::]:*                  LISTEN      -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp6       0      0 [::]:ssh              [::]:*                  LISTEN      -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp6       0      0 localhost:3010          [::]:*                  LISTEN      -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ubuntu1804启用rclocal设置开机启动脚本&#34;&gt;Ubuntu18.04启用rc.local设置开机启动脚本&lt;/h3&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/u013554213/article/details/102947060&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ubuntu-18.04 启用 rc.local 设置开机启动脚本&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修改/lib/systemd/system/rc-local.service, 添加rc-local.service&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /lib/systemd/system/rc-local.service&lt;br&gt;
# 在最后加入以下内容&lt;br&gt;
[Install]&lt;br&gt;
WantedBy=multi-user.target&lt;br&gt;
Alias=rc-local.server&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 /lib/systemd/system/rc-local.service 链接到 /etc/systemd/system/ 目录下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# sudo systemctl enable rc-local.service&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建/etc/rc.local文件，赋可执行权限&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#touch /etc/rc.local&lt;br&gt;
# chmod 0755 /etc/rc.local&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编辑rc.local，添加需要开机启动的任务&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/rc.local&lt;br&gt;
#!/bin/bash&lt;br&gt;
# 测试代码&lt;br&gt;
echo &amp;ldquo;test rc&amp;rdquo; &amp;gt; /tmp/test.log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;完成。&lt;/p&gt;
&lt;h3 id=&#34;ubuntu下的systemd定时器&#34;&gt;Ubuntu下的Systemd定时器&lt;/h3&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.ruanyifeng.com/blog/2018/03/systemd-timer.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Systemd 定时器教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.miniasp.com/post/2021/05/09/Create-SSL-TLS-certificates-from-LetsEncrypt-using-Certbot-2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何使用 Certbot 建立免費的 TLS/SSL 網域憑證並自動產生 PFX 憑證&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;系统:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Armbian Linux 5.3.0-aml-g12(Ubuntu 18.04.3 LTS)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单查看地systemd定时器状态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux的Systemd也可以设置定时器, 可以使用&amp;quot;systemctl list-timers --all&amp;quot;查看所有Timer单元
&lt;blockquote&gt;
&lt;p&gt;# systemctl list-timers --all&lt;br&gt;
NEXT                         LEFT          LAST                         PASSED       UNIT                         ACTIVATES&lt;br&gt;
Fri 2022-12-02 01:01:58 CST  47min left    Thu 2022-12-01 14:00:14 CST  10h ago      motd-news.timer              motd-news.service&lt;br&gt;
Fri 2022-12-02 03:26:22 CST  3h 11min left n/a                          n/a          certbot.timer                certbot.service&lt;br&gt;
Fri 2022-12-02 06:13:50 CST  5h 59min left Thu 2022-12-01 06:37:14 CST  17h ago      apt-daily-upgrade.timer      apt-daily-upgrade.service&lt;br&gt;
Fri 2022-12-02 12:15:20 CST  12h left      Thu 2022-12-01 19:18:14 CST  4h 56min ago apt-daily.timer              apt-daily.service&lt;br&gt;
Fri 2022-12-02 15:54:14 CST  15h left      Thu 2022-12-01 15:54:14 CST  8h ago       systemd-tmpfiles-clean.timer systemd-tmpfiles-clean.service&lt;br&gt;
Mon 2022-12-05 00:00:00 CST  2 days left   Mon 2022-11-28 00:00:14 CST  4 days ago   fstrim.timer                 fstrim.service&lt;/p&gt;
&lt;p&gt;6 timers listed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于Systemd任务类型、任务文件目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于Systemd要做的事情太多，导致单元有很多不同的种类，大概一共有12种。举例来说，Service 单元负责后台服务，Timer 单元负责定时器，Slice 单元负责资源的分配。&lt;br&gt;
每个单元都有一个单元描述文件，它们分散在三个目录。
&lt;ul&gt;
&lt;li&gt;/lib/systemd/system：系统默认的单元文件&lt;/li&gt;
&lt;li&gt;/etc/systemd/system：用户安装的软件的单元文件&lt;/li&gt;
&lt;li&gt;/usr/lib/systemd/system：用户自己定义的单元文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Systemd定时器相关文件包括&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Service单元(文件, 文件名后缀.service, 比如certbot.service)&lt;/li&gt;
&lt;li&gt;Timer单元(文件, 文件名后缀.timer, 比如certbot.timer)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Service单元就是所要执行的任务&lt;br&gt;
文件内容格式如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# cat certbot.service&lt;br&gt;
[Unit]&lt;br&gt;
Description=Certbot&lt;br&gt;
Documentation=file:///usr/share/doc/python-certbot-doc/html/index.html&lt;br&gt;
Documentation=https://letsencrypt.readthedocs.io/en/latest/&lt;br&gt;
[Service]&lt;br&gt;
Type=oneshot&lt;br&gt;
ExecStart=/usr/bin/certbot -q renew&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Service单元定义了如何执行任务&lt;br&gt;
要定时执行这个Service，还必须定义Timer单元&lt;br&gt;
文件内容格式如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# cat certbot.timer&lt;br&gt;
[Unit]&lt;br&gt;
Description=Run certbot twice daily&lt;/p&gt;
&lt;p&gt;[Timer]&lt;br&gt;
OnCalendar=&lt;em&gt;-&lt;/em&gt;-* 00,12:00:00&lt;br&gt;
RandomizedDelaySec=43200&lt;br&gt;
Persistent=true&lt;/p&gt;
&lt;p&gt;[Install]&lt;br&gt;
WantedBy=timers.target&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中, [Timer]部分定制定时器。Systemd 提供以下一些字段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OnActiveSec：定时器生效后，多少时间开始执行任务&lt;/li&gt;
&lt;li&gt;OnBootSec：系统启动后，多少时间开始执行任务&lt;/li&gt;
&lt;li&gt;OnStartupSec：Systemd 进程启动后，多少时间开始执行任务&lt;/li&gt;
&lt;li&gt;OnUnitActiveSec：该单元上次执行后，等多少时间再次执行&lt;/li&gt;
&lt;li&gt;OnUnitInactiveSec： 定时器上次关闭后多少时间，再次执行&lt;/li&gt;
&lt;li&gt;OnCalendar：基于绝对时间，而不是相对时间执行&lt;/li&gt;
&lt;li&gt;AccuracySec：如果因为各种原因，任务必须推迟执行，推迟的最大秒数，默认是60秒&lt;/li&gt;
&lt;li&gt;Unit：真正要执行的任务，默认是同名的带有.service后缀的单元&lt;/li&gt;
&lt;li&gt;Persistent：如果设置了该字段，即使定时器到时没有启动，也会自动执行相应的单元&lt;/li&gt;
&lt;li&gt;WakeSystem：如果系统休眠，是否自动唤醒系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面的命令可以查看所有的单元文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 查看所有单元&lt;br&gt;
$ systemctl list-unit-files&lt;/p&gt;
&lt;p&gt;# 查看所有 Service 单元&lt;br&gt;
$ systemctl list-unit-files --type service&lt;/p&gt;
&lt;p&gt;# 查看所有 Timer 单元&lt;br&gt;
$ systemctl list-unit-files --type timer&lt;br&gt;
# 或&lt;br&gt;
$ systemctl list-timers --all&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下是定时器的相关命令:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 启动mytimer.timer定时器&lt;br&gt;
$ sudo systemctl start mytimer.timer&lt;/p&gt;
&lt;p&gt;# 查看mytimer.timer定时器的状态&lt;br&gt;
$ systemctl status mytimer.timer&lt;/p&gt;
&lt;p&gt;# 查看所有正在运行的定时器&lt;br&gt;
$ systemctl list-timers&lt;/p&gt;
&lt;p&gt;# 关闭mytimer.timer定时器&lt;br&gt;
$ sudo systemctl stop myscript.timer&lt;/p&gt;
&lt;p&gt;# 下次开机，自动运行这个定时器&lt;br&gt;
$ sudo systemctl enable myscript.timer&lt;/p&gt;
&lt;p&gt;# 关闭定时器的开机自启动&lt;br&gt;
$ sudo systemctl disable myscript.timer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;另外, Systemd的日志功能很强，提供统一的命令, 如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 查看整个日志&lt;br&gt;
$ sudo journalctl&lt;/p&gt;
&lt;p&gt;# 查看 mytimer.timer 的日志&lt;br&gt;
$ sudo journalctl -u mytimer.timer&lt;/p&gt;
&lt;p&gt;# 查看 mytimer.timer 和 mytimer.service 的日志&lt;br&gt;
$ sudo journalctl -u mytimer&lt;/p&gt;
&lt;p&gt;# 从结尾开始查看最新日志&lt;br&gt;
$ sudo journalctl -f&lt;/p&gt;
&lt;p&gt;# 从结尾开始查看 mytimer.timer 的日志&lt;br&gt;
$ journalctl -f -u timer.timer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;使用浏览器访问linux终端&#34;&gt;使用浏览器访问Linux终端&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Web-based_SSH&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Web-based SSH&lt;/a&gt;&lt;br&gt;
介绍基于web的ssh服务器概况&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用时, 多通过&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;A web server that can also be used as a reverse proxy, load balancer, mail proxy and HTTP cache&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;做反代&lt;br&gt;
修改Nginx配置文件/etc/nginx/sites-enabled/default,&lt;br&gt;
用例如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# vim /etc/nginx/sites-enabled/default  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server {  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;......  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    location /abcdefghijk {  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        proxy_pass http://127.0.0.1:4200;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;服务器列表&lt;font color=lightgrey&gt;(看过的)&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shellinabox&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
Shell In A Box实现了一个Web服务器，可以将任意命令行工具导出到基于Web的终端仿真器。任何支持JavaScript和CSS的Web浏览器都可以访问该模拟器，并且不需要任何额外的浏览器插件。
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/wikis/shellinaboxd_man.wiki&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox - shellinaboxd_man.wiki&lt;/a&gt; shellinabox官方wiki&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/shellinabox/shellinabox&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github shellinabox&lt;/a&gt; Shell In A Box官方项目的一个分支。创建分支是因为原始项目不是由授权作者维护的。&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/shellinabox/shellinabox/wiki/shellinaboxd_man&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;man shellinaboxd&lt;/a&gt; shellinabox的man手册&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://ports.ubuntu.com/pool/universe/s/shellinabox/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ports shellinabox&lt;/a&gt; shellinabox的嵌入式系统版本安装包下载列表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/tsl0922/ttyd&#34;  title=&#34;ttyd is a simple command-line tool for sharing terminal over the web.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ttyd&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt; 一个简单的命令行工具，用于通过网络共享终端&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;A Linux operating system targeting embedded devices&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenWrt&lt;/a&gt;可用&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://pypi.org/project/webssh/&#34;  title=&#34;A simple web application to be used as an ssh client to connect to your ssh servers. It is written in Python, base on tornado, paramiko and xterm.js.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PyPI webssh&lt;/a&gt;&lt;br&gt;
用Python写的webssh工具&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Jrohy/webssh&#34;  title=&#34;简易在线ssh和sftp工具, 可在线敲命令和上传下载文件, Opensource&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jrohy webssh&lt;/a&gt;&lt;br&gt;
简易在线ssh和sftp工具, 可在线敲命令和上传下载文件; 也提供Docker版本&lt;br&gt;
Jrohy的开源webssh&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shellinabox&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=jqBYUG_0CBM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Youtube video: How To Install Shellinabox On Ubuntu 18.04&lt;/a&gt;&lt;/strong&gt; 确认可用&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://help.ubuntu.com/community/shellinabox&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt; shellinabox安装、配置、使用说明, 简单且清晰&lt;br&gt;
来源: &lt;a class=&#34;link&#34; href=&#34;https://help.ubuntu.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ubuntu官方文档&lt;/a&gt; Community Help Wiki&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/code1992/p/10287418.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Web终端之使用shellinabox在浏览器进行ssh登录&lt;/a&gt;&lt;br&gt;
在Ubuntu 18.0.3/4上, 使用apt install shellinabox安装, shellinabox版本为2.20build1, 启动运行没问题, 但无法使用浏览器访问, 浏览器显示:&lt;br&gt;
&amp;ldquo;未发送任何数据。&lt;br&gt;
ERR_EMPTY_RESPONSE&amp;rdquo;&lt;br&gt;
&lt;u&gt;与缺省使用&amp;quot;https&amp;quot;协议有关, 改为使用&amp;quot;http&amp;quot;协议后问题解决&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/tsl0922/ttyd&#34;  title=&#34;ttyd is a simple command-line tool for sharing terminal over the web.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ttyd&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/chanjiaozhan5779/article/details/100969253&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;更优于Shellinabox的web shell工具 -- ttyd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://pypi.org/project/webssh/&#34;  title=&#34;A simple web application to be used as an ssh client to connect to your ssh servers. It is written in Python, base on tornado, paramiko and xterm.js.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PyPI webssh&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://tweenpath.net/install-webssh-debian/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Install webssh on Debian&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt; &lt;font color=lightgrey&gt;Tried&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.linuxshelltips.com/webssh-connect-linux-terminal-browser/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WebSSH – Connect Linux Terminal from Your Web Browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.ttlsa.com/linux/wssh-use-web-access-linux/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用浏览器访问Linux服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.51cto.com/article/398928.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用浏览器访问Linux终端的方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;系统:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Armbian Linux 5.3.0-aml-g12(Ubuntu 18.04.3 LTS)&lt;/li&gt;
&lt;li&gt;Ubuntu 18.04.2LTS&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;安装shellinabox-可用&#34;&gt;安装Shellinabox &lt;strong&gt;可用&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;注:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Ubuntu 18.04.x(PC)上, 已确认
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://archive.ubuntu.com/ubuntu/pool/universe/s/shellinabox/shellinabox_2.21_amd64.deb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox_2.21_amd64.deb&lt;/a&gt;版本, &lt;strong&gt;可用&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://archive.ubuntu.com/ubuntu/pool/universe/s/shellinabox/shellinabox_2.21build1_amd64.deb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox_2.21build1_amd64.deb&lt;/a&gt;版本, &lt;em&gt;&lt;strong&gt;改为http协议后可用&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;ShellInABox version 2.10 (revision 239) apt安装包, &lt;em&gt;&lt;strong&gt;改为http协议后可用&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在Armbian Linux 5.3.0-aml-g12(Ubuntu 18.04.3 LTS)上, 已确认
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://ports.ubuntu.com/pool/universe/s/shellinabox/shellinabox_2.21_arm64.deb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox_2.21_arm64.deb&lt;/a&gt;版本 &lt;em&gt;&lt;strong&gt;可用(需改设置)&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;shellinabox arm64 2.20build1 apt安装包, &lt;em&gt;&lt;strong&gt;改为http协议后可用&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;所测原生apt安装包都可使用, 只需将协议由&amp;quot;https&amp;quot;改为&amp;quot;http&amp;rdquo;:&lt;/strong&gt;&lt;br&gt;
修改/etc/default/shellinabox, 参数&amp;quot;SHELLINABOX_ARGS&amp;quot;改为(增加&amp;quot;-t&amp;quot;参数):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SHELLINABOX_ARGS=&amp;quot;--no-beep -t&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即协议由原&amp;quot;https&amp;quot;, 改为&amp;quot;http&amp;quot;后, 确认可以正常访问并使用。&lt;br&gt;
&lt;u&gt;考虑到&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;都会由&lt;a class=&#34;link&#34; href=&#34;https://nginx.org/&#34;  title=&#34;A web server that can also be used as a reverse proxy, load balancer, mail proxy and HTTP cache&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nginx&lt;/a&gt;反向代理, 所以使用http协议没有问题。&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;按照&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=jqBYUG_0CBM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Youtube video: How To Install Shellinabox On Ubuntu 18.04&lt;/a&gt;进行操作:&lt;br&gt;
下载shellinabox_2.14-1_amd64.deb安装包&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# wget &lt;a class=&#34;link&#34; href=&#34;http://archive.ubuntu.com/ubuntu/pool/universe/s/shellinabox/shellinabox_2.14-1_amd64.deb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://archive.ubuntu.com/ubuntu/pool/universe/s/shellinabox/shellinabox_2.14-1_amd64.deb&lt;/a&gt;&lt;br&gt;
&amp;ndash;2021-11-02 03:34:17&amp;ndash;  &lt;a class=&#34;link&#34; href=&#34;http://archive.ubuntu.com/ubuntu/pool/universe/s/shellinabox/shellinabox_2.14-1_amd64.deb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://archive.ubuntu.com/ubuntu/pool/universe/s/shellinabox/shellinabox_2.14-1_amd64.deb&lt;/a&gt;&lt;br&gt;
Resolving archive.ubuntu.com (archive.ubuntu.com)&amp;hellip; 91.189.91.38, 91.189.91.39, 185.125.190.36, &amp;hellip;&lt;br&gt;
Connecting to archive.ubuntu.com (archive.ubuntu.com)|91.189.91.38|:80&amp;hellip; connected.&lt;br&gt;
HTTP request sent, awaiting response&amp;hellip; 200 OK&lt;br&gt;
Length: 129124 (126K) [application/x-debian-package]&lt;br&gt;
Saving to: ‘shellinabox_2.14-1_amd64.deb’&lt;/p&gt;
&lt;p&gt;shellinabox_2.14-1_amd6 100%[===============================&amp;gt;] 126.10K   167KB/s    in 0.8s&lt;/p&gt;
&lt;p&gt;2021-11-02 03:34:21 (167 KB/s) - ‘shellinabox_2.14-1_amd64.deb’ saved [129124/129124]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用dpkg进行安装&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# dpkg -i shellinabox_2.14-1_amd64.deb&lt;br&gt;
Selecting previously unselected package shellinabox.&lt;br&gt;
(Reading database &amp;hellip; 69727 files and directories currently installed.)&lt;br&gt;
Preparing to unpack shellinabox_2.14-1_amd64.deb &amp;hellip;&lt;br&gt;
Unpacking shellinabox (2.14-1) &amp;hellip;&lt;br&gt;
Setting up shellinabox (2.14-1) &amp;hellip;&lt;br&gt;
Installing new version of config file /etc/shellinabox/options-available/01+Color Terminal.css &amp;hellip;&lt;br&gt;
Installing new version of config file /etc/shellinabox/options-available/00+Black on White.css &amp;hellip;&lt;br&gt;
Installing new version of config file /etc/shellinabox/options-available/00_White On Black.css &amp;hellip;&lt;br&gt;
Installing new version of config file /etc/shellinabox/options-available/01_Monochrome.css &amp;hellip;&lt;br&gt;
Installing new version of config file /etc/init.d/shellinabox &amp;hellip;&lt;br&gt;
Processing triggers for systemd (237-3ubuntu10.56) &amp;hellip;&lt;br&gt;
Processing triggers for ureadahead (0.100.0-20) &amp;hellip;&lt;br&gt;
Processing triggers for man-db (2.8.3-2ubuntu0.1) &amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;重启&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service shellinabox restart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;状态&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service shellinabox status&lt;br&gt;
● shellinabox.service - LSB: Shell In A Box Daemon&lt;br&gt;
Loaded: loaded (/etc/init.d/shellinabox; generated)&lt;br&gt;
Active: active (running) since Fri 2021-11-02 03:35:02 UTC; 3s ago&lt;br&gt;
Docs: man:systemd-sysv-generator(8)&lt;br&gt;
Process: 7563 ExecStop=/etc/init.d/shellinabox stop (code=exited, status=0/SUCCESS)&lt;br&gt;
Process: 7628 ExecStart=/etc/init.d/shellinabox start (code=exited, status=0/SUCCESS)&lt;br&gt;
Tasks: 2 (limit: 1028)&lt;br&gt;
CGroup: /system.slice/shellinabox.service&lt;br&gt;
├─7663 /usr/bin/shellinaboxd -q --background=/var/run/shellinaboxd.pid -c /var/lib/sh&lt;br&gt;
└─7664 /usr/bin/shellinaboxd -q --background=/var/run/shellinaboxd.pid -c /var/lib/sh&lt;/p&gt;
&lt;p&gt;Dec 02 03:35:01 testdev systemd[1]: Starting LSB: Shell In A Box Daemon&amp;hellip;&lt;br&gt;
Dec 02 03:35:02 testdev systemd[1]: Started LSB: Shell In A Box Daemon.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看监听端口&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# netstat -ap | grep shell&lt;br&gt;
tcp        0      0 0.0.0.0:4200            0.0.0.0:*               LISTEN      7663/shellinaboxd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看网络配置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ip r&lt;br&gt;
default via 192.168.1.1 dev eth0 proto dhcp src 192.168.1.72 metric 100&lt;br&gt;
192.168.1.0/24 dev eth0 proto kernel scope link src 192.168.1.72&lt;br&gt;
192.168.1.1 dev eth0 proto dhcp scope link src 192.168.1.72 metric 100&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用浏览器打开&amp;quot;https://192.168.1.72:4200&amp;quot;, 即可访问&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;的shell&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/18-qa-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;修改&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;的配置&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://linoxide.com/web-remote-your-server/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shell in a Box - Remote to your Linux Server via Web Browser&lt;/a&gt;&lt;br&gt;
Ubuntu上&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;的配置文件是: /etc/default/shellinaboxd, 在该文件中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SHELLINABOX_PORT 监听端口&lt;/li&gt;
&lt;li&gt;SHELLINABOX_ARGS 运行参数&lt;br&gt;
运行参数改为&amp;quot;--no-beep -t&amp;quot;, 即改为使用http协议, 即改为访问&amp;quot;http://地址:端口&amp;quot;(缺省安装为用https协议)&lt;br&gt;
运行参数改为&amp;quot;--no-beep -t --localhost-only&amp;quot;, 即改为使用http协议监听127.0.0.1, 即改为访问&amp;quot;http://localhost:端口&amp;quot;(缺省安装为用https协议, 监听0.0.0.0)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在Ubuntu 18.04.2LTS上, 使用apt安装shellinabox, shellinabox可以正常运行, &lt;strong&gt;但无法使用浏览器访问shellinabox&lt;/strong&gt;(见后面注)&lt;br&gt;
下载的shellinabox版本为2.20build1&lt;br&gt;
注: 后面的测试发现, 将协议由https改为http后, 也可以使用 - 修改/etc/default/shellinabox, &amp;ldquo;SHELLINABOX_ARGS&amp;quot;增加&amp;rdquo;-t&amp;quot;参数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# apt install shellinabox&lt;br&gt;
Reading package lists&amp;hellip; Done&lt;br&gt;
Building dependency tree&lt;br&gt;
Reading state information&amp;hellip; Done&lt;br&gt;
The following NEW packages will be installed:&lt;br&gt;
shellinabox&lt;br&gt;
0 upgraded, 1 newly installed, 0 to remove and 111 not upgraded.&lt;br&gt;
Need to get 126 kB of archives.&lt;br&gt;
After this operation, 517 kB of additional disk space will be used.&lt;br&gt;
Get:1 &lt;a class=&#34;link&#34; href=&#34;https://mirrors.cloud.tencent.com/ubuntu&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mirrors.cloud.tencent.com/ubuntu&lt;/a&gt; bionic/universe amd64 shellinabox amd64 2.20build1 [126 kB]&lt;br&gt;
Fetched 126 kB in 1s (169 kB/s)&lt;br&gt;
Selecting previously unselected package shellinabox.&lt;br&gt;
(Reading database &amp;hellip; 69716 files and directories currently installed.)&lt;br&gt;
Preparing to unpack &amp;hellip;/shellinabox_2.20build1_amd64.deb &amp;hellip;&lt;br&gt;
Unpacking shellinabox (2.20build1) &amp;hellip;&lt;br&gt;
Setting up shellinabox (2.20build1) &amp;hellip;&lt;br&gt;
Processing triggers for man-db (2.8.3-2ubuntu0.1) &amp;hellip;&lt;br&gt;
Processing triggers for ureadahead (0.100.0-20) &amp;hellip;&lt;br&gt;
Processing triggers for systemd (237-3ubuntu10.56) &amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;之后用apt remove后, 改为前述方法用dpkg重新安装shellinabox后即可正常使用&lt;br&gt;
不清楚问题的原因&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;安装wssh-失败&#34;&gt;安装wssh &lt;em&gt;&lt;strong&gt;失败&lt;/strong&gt;&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://tweenpath.net/install-webssh-debian/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Install webssh on Debian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.linuxshelltips.com/webssh-connect-linux-terminal-browser/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WebSSH – Connect Linux Terminal from Your Web Browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装python3-pip工具&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# apt install python3-pip&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用pip3安装webssh&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# pip3 install webssh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;报错:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ModuleNotFoundError: No module named &amp;lsquo;setuptools&amp;rsquo;&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/14426491/python-3-importerror-no-module-named-setuptools&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Python 3: ImportError &amp;ldquo;No Module named Setuptools&amp;rdquo;&lt;/a&gt;&lt;br&gt;
安装python3-setuptools&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# apt install python3-setuptools&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Complete output from command python setup.py egg_info:&lt;br&gt;
c/_cffi_backend.c:2:10: fatal error: Python.h: No such file or directory&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/21530577/fatal-error-python-h-no-such-file-or-directory&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;fatal error: Python.h: No such file or directory&lt;/a&gt;&lt;br&gt;
安装python3-dev&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# apt install python3-dev&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ModuleNotFoundError: No module named &amp;lsquo;setuptools_rust&amp;rsquo;&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://github.com/MISP/misp-docker/issues/113&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ModuleNotFoundError: No module named &amp;lsquo;setuptools_rust&amp;rsquo; #113&lt;/a&gt;&lt;br&gt;
安装setuptools-rust&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# pip3 install setuptools-rust&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ERROR: Failed to build one or more wheels&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/53204916/what-is-the-meaning-of-failed-building-wheel-for-x-in-pip-install&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What is the meaning of &amp;ldquo;Failed building wheel for X&amp;rdquo; in pip install?&lt;/a&gt;&lt;br&gt;
安装wheel&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# pip3 install wheel&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装wheel后, 还是报同样的错误&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;放弃&lt;a class=&#34;link&#34; href=&#34;https://pypi.org/project/webssh/&#34;  title=&#34;A simple web application to be used as an ssh client to connect to your ssh servers. It is written in Python, base on tornado, paramiko and xterm.js.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PyPI webssh&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;linux安装包的来源列表&#34;&gt;Linux安装包的来源列表&lt;/h3&gt;
&lt;p&gt;以&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;为例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;软件包官网&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox官网&lt;/a&gt;下的&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/downloads&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Downloads&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;软件包开源站&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/shellinabox/shellinabox&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github shellinabox&lt;/a&gt;下的&lt;a class=&#34;link&#34; href=&#34;https://github.com/shellinabox/shellinabox/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Releases&lt;/a&gt;&lt;br&gt;
但是,  &lt;a class=&#34;link&#34; href=&#34;https://github.com/shellinabox/shellinabox&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github shellinabox&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://github.com/shellinabox/shellinabox/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Releases&lt;/a&gt;里没有安装包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作系统的源&lt;br&gt;
如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ubuntu可以查看/etc/apt/sources.list文件&lt;br&gt;
看到源网站信息为: &lt;a class=&#34;link&#34; href=&#34;https://mirrors.cloud.tencent.com/ubuntu&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mirrors.cloud.tencent.com/ubuntu&lt;/a&gt;&lt;br&gt;
并跟踪到&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;目录: &lt;a class=&#34;link&#34; href=&#34;https://mirrors.cloud.tencent.com/ubuntu/pool/universe/s/shellinabox/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mirrors.cloud.tencent.com/ubuntu/pool/universe/s/shellinabox/&lt;/a&gt;&lt;br&gt;
这里有很多&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;相关文件&lt;/li&gt;
&lt;li&gt;Armbian同样可查看/etc/apt/sources.list文件&lt;br&gt;
&lt;u&gt;Armbian和ubuntu是同类系统&lt;/u&gt;&lt;br&gt;
看到源网站信息为: &lt;a class=&#34;link&#34; href=&#34;http://ports.ubuntu.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://ports.ubuntu.com/&lt;/a&gt;&lt;br&gt;
并跟踪到&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;目录: &lt;a class=&#34;link&#34; href=&#34;http://ports.ubuntu.com/pool/universe/s/shellinabox/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://ports.ubuntu.com/pool/universe/s/shellinabox/&lt;/a&gt;&lt;br&gt;
这里同样有很多&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/shellinabox/&#34;  title=&#34;Implements a web server that can export arbitrary command line tools to a web based terminal emulator.&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shellinabox&lt;/a&gt;相关文件, 由于armbian是为嵌入式硬件编写, 因此目录下有标识为arm/ppc/risc等的包&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用搜索引擎进行查找&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;macbook相关问题&#34;&gt;Macbook相关问题&lt;/h2&gt;
&lt;h3 id=&#34;macbook在windows系统-如何使用windows自带的截屏功能&#34;&gt;Macbook在Windows系统, 如何使用windows自带的截屏功能&lt;/h3&gt;
&lt;p&gt;问题来源: Macbook键盘上没有Print Screen按键&lt;br&gt;
处理:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全屏截图：fn+shift+F11&lt;/li&gt;
&lt;li&gt;窗口截图：fn+option+shift+F11&lt;/li&gt;
&lt;li&gt;如果使用长Mac键盘的，可以使用F14作为截图&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;vmware相关问题&#34;&gt;Vmware相关问题&lt;/h2&gt;
&lt;h3 id=&#34;vmware-workstation上安装ubuntu1804lts报错的问题&#34;&gt;Vmware workstation上安装Ubuntu18.04LTS报错的问题&lt;/h3&gt;
&lt;p&gt;环境:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统&lt;br&gt;
Windows 10 + Vmware workstation 17&lt;br&gt;
虚拟机用Ubuntu server 18.04LTS&lt;/li&gt;
&lt;li&gt;错误信息&lt;br&gt;
&lt;u&gt;VMware Workstation 不可恢复错误: (mks) ISBRendererComm: Lost connection to mksSandbox (2784)&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_41273101/article/details/122283882&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vmware安装win10报错&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;处理方式: 在虚拟机关机后, 进入该&lt;u&gt;&amp;ldquo;虚拟机设置&amp;rdquo;-&amp;ldquo;硬件&amp;rdquo;-&amp;ldquo;显示器&amp;rdquo;-&amp;ldquo;3D图形&amp;rdquo;, 取消勾选&amp;quot;3D加速图形(3)&amp;quot;&lt;/u&gt;&lt;br&gt;
虽然与&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_41273101/article/details/122283882&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vmware安装win10报错&lt;/a&gt;中的错误数字号不同(2784/2878), 但处理方式相同&lt;/p&gt;
&lt;h3 id=&#34;vmware-workstation-17设置自动启动报错-font-colorredbfailedbfont&#34;&gt;Vmware workstation 17设置自动启动报错 &lt;font color=red&gt;&lt;B&gt;Failed&lt;/B&gt;&lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;报错信息如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法更新&amp;quot;自动启动&amp;quot;配置。&lt;br&gt;
请确保存在vmAutoStart.xml文件, 并且您有权写入此文件。&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/18-qa-02.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.vmware.com/cn/VMware-Workstation-Pro/17/com.vmware.ws.using.doc/GUID-44497201-A4AC-4867-BEE7-1BDC7641E66C.html?hWord=N4IghgNiBcKFeBgKpUPQqDBaYYfaNBc5iAvkA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;为 Windows 主机上的本地虚拟机启用自动启动&lt;/a&gt; 来自Vmware官方文库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要确认以下几点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;该虚拟机配置文件(.vmx, 在该虚拟机文件目录下)的所有者(或称属主) 为 用户A&lt;/li&gt;
&lt;li&gt;在指定目录(当前环境下为C:\ProgramData\VMware\VMware Workstation目录)下存在vmAutoStart.xml文件, 且用户A有写权限&lt;/li&gt;
&lt;li&gt;已安装VMware自动启动服务&lt;/li&gt;
&lt;li&gt;在VMware自动启动服务中, 设置以用户A的身份执行操作&lt;/li&gt;
&lt;li&gt;启动VMware自动启动服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;操作:&lt;br&gt;
虚拟机名为testas&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虚拟机配置文件testas.vmx所有者(或称属主) 为 userA&lt;/li&gt;
&lt;li&gt;修改&amp;quot;C:\ProgramData\VMware\VMware Workstation\vmAutoStart.xml&amp;quot;文件属性, 在&amp;quot;安全&amp;quot;里, 点击编辑, 并为userA添加写入权限&lt;/li&gt;
&lt;li&gt;运行&amp;quot;services.msc&amp;quot;, 并确认到已安装了VMware自动启动服务&lt;/li&gt;
&lt;li&gt;VMware自动启动服务的&amp;quot;属性&amp;quot;-&amp;ldquo;登录&amp;quot;中, 设置以userA身份登录&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/18-qa-03.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;设置完成后启动VMware自动启动服务&lt;/li&gt;
&lt;li&gt;即可回到Vmware workstation中去设置虚拟机随系统自动启动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结果:&lt;br&gt;
设置虚拟机随系统自动启动操作成功完成, 但是, &lt;u&gt;经过测试, 并未能实现vmware虚拟机跟随windows系统启动&lt;/u&gt;&lt;br&gt;
&lt;font color=red&gt;&lt;B&gt;失败&lt;/B&gt;&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;vmware上使用网络桥接方式的ubuntu虚拟机无法连接网络的问题&#34;&gt;vmware上使用网络桥接方式的ubuntu虚拟机无法连接网络的问题&lt;/h3&gt;
&lt;p&gt;环境:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬件: Mackbook pro笔记本电脑, 使用wifi连接网络&lt;/li&gt;
&lt;li&gt;Vmware workstation pro 17
Ubuntu 18.04LTS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现象:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;该ubuntu虚拟机启动时, 有时能连上网络, 有时连不上, 此时, 宿主机的无线网络连接都是ok的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/xiaolang666/p/15194451.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VMware 桥接模式配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原因分析:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于可桥接的设备过多, 让vmware出现选择困难&lt;br&gt;
需要手动选定桥接的网卡: 由于Macbook只有一块网卡, 所以是个固定选项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;操作:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在vmware workstation中, 选择我的计算机, 在菜单中&amp;quot;编辑&amp;rdquo;-&amp;ldquo;虚拟网络编辑器&amp;rdquo;, 出现对话框后, 点击右下角&amp;quot;更改设置&amp;quot;&lt;/li&gt;
&lt;li&gt;将桥接模式中的设备行为无线网卡实体&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;见图&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/18-qa-04.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/18-qa-05.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;hugo服务器相关问题&#34;&gt;Hugo服务器相关问题&lt;/h2&gt;
&lt;h3 id=&#34;hugo服务器不支持html标签的问题&#34;&gt;Hugo服务器不支持html标签的问题&lt;/h3&gt;
&lt;p&gt;现象:&lt;br&gt;
在Hugo+theme-stack上, 发现html标签并未生效。
例如:
下划线标记未生效&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;u&amp;gt;下划线&amp;lt;/u&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;显示为(如果正常显示, 说明已正确设置):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;u&gt;下划线&lt;/u&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看网页源代码显示为:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;blockquote&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;p&amp;gt;&amp;lt;!-- raw HTML omitted --&amp;gt;下划线&amp;lt;!-- raw HTML omitted --&amp;gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/blockquote&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;解决方式:&lt;br&gt;
修改config.yaml, 修改相关部分内容如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;markup:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    goldmark:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        renderer:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            ## Set to true if you have HTML content inside Markdown
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            unsafe: true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;config.yaml这部分说明中, &amp;lsquo;## Set to true if you have HTML content inside Markdown&amp;rsquo;, 已经说明需要设置unsafe为true, 以使html标签生效&lt;br&gt;
参考:&lt;br&gt;
● &lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/63198652/hugo-shortcode-ignored-saying-raw-html-omitted&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo shortcode ignored saying &amp;ldquo;raw HTML omitted&amp;rdquo;&lt;/a&gt; ☜ ✌&lt;br&gt;
● &lt;a class=&#34;link&#34; href=&#34;https://lizicai.com/p/Hugo%e7%9a%84shortcode%28%e6%94%af%e6%8c%81%e8%a7%86%e9%a2%91%e7%ad%89%29%e5%92%8c%e4%b8%bb%e9%a2%98%e4%bf%ae%e6%94%b9Li.027/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo的shortcode(支持视频等)和主题修改Li.027&lt;/a&gt;&lt;br&gt;
● &lt;a class=&#34;link&#34; href=&#34;https://yuanyi-au.github.io/posts/hugo/#%e6%a8%a1%e6%9d%bf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo 详细笔记（建站教程、工作原理）-模板&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;服务器引用其他网站图片logo-icon时报40310014错误的问题&#34;&gt;服务器引用其他网站图片(Logo Icon)时报&amp;quot;40310014&amp;quot;错误的问题&lt;/h3&gt;
&lt;p&gt;示例: &lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/links/&#34; &gt;链接&lt;/a&gt;中部分网站链接没有显示对应的Logo&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/46c127a699f7&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;爬虫反扒机制处理——Referer等错误码处理&lt;/a&gt;&lt;br&gt;
结论: 该网站开启了防盗链机制&lt;br&gt;
处理: 不引用这类网站图片&lt;/p&gt;
&lt;p&gt;关于反防盗链的参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.shymean.com/article/%E5%A6%82%E4%BD%95%E7%BB%95%E5%BC%80referrer%E9%98%B2%E7%9B%97%E9%93%BE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何绕开referrer防盗链&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.zhangjava.com/%E7%A0%B4%E8%A7%A3%E9%98%B2%E7%9B%97%E9%93%BE/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;破解防盗链&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hugo服务器支持甘特图&#34;&gt;Hugo服务器支持甘特图&lt;/h3&gt;
&lt;p&gt;Markdown支持甘特图相关参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.runoob.com/markdown/md-advance.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Markdown 高级技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://baike.baidu.com/item/%E7%94%98%E7%89%B9%E5%9B%BE/113232&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;百度: 甘特图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mermaid相关参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mermaid-js/mermaid&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid&lt;/a&gt;  Generation of diagrams like flowcharts or sequence diagrams from text in a similar manner as markdown&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mermaid-js/mermaid/blob/develop/README.zh-CN.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid 简中&lt;/a&gt; Mermaid 是一个基于 Javascript 的图表绘制工具，通过解析类 Markdown 的文本语法来实现图表的创建和动态修改。Mermaid 诞生的主要目的是让文档的更新能够及时跟上开发进度。
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mermaid-js/mermaid/blob/develop/docs/community/n00b-overview.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mermaid-js/mermaid/blob/develop/docs/config/usage.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mermaid-js/mermaid/blob/develop/docs/config/Tutorials.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid Tutorials&lt;/a&gt; 包括教程, 以及代码示例&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mermaid-js/mermaid/blob/develop/docs/misc/integrations.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid integrations&lt;/a&gt; 集成
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://marketplace.visualstudio.com/items?itemName=bierner.markdown-mermaid&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Markdown Preview Mermaid Support&lt;/a&gt; VS插件&lt;br&gt;
用于Adds Mermaid diagram and flowchart support to VS Code&amp;rsquo;s builtin markdown preview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://unpkg.com/browse/mermaid@9.2.2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid CDN&lt;/a&gt; MermaidJS CDN, 可用, 版本全&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid教程&lt;/a&gt; 教程
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/integrations&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid Intergrations&lt;/a&gt; Mermaid集成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hellowac.github.io/2021/12/21/mermaid%E6%96%87%E6%A1%A3%E4%B8%AD%E6%96%87%E7%89%88-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mermaid文档中文版-快速开始&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://mermaid-js.github.io/mermaid-live-editor&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mermaid-live-editor&lt;/a&gt; Mermaid在线编辑工具&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hugo增加shorcodes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://navendu.me/posts/adding-diagrams-to-your-hugo-blog-with-mermaid/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Adding Diagrams to Your Hugo Blog With Mermaid&lt;/a&gt; 使用Mermaid将图表添加到您的Hugo博客&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.qfleng.com/p/hugo-%E7%94%A8mermaid%E6%98%BE%E7%A4%BA%E6%B5%81%E7%A8%8B%E5%9B%BE%E7%94%98%E7%89%B9%E5%9B%BE/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo-用Mermaid显示流程图、甘特图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.google.com.hk/search?q=%E7%94%98%E7%89%B9%E5%9B%BE&amp;#43;Shortcode&amp;#43;hugo&amp;amp;oq=%E7%94%98%E7%89%B9%E5%9B%BE&amp;#43;Shortcode&amp;#43;hugo&amp;amp;aqs=chrome..69i57j33i160.26105j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google &amp;ldquo;甘特图 Shortcode hugo&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/content-management/shortcodes/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shortcodes in HUGO&lt;/a&gt; 在Hugo中使用Shortcodes&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.andbible.com/post/hugo-templates-shortcode-templates/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo框架中文文档Templates创建短代码模板&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://learn.netlify.app/en/shortcodes/mermaid/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Learn Hugo-Shortcodes-Mermaid&lt;/a&gt; Hugo中的Shortcodes with Mermaid&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ttys3.dev/post/add-mermaid-shortcode-to-hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;给Hugo博客添加mermaid短代码支持&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mermaid绘图&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.thisfaner.com/p/mermaid/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mermaid绘图入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/zpsoe/p/markdown_mermaid.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid 绘图总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hellowac.github.io/2021/12/21/mermaid%E6%96%87%E6%A1%A3%E4%B8%AD%E6%96%87%E7%89%88-%E8%AF%AD%E6%B3%95-%E7%94%98%E7%89%B9%E5%9B%BE.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mermaid文档中文版-语法-甘特图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装Mermaid:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;有说法是使用npm进行安装, 命令大概是:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# npm install mermaid&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.thelinuxfaq.com/npm/npm-packages/mermaid&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to Install mermaid software package in NPM Packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/qinshulei/ubuntu-install/blob/master/software-install/install-mermaid&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;install-mermaid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.google.com.hk/search?q=how&amp;#43;to&amp;#43;install&amp;#43;mermaid&amp;#43;ubuntu&amp;amp;oq=how&amp;#43;to&amp;#43;install&amp;#43;mermaid&amp;#43;&amp;#43;ubuntu&amp;amp;aqs=chrome..69i57j33i160l2.13020j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google &amp;ldquo;how to install mermaid ubuntu&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中npm可以用apt命令安装&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# apt install npm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但使用npm安装mermaid失败了&lt;br&gt;
由于网上有多家CDN提供Mermaid可供调用, 不再尝试安装。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网上可用的Mermaid:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://unpkg.com/browse/mermaid@9.2.2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;UNPKG Mermaid&lt;/a&gt;: &lt;a class=&#34;link&#34; href=&#34;https://unpkg.com/browse/mermaid@9.2.2/dist/mermaid.min.js&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://unpkg.com/browse/mermaid@9.2.2/dist/mermaid.min.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cdnjs.cloudflare.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cloudflare CDN JS&lt;/a&gt;: &lt;a class=&#34;link&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/mermaid/9.2.2/mermaid.min.js&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cdnjs.cloudflare.com/ajax/libs/mermaid/9.2.2/mermaid.min.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cdn.jsdelivr.net/npm/mermaid/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid CDN by jsDeliv&lt;/a&gt;: &lt;a class=&#34;link&#34; href=&#34;https://cdn.jsdelivr.net/npm/mermaid@9.2.2/dist/mermaid.min.js&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cdn.jsdelivr.net/npm/mermaid@9.2.2/dist/mermaid.min.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.staticfile.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;七牛云&lt;/a&gt;: &lt;a class=&#34;link&#34; href=&#34;https://cdn.staticfile.org/mermaid/9.2.2/mermaid.min.js&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cdn.staticfile.org/mermaid/9.2.2/mermaid.min.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.google.com.hk/search?q=mermaid.min.js&amp;amp;oq=mermaid.min.js&amp;amp;aqs=chrome..69i57j0i512j0i30j69i60l2j5i44.618j0j15&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google &amp;ldquo;mermaid.min.js&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;出现的问题:&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/templates/shortcode-templates/#shortcode-template-lookup-order&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shortcode Template Lookup Order&lt;/a&gt; 短代码模板查找顺序&lt;br&gt;
问题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;把Mermaid短代码模板文件mermaid.html放到/layouts/shortcodes/目录下时, Mermaid短代码模板未生效&lt;br&gt;
改放到/themes/&amp;lt;THEME&amp;gt;/layouts/shortcodes/目录下时, Mermaid短代码模板生效&lt;br&gt;
按照参考文档中所说的短代码模板查找顺序:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;/layouts/shortcodes/&amp;lt;SHORTCODE&amp;gt;.html&lt;/li&gt;
&lt;li&gt;/themes/&amp;lt;THEME&amp;gt;/layouts/shortcodes/&amp;lt;SHORTCODE&amp;gt;.html&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;短代码模板文件放到/layouts/shortcodes/目录下时也应当是生效的。&lt;br&gt;
而且, 一般来说, &lt;u&gt;新增或修改的文件也不应该放在模板目录下!&lt;/u&gt;&lt;br&gt;
处理:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原因不明, 未处理&lt;br&gt;
影响不大(代码管理有点乱)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;openwrt&#34;&gt;OpenWrt&lt;/h2&gt;
&lt;h3 id=&#34;使用github的action为newifi3-d2编译的openwrt固件-启动时不自动开启wifi的问题&#34;&gt;使用Github的Action为Newifi3-D2编译的OpenWrt固件, 启动时不自动开启wifi的问题&lt;/h3&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4056993-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[AC2100(RM2100)] 求助，怎么让openwrt每次重启后自动开启wifi&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;测试参考中提到的方法:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ifconfig ra0 up   #2G&lt;br&gt;
ifconfig rai0 up  #5G&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;确认, 不仅DHCP服务出了问题, 无线侧的网络也出了问题:&lt;br&gt;
即使使用手动分配地址, 也无法访问OpenWrt管理界面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解决方法:&lt;br&gt;
通过另一个无线连入, 再转有线, 辗转接入OpenWrt管理界面后, 点击&amp;quot;重启无线&amp;quot;按钮(可能相当于&amp;quot;ifconfig ra0 restart&amp;quot;类似命令), 即可正常启动无线, 并且网络功能正常使用。&lt;br&gt;
见图:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/18-qa-11.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;网络&#34;&gt;网络&lt;/h2&gt;
&lt;h3 id=&#34;怎样下载知乎网站上的视频&#34;&gt;怎样下载&amp;quot;知乎&amp;quot;网站上的视频&lt;/h3&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/question/66184247&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;怎么下载知乎上的视频？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其实只需要一个谷歌浏览器（火狐的操作方法一样）就可以，无需任何插件，也不需要去关注微信公众号。&lt;br&gt;
任何谷歌浏览器内核都可以用以下方法：&lt;br&gt;
1，用谷歌浏览器点一个有视频的回答。&lt;br&gt;
2，等待视频打开，在视频画面中右键点“&lt;strong&gt;检查&lt;/strong&gt;”。&lt;br&gt;
3，右方点“&lt;strong&gt;network&lt;/strong&gt;”，然后按“F5”刷新。&lt;br&gt;
&lt;img src=&#34;https://pic3.zhimg.com/50/v2-6f4e95490eed0bfe359aea7077feae22_720w.jpg?source=1940ef5c&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;br&gt;
然后在方框中输入&lt;strong&gt;vzuu&lt;/strong&gt;，vzuu为知乎视频网站的主机名，下方就会过滤出链接来。&lt;br&gt;
&lt;img src=&#34;https://pica.zhimg.com/50/v2-f1001ab9d1cd578b5bb2f973d5ed9cf8_720w.jpg?source=1940ef5c&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
第三个和第四个就是显示为&lt;strong&gt;media&lt;/strong&gt;，在这两个链接任意右键点拷贝链接，下载软件下载即可。&lt;br&gt;
如果不想用下载软件下载，把复制好的视频网址在浏览器中打开，然后右上角三个点-更多工具-网页另存为，就可以用谷歌浏览器下载。&lt;br&gt;
&lt;strong&gt;很多网站都可以用这个方法下载，可以用media分辨&lt;/strong&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>为Newifi3编译Padavan</title>
        <link>https://jimway71.github.io/p/%E4%B8%BAnewifi3%E7%BC%96%E8%AF%91padavan/</link>
        <pubDate>Sat, 28 May 2022 20:46:00 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E4%B8%BAnewifi3%E7%BC%96%E8%AF%91padavan/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-56.png" alt="Featured image of post 为Newifi3编译Padavan" /&gt;&lt;p&gt;注：第一次尝试，采用最简单的方法处理&lt;br&gt;
操作系统: &lt;a class=&#34;link&#34; href=&#34;https://releases.ubuntu.com/18.04/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ubuntu 18.04 LTS&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;第一次尝试编译&#34;&gt;第一次尝试编译&lt;/h2&gt;
&lt;h3 id=&#34;系统准备&#34;&gt;系统准备&lt;/h3&gt;
&lt;h4 id=&#34;操作系统更新&#34;&gt;操作系统更新&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;$ sudo apt update&lt;br&gt;
$ sudo apt upgrade&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;安装依赖包&#34;&gt;安装依赖包&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;$ sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \&lt;br&gt;
fakeroot kmod cpio git python3-docutils gettext automake autopoint \&lt;br&gt;
texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \&lt;br&gt;
libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;编译过程结果-无扩展功能&#34;&gt;编译过程(结果: 无扩展功能)&lt;/h3&gt;
&lt;h4 id=&#34;准备目录&#34;&gt;准备目录&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;$ sudo mkdir /opt/rt-n56u&lt;br&gt;
$ sudo chmod 0777 /opt/rt-n56u&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;拉取源码&#34;&gt;拉取源码:&lt;/h4&gt;
&lt;p&gt;选择github上的代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ git clone --depth=1 &lt;a class=&#34;link&#34; href=&#34;https://github.com/hanwckf/rt-n56u.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/hanwckf/rt-n56u.git&lt;/a&gt; /opt/rt-n56u&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;准备toolchain&#34;&gt;准备toolchain&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;$ cd /opt/rt-n56u/toolchain-mipsel&lt;br&gt;
# 使用脚本下载预编译的工具链：&lt;br&gt;
$ sh dl_toolchain.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;如何有必要编辑配置文件模板&#34;&gt;(如何有必要)编辑配置文件(模板)&lt;/h4&gt;
&lt;p&gt;在/opt/rt-n56u/trunk/configs/templates/目录下&lt;br&gt;
Newifi3的配置文件名为NEWIFI3.config&lt;/p&gt;
&lt;h3 id=&#34;进行编译&#34;&gt;进行编译&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;$ cd /opt/rt-n56u/trunk&lt;br&gt;
# 对于WSL环境，需要使用sudo进行编译，或者使用fakeroot-tcp代替fakeroot&lt;br&gt;
$ sudo ./build_firmware_modify NEWIFI3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;坐等编译完成，时间会比较长，应该跟机器速度强相关。&lt;/p&gt;
&lt;h3 id=&#34;编译完成拷出固件&#34;&gt;编译完成，拷出固件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;编译好的固件在:&lt;br&gt;
/opt/rt-n56u/trunk/images&lt;/li&gt;
&lt;li&gt;生成的固件为:&lt;br&gt;
NEWIFI3_3.4.3.9-099.trx&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注:&lt;br&gt;
有人提醒: 刷机后为避免各类怪异现象，请到&amp;quot;系统管理&amp;quot;-&amp;gt;&amp;ldquo;配置管理&amp;rdquo;, 重置路由器设置 (NVRAM)和 路由器内部存储 (/etc/storage)进行双清&lt;/p&gt;
&lt;p&gt;Pavadan的第一次编译过程比较顺利，相比而言，Openwrt的编译过程总是状况不断。&lt;br&gt;
好感度+1！&lt;/p&gt;
&lt;p&gt;后记:&lt;br&gt;
用编译后固件刷了NEWIFI3后, 进入后看到的图面如下:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/2022-05-28_hanwckf_pdv_%e6%97%a0%e7%a7%91%e5%ad%a6%e7%95%8c%e9%9d%a2_%e8%87%aa%e7%bc%96%e8%af%91%e7%89%88%e6%9c%ac.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;完全没有扩展功能，功能不全，无法使用&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;尝试下载已编译好的固件&#34;&gt;尝试下载已编译好的固件&lt;/h2&gt;
&lt;p&gt;好吧，那先找个大概能用的、编译好的固件看下再说&lt;br&gt;
在&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;恩山论坛&lt;/a&gt;上到个帖子，给指到&lt;a class=&#34;link&#34; href=&#34;https://github.com/hiboyhiboy/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hiboyhiboy&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://github.com/hiboyhiboy/opt-script/issues/61&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ss订阅列表问题#61&lt;/a&gt;，里面有指到&lt;a class=&#34;link&#34; href=&#34;https://t.me/s/pdcn1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hiboyhiboy的固件发布地址&lt;/a&gt;，在这里找到了&lt;a class=&#34;link&#34; href=&#34;https://opt.cn2qq.com/padavan&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;他的固件下载地址&lt;/a&gt;。&lt;br&gt;
下载&lt;a class=&#34;link&#34; href=&#34;https://opt.cn2qq.com/padavan/RT-N56UB1-newifi3D2-512M_3.4.3.9-099.trx&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RT-N56UB1-newifi3D2-512M_3.4.3.9-099.trx&lt;/a&gt;，并刷入NEWIFI3，进入后的界面是这样的：&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/2022-05-28_hiboy_pdv_%e5%bc%b1%e7%a7%91%e5%ad%a6%e7%95%8c%e9%9d%a2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;“V2RAY”配置菜单在“扩展功能”-“搭建Web环境”里的第二项，里面界面、配置方式与原来在OP里的完全不同，比较难于入手。&lt;br&gt;
放弃！&lt;/p&gt;
&lt;h2 id=&#34;尝试用可选科学上网插件的代码做编译&#34;&gt;尝试用可选科学上网插件的代码做编译&lt;/h2&gt;
&lt;p&gt;在&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/c31b58728778&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;老毛子Padavan固件编译笔记&lt;/a&gt;中发现&lt;a class=&#34;link&#34; href=&#34;https://github.com/chongshengB/rt-n56u&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;chongshengB&lt;/a&gt;的版本可以选择&lt;u&gt;科学上网&lt;/u&gt;插件，看样子有可能可用。&lt;br&gt;
跟着&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/c31b58728778&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;老毛子Padavan固件编译笔记&lt;/a&gt;的说明做编译。&lt;br&gt;
注：&lt;br&gt;
在编译过程中报了四次错&lt;/p&gt;
&lt;h3 id=&#34;报错为没有找到7z&#34;&gt;报错为没有找到7z&lt;/h3&gt;
&lt;p&gt;处理：安装7z&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$sudo apt install p7zip-full&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是，装完7z后还有报错，如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make[2]: Entering directory &amp;#39;/opt/rt-n56u/trunk/libs/boost&amp;#39;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;( if [ ! -d boost_1_72_0 ]; then \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        7z x -bsp0 boost_1_72_0.7z ; \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        patch -d boost_1_72_0 -p1 -i ../build.patch; \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fi )  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Error:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Incorrect command line  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;patch: **** Can&amp;#39;t change to directory boost_1_72_0 : No such file or directory  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Makefile:14: recipe for target &amp;#39;extract_test&amp;#39; failed  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make[2]: *** [extract_test] Error 2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make[2]: Leaving directory &amp;#39;/opt/rt-n56u/trunk/libs/boost&amp;#39;  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;查找问题原因&#34;&gt;查找问题原因&lt;/h4&gt;
&lt;p&gt;查找原因，直接执行 7z x -bsp0 boost_1_72_0.7z，报错如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/tmp$ 7z x -bsp0 /opt/rt-n56u/trunk/libs/boost/boost_1_72_0.7z  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Error:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Incorrect command line  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;显示的错误一致。&lt;br&gt;
如果修改一下，执行 7z x boost_1_72_0.7z&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/tmp$ 7z x  /opt/rt-n56u/trunk/libs/boost/boost_1_72_0.7z&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;则能正确执行。&lt;br&gt;
通过Google搜索＂7z bsp0 error＂，可以查到一篇＂&lt;a class=&#34;link&#34; href=&#34;https://superuser.com/questions/194659/how-to-disable-the-output-of-7-zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to disable the output of 7-Zip?&lt;/a&gt;＂，里面有提到&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can use the -bs command to control where output goes. To stop anything but error output, I would add -bso0 -bsp0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即参数-bsp0可以停止除错误输出之外的任何操作，&lt;br&gt;
下一个回复则说到&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is correct, but introduced in 7Zip version 15.01 or after 9.38beta Source: sourceforge.net/p/sevenzip/discussion/45797/thread/8a45fa74 The actual Synology DSM 6.1.x includes 7zip with the version 9.20 and has no such option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;应该是后来的版本里没有这个选项。&lt;br&gt;
由此可以确定是由于7z版本更新后，不再支持-bsp0选项，而造成的这个错误。&lt;/p&gt;
&lt;h4 id=&#34;解决问题&#34;&gt;解决问题&lt;/h4&gt;
&lt;p&gt;解决方法应该是去掉命令中的-bsp0。&lt;br&gt;
搜索这个命令的位置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ /opt/rt-n56u/trunk$ grep -r &amp;#39;bsp0 &amp;#39; *  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;libs/boost/Makefile:            7z x -bsp0 $(SRC_NAME).7z ; \  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;那就是在文件/opt/rt-n56u/trunk/libs/boost/Makefile里，打开该文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ vim /opt/rt-n56u/trunk/libs/boost/Makefile  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SRC_NAME = boost_1_72_0  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;THISDIR = $(shell pwd)  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CFLAGS := -O3 -ffunction-sections -fdata-sections  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CXXFLAGS := -O3 -ffunction-sections -fdata-sections  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;LDFLAGS := -Wl,--gc-sections  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Boost_libs := date_time,program_options,system  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;all: extract_test config_test  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ( cd $(SRC_NAME); \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ./b2 -d 0 -j $(HOST_NCPU) toolset=gcc-cross link=static variant=release runtime-link=shared install ; \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        )  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;extract_test:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ( if [ ! -d $(SRC_NAME) ]; then \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                7z x -bsp0 $(SRC_NAME).7z ; \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                patch -d $(SRC_NAME) -p1 -i ../build.patch; \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        fi )  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;config_test:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ( if [ -f ./config_done ]; then \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                echo &amp;#34;config done&amp;#34;; \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        else \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        cd $(SRC_NAME); \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ./bootstrap.sh --with-libraries=$(Boost_libs) --prefix=$(STAGEDIR) ; \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        echo &amp;#34;using gcc : cross : $(CXX) : &amp;lt;compileflags&amp;gt;\&amp;#34;$(CPUFLAGS)\&amp;#34; &amp;lt;cxxflags&amp;gt;\&amp;#34;$(CXXFLAGS)\&amp;#34; &amp;lt;cflags&amp;gt;\&amp;#34;$(CFLAGS)\&amp;#34; &amp;lt;linkflags&amp;gt;\&amp;#34;$(LDFLAGS)\&amp;#34; ;&amp;#34; &amp;gt;&amp;gt; project-config.jam ; \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        touch ../config_done; \  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        fi )  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;clean:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        rm -f config_done  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;romfs:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        cp -fP $(STAGEDIR)/lib/libboost_*.so* $(ROMFSDIR)/lib  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;修改第15行 &amp;quot;                7z x -bsp0 $(SRC_NAME).7z ; &amp;quot;，去掉-bsp0，改为：&lt;br&gt;
&amp;quot;                7z x $(SRC_NAME).7z ; &amp;quot;&lt;br&gt;
&lt;strong&gt;已确认修改完成后该问题解决&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;没有htop-302targz且在试图下载htop-302targz时报错&#34;&gt;没有htop-3.0.2.tar.gz，且在试图下载htop-3.0.2.tar.gz时报错&lt;/h3&gt;
&lt;p&gt;报错内容为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HTTP request sent, awaiting response&amp;hellip; 403 Forbidden&lt;br&gt;
2022-05-29 11:09:25 ERROR 403: Forbidden.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;帖子&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4064867-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C大源码编译到htop时出错&lt;/a&gt;里描述了相同的错误，并说明了解决方案，如下：&lt;br&gt;
把&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/forum.php?mod=attachment&amp;amp;aid=NDQxMTk5fDY4MDg5ZDU3fDE2NTM4Mzc5MDZ8MHw0MDY0ODY3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;htop-3.0.2.tar.gz&lt;/a&gt;文件放/opt/rt-n56u/trunk/user/htop下就行了。&lt;br&gt;
&lt;strong&gt;已确认该解决方案可行&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;在编译到trojan时报错&#34;&gt;在编译到trojan时报错&lt;/h3&gt;
&lt;p&gt;报错如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CMake Error at CMakeLists.txt:1 (cmake_minimum_required):&lt;br&gt;
CMake 3.7.2 or higher is required.  You are running version 3.5.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/u010420283/article/details/117632307&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ubuntu18/16 升级默认apt安装的cmake版本&lt;/a&gt;，从&lt;a class=&#34;link&#34; href=&#34;https://cmake.org/download/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CMakedownload&lt;/a&gt;下载cmake。&lt;br&gt;
当前cmake版本为3.22.4&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/tmp$ wget &lt;a class=&#34;link&#34; href=&#34;https://github.com/Kitware/CMake/releases/download/v3.22.4/cmake-3.22.4-linux-x86_64.tar.gz&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Kitware/CMake/releases/download/v3.22.4/cmake-3.22.4-linux-x86_64.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意：上面下载的是linux的&lt;strong&gt;可执行版本&lt;/strong&gt;，而不是源代码包。&lt;br&gt;
解压后，移动到/opt目录下，并做链接(ln)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/tmp$ tar zxvf cmake-3.22.4-linux-x86_64.tar.gz   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 查看版本号  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/tmp$ ./cmake-3.22.4-linux-x86_64/bin/cmake --version  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 新建目录  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/tmp$ sudo mkdir /opt/cmake-3.22.4  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/tmp$ sudo chmod 0777 /opt/cmake-3.22.4  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 移动  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/tmp$ mv cmake-3.22.4-linux-x86_64/* /opt/cmake-3.22.4/ -f  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 建立软链接  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo ln -sf /opt/cmake-3.22.4/bin/* /usr/bin/  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 再次查看版本  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cmake --version  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;最后编译完成后报错说包太大&#34;&gt;最后编译完成后报错，说包太大&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Padded Kernel Image Size  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1273856 /opt/rt-n56u/trunk/images/zImage.lzma  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Original RootFs Size  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;110628938       /opt/rt-n56u/trunk/romfs  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Compressed RootFs Size  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;43246464 /opt/rt-n56u/trunk/images/ramdisk  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Padded Kernel Image + Compressed Rootfs Size  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;44520320 /opt/rt-n56u/trunk/images/zImage.lzma  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# !!! Please make sure that Padded Kernel Image + Compressed Rootfs size  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# can&amp;#39;t bigger than 32964544 !!!  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#===========================================  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Pack final image and write headers  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# For No padded, need write kernel size in image header   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# to correct mount partition in mtd drivers address  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;img file: /opt/rt-n56u/trunk/images/NEWIFI3_3.4.3.9-099.trx  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;查看images目录，包还是生成了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/opt/rt-n56u/trunk$ ll images/  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;total 132812  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x  2 root   root       4096 May 30 05:35 ./  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxrwxr-x 14 jimway jimway     4096 May 30 04:59 ../  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rw-r--r--  1 root   root   44520384 May 30 05:35 NEWIFI3_3.4.3.9-099.trx  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rw-r--r--  1 root   root   43246464 May 30 05:35 ramdisk  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rwxr-xr-x  1 root   root    3692352 May 30 05:35 zImage*  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rw-r--r--  1 root   root   44520320 May 30 05:35 zImage.lzma  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;多用了12-13M空间，看下怎么能减下来。&lt;/p&gt;
&lt;h3 id=&#34;修改原老毛子padavan固件编译笔记中的编译操作总结&#34;&gt;修改原老毛子Padavan固件编译笔记中的编译操作总结&lt;/h3&gt;
&lt;p&gt;综上所述，修改原&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/c31b58728778&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;老毛子Padavan固件编译笔记&lt;/a&gt;中的编译操作如下：&lt;/p&gt;
&lt;h3 id=&#34;系统准备-1&#34;&gt;系统准备&lt;/h3&gt;
&lt;h4 id=&#34;操作系统更新-1&#34;&gt;操作系统更新&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;$ sudo apt update&lt;br&gt;
$ sudo apt upgrade&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;安装依赖包-1&#34;&gt;安装依赖包&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;$  sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano fakeroot cpio git python-docutils gettext automake autopoint texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget p7zip-full&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;编译过程&#34;&gt;编译过程&lt;/h3&gt;
&lt;h4 id=&#34;准备目录-1&#34;&gt;准备目录&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;$ sudo mkdir /opt/rt-n56u&lt;br&gt;
$ sudo chmod 0777 /opt/rt-n56u&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;拉取源码-1&#34;&gt;拉取源码:&lt;/h4&gt;
&lt;p&gt;选择github上的代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ git clone --depth=1 &lt;a class=&#34;link&#34; href=&#34;https://github.com/chongshengB/rt-n56u.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/chongshengB/rt-n56u.git&lt;/a&gt; /opt/rt-n56u&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;准备toolchain-1&#34;&gt;准备toolchain&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;$ cd /opt/rt-n56u/toolchain-mipsel&lt;br&gt;
# 使用脚本下载预编译的工具链：&lt;br&gt;
$ sh dl_toolchain.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;将前述htop-302targz文件拷贝到optrt-n56utrunkuserhtop目录下&#34;&gt;将前述htop-3.0.2.tar.gz文件拷贝到/opt/rt-n56u/trunk/user/htop目录下&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/forum.php?mod=attachment&amp;amp;aid=NDQxMTk5fDY4MDg5ZDU3fDE2NTM4Mzc5MDZ8MHw0MDY0ODY3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;htop-3.0.2.tar.gz文件链接&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ cp htop-3.0.2.tar.gz /opt/rt-n56u/trunk/user/htop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;修改libsboostmakefile&#34;&gt;修改libs/boost/Makefile&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;$ vim /opt/rt-n56u/trunk/libs/boost/Makefile&lt;br&gt;
修改第15行”7z x -bsp0 $(SRC_NAME).7z ; \”，改为：&lt;br&gt;
&amp;ldquo;7z x $(SRC_NAME).7z ; &amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;升级cmake版本&#34;&gt;升级cmake版本&lt;/h4&gt;
&lt;p&gt;下载新版本cmake(可执行版本)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/tmp$ wget &lt;a class=&#34;link&#34; href=&#34;https://github.com/Kitware/CMake/releases/download/v3.22.4/cmake-3.22.4-linux-x86_64.tar.gz&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Kitware/CMake/releases/download/v3.22.4/cmake-3.22.4-linux-x86_64.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解压后，移动到/opt目录下，并做链接(ln)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 解压  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/tmp$ tar zxvf cmake-3.22.4-linux-x86_64.tar.gz   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 新建目录  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/tmp$ sudo mkdir /opt/cmake-3.22.4  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/tmp$ sudo chmod 0777 /opt/cmake-3.22.4  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 移动  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/tmp$ mv cmake-3.22.4-linux-x86_64/* /opt/cmake-3.22.4/ -f  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 建立软链接  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo ln -sf /opt/cmake-3.22.4/bin/* /usr/bin/  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;查看并修改自定义插件配置文件是optrt-n56utrunkbuild_firmware_modify&#34;&gt;查看并修改自定义插件，配置文件是/opt/rt-n56u/trunk/build_firmware_modify&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;$ vim /opt/rt-n56u/trunk/build_firmware_modify&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将文件中的插件自定义修改y/n，y是编译，n是不编译。&lt;br&gt;
注意：至少要保留科学上网相关的插件。&lt;/p&gt;
&lt;h4 id=&#34;可选编辑配置文件模板&#34;&gt;(可选)编辑配置文件(模板)&lt;/h4&gt;
&lt;p&gt;在/opt/rt-n56u/trunk/configs/templates/目录下&lt;br&gt;
Newifi3的配置文件名为NEWIFI3.config&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ vim /opt/rt-n56u/trunk/configs/templates/NEWIFI3.config&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;进行编译-1&#34;&gt;进行编译&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cd /opt/rt-n56u/trunk  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 对于WSL环境，需要使用sudo进行编译，或者使用fakeroot-tcp代替fakeroot  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo ./build_firmware_modify NEWIFI3  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;坐等编译完成，时间会比较长，大概与机器速度强相关。&lt;/p&gt;
&lt;h3 id=&#34;编译完成拷出固件-1&#34;&gt;编译完成，拷出固件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;编译好的固件在:&lt;br&gt;
/opt/rt-n56u/trunk/images&lt;/li&gt;
&lt;li&gt;生成的固件为:&lt;br&gt;
NEWIFI3_3.4.3.9-099.trx&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编译成功，功能较多，尚未测试。(5.30)&lt;/p&gt;
&lt;p&gt;(第一次成功编译后_5.30之前)用编译后固件刷了NEWIFI3后, 进入后看到的图面如下:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/2022-05-28_chongshengB_pdv_%e7%a7%91%e5%ad%a6%e7%95%8c%e9%9d%a2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;符合预期!&lt;/p&gt;
&lt;p&gt;又:&lt;br&gt;
经测试，&lt;strong&gt;科学功能不稳定&lt;/strong&gt;！且功能简单，远不如op上的科学功能强大，而且功能远少于op。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;注:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;关于清理代码树并重新开始编译:  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cd /opt/rt-n56u/trunk  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo ./clear_tree  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo ./build_firmware_modify NEWIFI3  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;再次尝试用可选科学上网插件的代码做编译&#34;&gt;再次尝试用可选科学上网插件的代码做编译&lt;/h2&gt;
&lt;p&gt;又又在网上找了一个版本：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4055964-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【2021-01-10】NEWIFI3 基于chongshengB源码编译彩虹版主题padavan,更新手机版页面&lt;/a&gt;&lt;br&gt;
下载了其中的&lt;a class=&#34;link&#34; href=&#34;https://wwa.lanzoui.com/iqAick8u2kf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;完整版&lt;/a&gt;(似乎并不是这个)&lt;br&gt;
刷机后如下:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/2022-05-30_122926_%e7%bd%91%e7%bb%9c%e4%b8%8b%e8%bd%bd%e6%9f%90%e7%89%88%e6%9c%ac_%e8%83%bd%e7%a7%91%e5%ad%a6%e4%b8%8d%e7%a8%b3%e5%ae%9a.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;功能是有了，但是&lt;strong&gt;科学功能依然不稳定&lt;/strong&gt;：开机后长时间不能科学，但睡一觉后．．．．．又能科学了！(还有，出现在本来能科学，改下科学的配置并保存后，居然也不能科学了！这很不科学！)(之后还又不能科学了/_ )&lt;/p&gt;
&lt;h2 id=&#34;再再次尝试&#34;&gt;再再次尝试&lt;/h2&gt;
&lt;p&gt;成功不完全，就是完全不成功！&lt;br&gt;
换：CM520+自制全套OP办科学，NWF3+自制全套PDV做交换+wifi。&lt;br&gt;
2020.5.30记录&lt;/p&gt;
&lt;p&gt;&amp;hellip;当前NWF3+PDV还能凑合用，先用着&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自制&amp;hellip;完成&lt;/li&gt;
&lt;li&gt;CM520+自制测试，NWF3(不刷+不做拨号和DHCP)做WIFI(如失败，NWF3恢复后继续凑合)&lt;br&gt;
如成功&lt;/li&gt;
&lt;li&gt;再刷NWF3&lt;br&gt;
希望最终CM520、NWF3都能独立使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2022.6.1记录:&lt;br&gt;
最后还是成功了的(还未上线测), 看图&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/56-pdv-10.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/56-pdv-11.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考列表&#34;&gt;参考列表&lt;/h2&gt;
&lt;h3 id=&#34;编译参考&#34;&gt;编译参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/6b8403cdea46&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Padavan固件编译办法&lt;/a&gt;:
第一次编译时参考&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;源代码列表&#34;&gt;源代码列表&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/hanwckf/rt-n56u&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hanwckf的Padavan库_Github&lt;/a&gt;:&lt;br&gt;
最先支持了7915无线芯片，也就是支持了wifi6的机型比如CR660x和JCG Q20/Q10 Pro&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/chongshengB/rt-n56u&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;chongshengB的Padavan库_Github&lt;/a&gt;:&lt;br&gt;
在hanwckf的基础上增加修改出了7615/7915对kvr的支持&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/padavanonly/rt-n56u&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;padavanonly的Padavan库 Github&lt;/a&gt;:&lt;br&gt;
具有一些别人没有的插件，使用比较方便&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/immortalwrt/padavan&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;immortalwrt的Padavan库 Github&lt;/a&gt;:&lt;br&gt;
在一些细节上有优化&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Yuclee/Padavan-Minimal&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Yuclee的Padavan-mini库 Github&lt;/a&gt;:&lt;br&gt;
看样子是个精简版本&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他参考&#34;&gt;其他参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cxymm.net/article/m0_60027682/120075617&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Padavan各源码融合教程_m0_60027682的博客-程序员秘密&lt;/a&gt;:&lt;br&gt;
整合多个源代码的功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/cb51fb0fb2ac&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;老毛子固件使用说明&lt;/a&gt;:&lt;br&gt;
有初始化说明&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/c31b58728778&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;老毛子Padavan固件编译笔记&lt;/a&gt; &lt;strong&gt;(最终参考)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4740979-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NEWIFI3 D2自编译PADAVAN老毛子固件，基于hanwckf最新源码编译整合常用插件&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4064867-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C大源码编译到htop时出错&lt;/a&gt;:&lt;br&gt;
编译错误处理&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tbd&#34;&gt;TBD&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;机编op for cm520(全套, 主用v2, 不用无线, 做拨号)&lt;/li&gt;
&lt;li&gt;机编pdv for newifi3, chongshengB版, 全套, 仅用来做无线(5G放149)&lt;/li&gt;
&lt;li&gt;git编pdv for newifi3&lt;br&gt;
看来是完成了的(2022.11.1)&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>使用Github为多种设备编译Openwrt固件</title>
        <link>https://jimway71.github.io/p/%E4%BD%BF%E7%94%A8github%E4%B8%BA%E5%A4%9A%E7%A7%8D%E8%AE%BE%E5%A4%87%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6/</link>
        <pubDate>Sun, 23 May 2021 18:27:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E4%BD%BF%E7%94%A8github%E4%B8%BA%E5%A4%9A%E7%A7%8D%E8%AE%BE%E5%A4%87%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/NAFO-41.jpg" alt="Featured image of post 使用Github为多种设备编译Openwrt固件" /&gt;&lt;h2 id=&#34;openwrt编译参考&#34;&gt;Openwrt编译参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://p3terx.com/archives/build-openwrt-with-github-actions.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用 GitHub Actions 云编译 OpenWrt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/coolsnowwolf/lede&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Lean的Openwrt源码仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/IvanSolis1989/OpenWrt-DIY&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenWrt DIY — 多设备固件云编译&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;源起&#34;&gt;源起&lt;/h2&gt;
&lt;p&gt;最开始是用vps的虚拟机做编译, 虽然编译成功过, 但还是有些问题.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;操作比较麻烦, 每次都需要做配置&lt;/li&gt;
&lt;li&gt;不清楚怎么更新代码, 现在有好些库都没办法更新, 新功能也无法使用.&lt;/li&gt;
&lt;li&gt;编译时间长, 最后还经常出错, 虽然vps虚拟机还是在米国.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;到最后编译总是不成功, 库倒是编译通过了, 只有用编译好的库往现有的设备上安装, 要找关联库什么的, 一堆的麻烦事.&lt;br&gt;
搞vps上的openwrt编译搞烦了, 不想再继续下去, 但更新总得做.&lt;br&gt;
后来看到相关教程, 可以用github Action功能来实现编译, 不用做vps虚拟机, 不需要复杂的配置, 于是开始研究.&lt;/p&gt;
&lt;h2 id=&#34;选库开始瞎搞&#34;&gt;选库(开始瞎搞)&lt;/h2&gt;
&lt;p&gt;看了很长时间的教程, 也没搞懂该怎么做, 算了, 跟着感觉走吧.&lt;br&gt;
&lt;strong&gt;Github上openwrt相关的代码库很多, 需要先选一个库来fork.&lt;/strong&gt;&lt;br&gt;
我在github上搜索&amp;quot;openwrt k2p&amp;quot;, 从Star和Fork最多的库里查找支持设备比较多的库, 由于排第二的&amp;quot;&lt;a class=&#34;link&#34; href=&#34;https://github.com/IvanSolis1989/OpenWrt-DIY&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenWrt DIY — 多设备固件云编译&lt;/a&gt;&amp;ldquo;支持的设备种类最多, 就选了这个库, 后面熟悉了还得看下代码.&lt;/p&gt;
&lt;h2 id=&#34;操作正式开始瞎搞&#34;&gt;操作(正式开始瞎搞)&lt;/h2&gt;
&lt;h3 id=&#34;登录&#34;&gt;登录&lt;/h3&gt;
&lt;p&gt;打开github网站并登录.&lt;/p&gt;
&lt;h3 id=&#34;fork&#34;&gt;Fork&lt;/h3&gt;
&lt;p&gt;打开&amp;rdquo;&lt;a class=&#34;link&#34; href=&#34;https://github.com/IvanSolis1989/OpenWrt-DIY&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenWrt DIY — 多设备固件云编译&lt;/a&gt;&amp;quot;, 点击右上角&amp;quot;Fork&amp;quot;按钮, 就可以在已登录的用户目录下Fork出一个资源库.&lt;/p&gt;
&lt;h3 id=&#34;branch&#34;&gt;Branch&lt;/h3&gt;
&lt;p&gt;打开fork的资源库, 可以看到fork出的目录及文件, 目录及文件是主资源库是一样的.&lt;br&gt;
如果想要修改, 需要在左上角的&amp;quot;main&amp;quot;处点击, 并建立一个分支(Find or Create a branch&amp;hellip;), 再选到新建的分支进行修改(Fork出来的main看样子是不能修改的)&lt;br&gt;
(设置新分支为default: 点击右上角的setting菜单, 选择左侧的&amp;quot;branches&amp;quot;,  在右侧即可选择&amp;quot;Default branch&amp;quot;)&lt;/p&gt;
&lt;h3 id=&#34;修改&#34;&gt;修改&lt;/h3&gt;
&lt;p&gt;可以修改新分支的文件, 其中:&lt;br&gt;
.github/workflows目录: 不同设备的Action配置文件&lt;br&gt;
config目录: 不同设备的配置文件&lt;br&gt;
scripts目录: 编译用的shell - 原库主在这里修改了设备缺省IP地址.&lt;/p&gt;
&lt;h3 id=&#34;source-update-check&#34;&gt;Source Update Check&lt;/h3&gt;
&lt;p&gt;点击Actions, 从左侧的Workflows里选择&amp;quot;Source Update Check&amp;quot;, 先要&amp;quot;Enable workflow&amp;quot;, 再点击右侧的&amp;quot;Run workflow&amp;quot; - 应该是检查并更新代码.&lt;br&gt;
&lt;u&gt;(未成功, 错误信息: &amp;ldquo;Run peter-evans/repository-dispatch@v1&lt;/u&gt;&lt;br&gt;
Error: Parameter token or opts.auth is required&amp;rdquo;)&lt;/p&gt;
&lt;h3 id=&#34;actions&#34;&gt;Actions&lt;/h3&gt;
&lt;p&gt;点击Actions, 从左侧的Workflows里选择设备相关的Build项目,  点击右侧的&amp;quot;Run workflow&amp;quot;, 过一会, 就能看到相应的项目正在正在执行, 点进去能看到执行的详细信息.&lt;br&gt;
编译时间大概需要不到3个小时.&lt;/p&gt;
&lt;h2 id=&#34;出现的问题及处理&#34;&gt;出现的问题及处理&lt;/h2&gt;
&lt;h3 id=&#34;没有生成openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgradebin文件&#34;&gt;没有生成openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin文件&lt;/h3&gt;
&lt;p&gt;原编译Newifi_D2所用diy-part2.sh无法生成正常的openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin, 而只能生成openwrt-ramips-mt7621-d-team_newifi-d2-initramfs-kernel.bin.&lt;br&gt;
Google后发现, 应该是包太大了, 需要去掉一些插件&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://github.com/coolsnowwolf/lede/issues/6243&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;过渡包“initramfs-kernel.bin问题 #6243&lt;/a&gt;&lt;br&gt;
以前手动编译时也会有类似情况, 选的插件较多情况下会出现类似的问题.&lt;br&gt;
考虑到Newifi-D2的可用空间限制, 编辑了一个专用于D2的&amp;quot;diy-4-Newifi_D2.sh&amp;rdquo;, 在原版本(复制自&amp;quot;diy-part3.sh&amp;quot;)基础上, 去掉了&amp;quot;passwall&amp;quot;+&amp;ldquo;OpenClash&amp;rdquo;+&amp;ldquo;Docker&amp;rdquo;.
同时, D2的配置文件&amp;quot;.github/workflows/Newifi_D2.yml&amp;quot;也需要做修改, 改用这个新的sh文件.&lt;br&gt;
再次使用Action编译, 编译通过, 并生成&amp;quot;openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin&amp;quot;文件.&lt;/p&gt;
&lt;h3 id=&#34;可能只需要删除一个大插件就行-因此再次修改diy-4-newifi_d2sh-在原版本复制自diy-part3sh基础上-仅去掉锐捷认证mentohustopenclash-并再次编译&#34;&gt;可能只需要删除一个大插件就行, &lt;del&gt;因此再次修改&amp;quot;diy-4-Newifi_D2.sh&amp;quot;, 在原版本(复制自&amp;quot;diy-part3.sh&amp;quot;)基础上, 仅去掉锐捷认证(mentohust)+openclash, 并再次编译&lt;/del&gt;.&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;失败 - 无法生成&amp;quot;openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin&amp;quot;文件&lt;/strong&gt;&lt;br&gt;
再次修改&amp;quot;diy-4-Newifi_D2.sh&amp;quot;, 在原版本(复制自&amp;quot;diy-part3.sh&amp;quot;)基础上, 去掉passwall+锐捷认证(mentohust)+openclash, 并再次编译, 编译成功.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>用R3300L做家用服务器</title>
        <link>https://jimway71.github.io/p/%E7%94%A8r3300l%E5%81%9A%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
        <pubDate>Sat, 10 Apr 2021 16:25:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E7%94%A8r3300l%E5%81%9A%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-39.jpg" alt="Featured image of post 用R3300L做家用服务器" /&gt;&lt;h2 id=&#34;期望实现功能列表&#34;&gt;期望实现功能列表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Docker下跑openwrt, 测试用  ✔&lt;/li&gt;
&lt;li&gt;文件共享服务器 ✅ (实现功能, 但性能极差)&lt;/li&gt;
&lt;li&gt;DLNA服务器  ✔&lt;/li&gt;
&lt;li&gt;Docker下跑wordpress服务器(补充: 最终改成直接Armbian上跑Hugo服务器  ✔)&lt;/li&gt;
&lt;li&gt;小型linux服务器  ✔&lt;br&gt;
&amp;hellip;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装与配置&#34;&gt;安装与配置&lt;/h2&gt;
&lt;h3 id=&#34;在tv-boxr3300l-s905l上安装armbian&#34;&gt;在TV box(R3300L, S905L)上安装Armbian&lt;/h3&gt;
&lt;h4 id=&#34;制作启动tf卡&#34;&gt;制作启动TF卡&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Armbian安装所用镜像来源: &lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/milton/p/11883811.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;R3300L运行CoreELEC, EmuELEC和Armbian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Armbian On TV Box原作者发布贴:&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://forum.armbian.com/topic/12162-single-armbian-image-for-rk-aml-aw-aarch64-armv8/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;balbes150: Single Armbian image for RK + AML + AW (aarch64 ARMv8) By balbes150&lt;/a&gt;&lt;br&gt;
原作者最新的(bonic)镜像经测试, 在R3300L上, 要么卡Start Kernel, 要么黑屏。&lt;br&gt;
可用的镜像分享地址: &lt;a class=&#34;link&#34; href=&#34;https://share.weiyun.com/5eCvcvS&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://share.weiyun.com/5eCvcvS&lt;/a&gt; 密码：mivmcn&lt;br&gt;
上述地址中最新的可用稳定版本: Armbian_5.9.7_Aml-g12-ubuntu_bionic_5.3.0_20190923.img.xz&lt;br&gt;
卡刷后, 修改env.txt, dtb文件选择文件名有212那个(有网卡, 无wifi)&lt;br&gt;
注: Armbian初始用户/密码: root/1234&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;用tf卡启动后操作-重新调整启动tf卡分区&#34;&gt;用TF卡启动后操作: 重新调整启动TF卡分区&lt;/h4&gt;
&lt;p&gt;TF卡第一次启动后，会自动扩展主要分区, 占用全部空间，因为想做文件服务器, 因此需要修改主要分区, 把部分空间分给exfat分区。&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;http://jimway.blogspot.com/2021/04/armbian-on-tv-box.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;armbian on TV box&lt;/a&gt;&lt;br&gt;
Armbian装TF卡上, 有两个分区, 128M*1 + 1.2G*1.&lt;br&gt;
第一次启动时, 系统会自动扩展第二个分区, 会占满整个TF卡&lt;br&gt;
希望留一块空间是windows能读写的(考虑exfat格式), 即使系统坏了, 数据还能读.&lt;br&gt;
因此, 需要无损调整EXT4分区大小&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://blog.pinkd.moe/linux/2018/01/31/resize-a-ext4-partiton-safely&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;无损调整EXT4分区大小&lt;/a&gt;&lt;br&gt;
操作:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先等系统启动自动完成扩展.&lt;/li&gt;
&lt;li&gt;关机, 拿出卡, 插到另一个linux(ubuntu类最好)机器上, 不做为启动盘使用(不需要一直mount上), 启动linux.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 看分区  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# lsblk  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 检查需要调整的分区  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# e2fsck -f /dev/sda2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 调整分区文件系统到5G.  注意: 需要配合下一步才能生效 _ 这里应该只是把用到的空间都挪到前面5G的空间去了, 但没有实际调整分区大小  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# resize2fs /dev/sda2 5G  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 进fdisk, 先删除sda2, 再重建5G大小的sda2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# fdisk /dev/sda  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 删除原sda2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): d  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command):  2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 新建5G大小的sda2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): n        # 新建  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): 2        # 第2分区  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): Sectors位置, sda1 End+1    # 起始sectors位置  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): +5G                                    # 大小, 或结果secotrs位置: 这里写的是大小, 以+开始, +后面是要划分的空间大小(5G)  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): 发现ext4签名, 是否删除: N 不删除  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 顺便把exfat分区也建上...  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(command): w    # 写盘退出  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 再检查一下，没有错误就说明没问题了  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# e2fsck -f /dev/sda2  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;无损调整分区操作结果: 成功&lt;br&gt;
先在windows上格式化了exfat分区, 读写没问题.&lt;br&gt;
然后用这张卡启动linux正常, 用fdisk看分区也正常.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注1: 处理不能使用上述方法调整分区的情况&lt;/strong&gt;&lt;br&gt;
情况描述:&lt;br&gt;
有一张128G的卡, 完成armbian第一次启动,系统自动扩展主分区到占满整张卡后,用另一张TF卡启动到Armbian, 把128G卡插到机器上, 试图用e2fsck+resize2fs命令调整分区, 但系统报错说该该已加载,不能完成上述命令.&lt;br&gt;
考虑到这张卡只用了一次,后面要分出来的空间应该还没有用到, 因此就用fdsik强行重新分区, 并且&lt;u&gt;不格式化&lt;/u&gt;调整小的分区,希望能行.&lt;br&gt;
但完成后用这张卡重启,启动失败,不能进入系统.&lt;br&gt;
调整分区失败.&lt;br&gt;
处理方式(试):&lt;br&gt;
用一张小点的TF卡做armbian系统,完成后用这张卡启动,完成分区调整.&lt;br&gt;
再把这张卡用USB Image Tool 写U盘镜像工具复制到128G的卡中(从小卡上备份到文件, 在大卡上从文件恢复),这样系统会占用8G的空间,剩余的空间用fdisk(armbian上)分区成extfat,再到Windows上格式化为exfat就ok.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注2: 让Armbian挂载exfat磁盘&lt;/strong&gt;&lt;br&gt;
情况描述: Armbian缺省安装不包括exfat支持,需要如下操作安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 更新软件包信息  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# apt-get update  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 查找exfat相关包名  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# apt-cache search exfat  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 安装exfat支持  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# apt-get install exfat-fuse exfat-utils  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 安装完成后, 即可手动挂载  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 建立挂载点  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# mkdir /mnt/mmcblk0p3  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 挂载  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# mount -t exfat /dev/mmcblk0p3 /mnt/mmcblk0p3/  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注3: 让Armbian系统启动时自动挂载exfat磁盘&lt;/strong&gt;&lt;br&gt;
情况描述: Armbian启动时不会自动挂载exfat磁盘, 需要修改/etc/fstab文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 取需要挂载的exfat设备uuid  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# blkid /dev/mmcblk0p3  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/dev/mmcblk0p3: UUID=&amp;#34;FAAE-B3A5&amp;#34; TYPE=&amp;#34;exfat&amp;#34; PARTUUID=&amp;#34;de8d9e8d-09&amp;#34;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 修改自动挂载配置文件/etc/fstab  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# vim /etc/fstab  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 在最后增加  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;UUID=&amp;#34;FAAE-B3A5&amp;#34; /mnt/mmcblk0p3 exfat defaults 0 0  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 其中  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 第1列：磁盘装置文件名或该装置的 Label  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 第2列：Mount point 设备的挂载点，就是你要挂载到哪个目录下  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 第3列：filesystem 磁盘文件系统的格式  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 第4列：文件系统参数 parameters  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 第5列：能否被 dump 备份命令作用  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 第6列：是否以 fsck 检验扇区  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;配置完成后重启确认可以正常挂载.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;注: 当前R3300L的Blk情况:&lt;/u&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# lsblk  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME         MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mmcblk0      179:0    0 119.3G  0 disk   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|-mmcblk0p1  179:1    0   128M  0 part /boot  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|-mmcblk0p2  179:2    0   7.3G  0 part /  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;`-mmcblk0p3  179:3    0 111.8G  0 part /mnt/ext  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mmcblk1      179:32   0   7.3G  0 disk   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mmcblk1boot0 179:64   0     4M  1 disk   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mmcblk1boot1 179:96   0     4M  1 disk   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;zram0        253:0    0    50M  0 disk /var/log  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;zram1        253:1    0 400.5M  0 disk [SWAP]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* mmcblk1是内置的EMMC存储  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;配置armbian&#34;&gt;配置Armbian&lt;/h4&gt;
&lt;p&gt;系统提供armbian-config工具, 功能很丰富, 多数设置可以在这里完成&lt;br&gt;
主要是修改网络配置, 配置时区、时间，配置语言什么的。&lt;/p&gt;
&lt;p&gt;网络似乎需要手动配置:&lt;br&gt;
先装vim&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# apt-get update  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# apt-get install vim  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 再装个ufw(防火墙工具)  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# apt-get install ufw  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;修改网卡配置文件-etcnetworkinterfaces&#34;&gt;修改网卡配置文件 /etc/network/interfaces&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iface eth0 inet static  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;address 192.168.1.2  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;netmask 255.255.255.0  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gateway 192.168.1.1  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dnsnameservers 192.168.1.1 8.8.8.8 8.8.4.4  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;在armbian上安装docker和portainer&#34;&gt;在Armbian上安装Docker和portainer&lt;/h3&gt;
&lt;h4 id=&#34;在armbian上安装docker&#34;&gt;在Armbian上安装Docker&lt;/h4&gt;
&lt;p&gt;参考官网安装说明: &lt;a class=&#34;link&#34; href=&#34;https://docs.docker.com/get-docker/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Get Docker&lt;/a&gt; -&amp;gt; &lt;a class=&#34;link&#34; href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Install Docker Engine on Ubuntu&lt;/a&gt;&lt;br&gt;
使用官方的shell安装，如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# curl -fsSL &lt;a class=&#34;link&#34; href=&#34;https://get.docker.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://get.docker.com&lt;/a&gt; -o get-docker.sh&lt;br&gt;
# sh get-docker.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装完成后, 用下面命令测试&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker run hello-world&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(另: 也可用armbian-config安装docker, 完成后用docker run hello-world测试,docker能正常工作, 但安装portainer-ce后不正常, 后换回用官方shell安装)&lt;/p&gt;
&lt;h4 id=&#34;在docker上安装portainer-用于docker管理&#34;&gt;在Docker上安装Portainer, 用于Docker管理&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 安装  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker pull portainer/portainer-ce  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 启动  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker volume create portainer_data  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后用浏览器打开http://armbian设备网址:9000, 就能看到portainer的管理界面&lt;br&gt;
在管理界面里进行初始配置。&lt;/p&gt;
&lt;h5 id=&#34;补充-忘记portainer密码后-如何修改portainer密码&#34;&gt;补充: 忘记Portainer密码后, 如何修改portainer密码&lt;/h5&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/A1999/p/15993682.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker管理工具Portainer忘记admin登录密码怎么办?&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;查看portainer的container-id&#34;&gt;查看Portainer的CONTAINER ID&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker ps -a  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CONTAINER ID   IMAGE                    COMMAND        CREATED      STATUS                  PORTS                                                                                            NAMES  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;30f1a2690e55   portainer/portainer-ce   &amp;#34;/portainer&amp;#34;   7 days ago   Up 7 hours              0.0.0.0:8000-&amp;gt;8000/tcp, :::8000-&amp;gt;8000/tcp, 0.0.0.0:9000-&amp;gt;9000/tcp, :::9000-&amp;gt;9000/tcp, 9443/tcp   portainer  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;看到portainer的CONTAINER ID为30f1a2690e55&lt;/p&gt;
&lt;h5 id=&#34;停止portainer容器参数为portainer的container-id&#34;&gt;停止Portainer容器(参数为portainer的CONTAINER ID)&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker stop 30f1a2690e55&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;重置密码-命令中-v后的参数portainer_datadata与启动时见前面docker-run用的一样&#34;&gt;重置密码: 命令中-v后的参数(portainer_data:/data)与启动时(见前面docker run)用的一样&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# docker run --rm -v portainer_data:/data portainer/helper-reset-password  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 第一次调用时, portainer/helper-reset-password会下载安装   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Unable to find image &amp;#39;portainer/helper-reset-password:latest&amp;#39; locally  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;latest: Pulling from portainer/helper-reset-password  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;79916c70cb9e: Pull complete  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;69e9153f20cb: Pull complete  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Digest: sha256:735a809b1bfe14b5fae340d4b350bae97c2016371c47fb6e34d71a45e4512f79  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Status: Downloaded newer image for portainer/helper-reset-password:latest  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WARNING: The requested image&amp;#39;s platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2022/07/24 05:17:47 Password succesfully updated for user: admin  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2022/07/24 05:17:47 Use the following password to login: 3&amp;lt;X$v+1PLx-Jj2pY4GBq79=5Us8R_n/\  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;需要记住这个密码.&lt;br&gt;
另: 在Portainer的web管理界面中, settings-&amp;gt;Authentication-&amp;gt;Password Rules, 可以修改密码强度(长度)&lt;br&gt;
注意: 在Docker中跑的Image需要和系统的Architectures一致, 比如R3300L需要选择ARM64 Architectures的image&lt;/p&gt;
&lt;h3 id=&#34;在docker上跑openwrt&#34;&gt;在Docker上跑openwrt&lt;/h3&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;http://jimway.blogspot.com/2021/04/openwrt-info.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;openwrt info&lt;/a&gt;&lt;br&gt;
相关信息:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://githubmemory.com/repo/unifreq/openwrt_packit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Flippy 的 Openwrt 打包源码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-958173-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Flippy的openwrt 4 docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hub.docker.com/r/unifreq/openwrt-aarch64&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Flippy的openwrt4docker源: unifreq/openwrt-aarch64&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;openwrt-for-docker下载flippy版本&#34;&gt;openwrt for docker下载(flippy版本):&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker pull unifreq/openwrt-aarch64&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;运行openwrt-for-docker注意这里并不需要设置网络&#34;&gt;运行openwrt for docker(注意:这里并不需要设置网络):&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;# 这里要使用固定ip地址(用&amp;ndash;ip参数设置), ip段看ifconfig中docker的网段, 地址放在较后位置,避免被占&lt;br&gt;
# 直接使用&amp;ndash;ip参数的方式, &lt;strong&gt;测试失败!&lt;/strong&gt;&lt;br&gt;
&lt;del&gt;# docker run &amp;ndash;restart always &amp;ndash;name openwrt -p 80:80 &amp;ndash;ip 172.17.0.199 -d &amp;ndash;privileged unifreq/openwrt-aarch64&lt;/del&gt;&lt;br&gt;
# 要先建立一个docker的静态network, 自定网段, 但不要与现有docker网段(172.17.0.0/16)冲突&lt;br&gt;
# docker network create &amp;ndash;subnet=192.168.188.0/24 staticnet&lt;br&gt;
# 建立docker network后, 可以使用docker network ls查看新建的network&lt;br&gt;
# 启动openwrt, 设置使用静态地址&lt;br&gt;
# docker run &amp;ndash;restart always &amp;ndash;name openwrt -p 80:80 &amp;ndash;net staticnet &amp;ndash;ip 192.168.188.188 -d &amp;ndash;privileged unifreq/openwrt-aarch64&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;另外还有使用macvlan的方法,如:&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/lisaac/blog/issues/4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;docker 中运行 openwrt: 利用 macvlan 方式创建虚拟接口进行配置&amp;rdquo;&lt;/a&gt;&lt;br&gt;
但macvlan方式要使用混杂模式, 搞得有点复杂的感觉, 所以放弃&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;配置openwrt-in-docker&#34;&gt;配置openwrt in Docker&lt;/h4&gt;
&lt;p&gt;先进入portainer查看openwrt运行的容器地址,这里是&lt;del&gt;172.17.0.3&lt;/del&gt; 192.168.188.188&lt;br&gt;
进入openwrt容器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker exec -it openwrt /bin/bash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;临时手动修改openwrt内部地址:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;docker# ifconfig br-lan 172.17.0.3 netmask 255.255.255.0&lt;/del&gt;&lt;br&gt;
docker# ifconfig br-lan 192.168.188.188 netmask 255.255.255.0&lt;br&gt;
# 设置网关&lt;br&gt;
&lt;del&gt;docker# route add default gw 172.17.0.1&lt;/del&gt;&lt;br&gt;
docker# route add default gw 192.168.188.1&lt;br&gt;
#修改完成后,查看状态&lt;br&gt;
&lt;del&gt;docker# wget http://172.17.0.3&lt;/del&gt;&lt;br&gt;
docker# wget http://192.168.188.188&lt;br&gt;
# 如果能看到回应表明容器内部运行正常&lt;br&gt;
docker# wget http://192.168.1.8&lt;br&gt;
# 上面地址是armbian网卡地址, 如果能看到回应, 表明容器端口映射出来也正常&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再在另一台windows机器上,用浏览器打开http://192.168.1.8,如果能看到openwrt界面,则手动设置成功.&lt;br&gt;
&lt;u&gt;再使用浏览器进入openwrt,设置网卡地址信息(设置为容器分配的地址)(手动设置完成后,下次重启又会回到最初状态, 需要用luci设置并保存配置)&lt;/u&gt;&lt;br&gt;
Openwrt的网络配置文件是/etc/config/network, 也许手动修改配置文件也可以.&lt;/p&gt;
&lt;h5 id=&#34;另-在docker版本的openwrt里同样可以用etccoremarksh获取设备性能数据&#34;&gt;另: 在Docker版本的openwrt里,同样可以用/etc/coremark.sh获取设备性能数据&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker# /etc/coremark.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于地址设定:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于docker的启动顺序不同，容器可能会在多次启动时获得不同的地址，所以需要使用static方式指定容器ip。&lt;/li&gt;
&lt;li&gt;还有一种方式，建立macvlan来做通讯，这样方式还需要主设备网卡打开混杂模式，比较麻烦。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经测试, openwrt可以在armbian系统重启后自动启动; 在openwrt容器里(docker exec -it openwrt bash进入)halt关机后, 也会自动重启.&lt;/p&gt;
&lt;h3 id=&#34;在armbian上安装其它服务&#34;&gt;在Armbian上安装其它服务&lt;/h3&gt;
&lt;h4 id=&#34;安装samba服务&#34;&gt;安装Samba服务&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 注: 不要用armbian-config安装, 安装后找不到/etc/init.d/smbd,  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 却多一个/etc/init.d/samba-ad-dc  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# apt-get udpate  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# samba是samba服务器, cifs-utils是Windows共享(可不装), sambaclient是samba客户端(也可不装)  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# apt-get install samba cifs-utils sambaclient  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;配置samba&#34;&gt;配置samba:&lt;/h5&gt;
&lt;p&gt;修改配置文件/etc/samba/smb.conf(最后的文件如下, 并确认可用_包括Win10/Es文件浏览器 on 安卓手机_&lt;u&gt;安卓手机上也会提示输入用户名密码&lt;/u&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[global]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        workgroup = WORKGROUP  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server string = %h server  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        hosts allow = 192.168.1.  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        log file = /var/log/samba/log.%m  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        max log size = 1000  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        syslog = 0  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        panic action = /usr/share/samba/panic-action %d  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        load printers = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        printing = cups  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        printcap name = cups  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        min receivefile size = 16384  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        write cache size = 524288  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        getwd cache = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        socket options = TCP_NODELAY IPTOS_LOWDELAY  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[printers]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        comment = All Printers  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        path = /var/spool/samba  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        browseable = no  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        public = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        guest ok = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        writable = no  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        printable = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        printer admin = XXXXXXX  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[print$]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        comment = Printer Drivers  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        path = /etc/samba/drivers  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        browseable = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        guest ok = no  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        read only = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        write list = XXXXXXX  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Share]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        comment = Share_AmlR3300l  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        path = /mnt/ext/share  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        writable = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        public = no  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        valid users = XXXXXXX  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        force create mode = 0644  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 用smbpasswd设置用户密码
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# * 先用adduser增加smb用户同名linux系统用户  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# * 再用smbpasswd -a增加smb用户, 并设置用户密码
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# smbpasswd -a XXXXXXX  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;u&gt;注: 找不到smbpasswd文件, 但samba用户是可用的&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;重启samba后生效&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service smbd restart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;u&gt;注: 在测试中, (老MacBook笔记本连无线桥接路由wifi)用samba方式往R3300L(网线连接到主路由)上拷大文件(8G不到)出现了死机现象,表现为SecureCrt上操作无反应,直接在R3300L上操作也差不多.&lt;/u&gt;&lt;br&gt;
&lt;u&gt;后来用SecureCrt上sftp方式向R3300L拷贝同样的大文件, 显示传输速率只有450KB/s(上传)/1700KB/s(下载)&lt;/u&gt;&lt;br&gt;
不能确定瓶颈在哪:&lt;br&gt;
网络测试过(xWin下用Arora浏览器访问speedtest), 差不多能到百兆;&lt;br&gt;
tf卡读写速度也测过(hdparm -T), 读能到750MB/sec以上, 写也能到20MB/sec以上&lt;br&gt;
&lt;strong&gt;大文件可能只能用U盘拷了!&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;R3300L这盒子硬件和Q7差不多, 同样也是有缺陷的.&lt;/u&gt;&lt;br&gt;
&lt;u&gt;另: 用Redmi K30手机连samba服务器, (使用同样的无线桥接路由器的wifi)上传能到1.5MB/s以上, 下载能到接近5MB/s&lt;/u&gt;&lt;/p&gt;
&lt;h4 id=&#34;为scanner增加一个共享-添加独立的用户-并分配相应的权限&#34;&gt;为scanner增加一个共享, 添加独立的用户, 并分配相应的权限&lt;/h4&gt;
&lt;p&gt;操作:&lt;/p&gt;
&lt;h5 id=&#34;增加共享scannershare&#34;&gt;增加共享ScannerShare&lt;/h5&gt;
&lt;p&gt;在原/etc/samba/smb.conf最后增加:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[ScannerShare]  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        comment = ScannerShare_AmlR3300l  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        path = /mnt/ext/scannershare  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        guest ok = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        writable = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        public = yes  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        valid users = XXXXXXX, scanner  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        force create mode = 0644  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;相应的增加共享目录mntextscannershare&#34;&gt;相应的增加共享目录/mnt/ext/scannershare&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;# mkdir /mnt/ext/scannershare&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;增加samba用户scanner&#34;&gt;增加(samba)用户scanner&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# useradd scanner  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# smbpasswd -a scanner  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# (设置密码)  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# vim /etc/passwd  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# (把scanner设置为nologin)  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;为scannershare设置有效用户&#34;&gt;为ScannerShare设置有效用户&lt;/h5&gt;
&lt;p&gt;已设置valid users&lt;/p&gt;
&lt;h5 id=&#34;设置完成-重启samba服务&#34;&gt;设置完成, 重启samba服务&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;# service smbd restart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;安装minidlna服务&#34;&gt;安装miniDLNA服务&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;# apt-get udpate&lt;br&gt;
# apt-get install minidlna&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;配置minidlna&#34;&gt;配置miniDLNA:&lt;/h5&gt;
&lt;p&gt;修改配置文件/etc/minidlna.conf中的媒体目录, 如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;media_dir=/mnt/ext/share/media&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;重启miniDLNA后生效&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service minidlna restart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注: 当前miniDLNA版本为1.2.1, 缺省不支持rmvb格式文件, 需要修改源代码并重新编译, 参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/JOYIST/article/details/79191765&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MiniDLNA 1.2.1编译 添加对rmvb格式的支持&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;在armbian上安装配置hugo服务器&#34;&gt;在Armbian上安装配置Hugo(?)服务器&lt;/h3&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/126298572&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何用hugo 搭建博客&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;完整安装说明: &lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/%E5%9C%A8r3300l%E7%B1%BB-armbian%E4%B8%8A%E5%AE%89%E8%A3%85hugo%E6%9C%8D%E5%8A%A1%E5%99%A8/&#34; &gt;在R3300L类+Armbian上安装Hugo服务器&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
Armbian(ubuntu on Arm)所用apt下载的hugo版本较低(ubuntu的惯例?), &lt;a class=&#34;link&#34; href=&#34;https://link.zhihu.com/?target=https%3A//themes.gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo博客的主题&lt;/a&gt;中的&lt;a class=&#34;link&#34; href=&#34;https://link.zhihu.com/?target=https%3A//themes.gohugo.io/hugo-theme-bootstrap4-blog/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;bootstrap4-blog 主题&lt;/a&gt;就不支持, 所以需要下载&lt;a class=&#34;link&#34; href=&#34;https://link.zhihu.com/?target=https%3A//github.com/gohugoio/hugo/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo 的github 仓库&lt;/a&gt;中的最新deb包, 使用dpkg命令进行安装.&lt;br&gt;
R3300l所用Amlogic S905L支持arm64, 所装的Armbian应该是64位的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# uname -a&lt;br&gt;
Linux AmlR3300l 5.3.0-aml-g12 #5.97 SMP PREEMPT Mon Sep 23 14:33:30 MSK 2019 aarch64 aarch64 aarch64 GNU/Linux&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以应该选用64位版本的Hugo, 当前最新版本为&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo/releases/download/v0.82.1/hugo_0.82.1_Linux-ARM64.deb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo_0.82.1_Linux-ARM64.deb&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 下载hugo官方包  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# wget https://github.com/gohugoio/hugo/releases/download/v0.82.1/hugo_0.82.1_Linux-ARM64.deb  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 使用dpkg安装已下载的hugo的deb包  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# dpkg -i hugo_0.82.1_Linux-ARM64.deb  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 查看hugo版本, 以检测安装hugo是否成功  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# hugo version  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo v0.82.1-60618210 linux/arm64 BuildDate=2021-04-20T11:02:50Z VendorInfo=gohugoio  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 建立hugo博客的根目录(应该可以放多个博客)  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# mkdir /mnt/ext/hugo  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 进入这个目录  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cd /mnt/ext/hugo  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 新建一个博客(目录)  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# hugo new site blog  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 进入博客目录  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cd blog  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 下载[bootstrap4-blog 主题](https://link.zhihu.com/?target=https%3A//themes.gohugo.io/hugo-theme-bootstrap4-blog/)到这个博客目录  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# git clone https://github.com/alanorth/hugo-theme-bootstrap4-blog.git themes/hugo-theme-bootstrap4-blog  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 将exampleSite 目录中的内容，复制到博客根目录blog中，在blog目录中执行命令：  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cp themes/hugo-theme-bootstrap4-blog/exampleSite/* ./ -r  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 启动hugo服务: 绑定到eth0地址, 根url是eth0地址:1313端口  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# hugo server --bind 192.168.1.8 --baseURL=http://192.168.1.8:1313  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以从另一机器上的浏览器访问http://192.168.1.8:1313, 应该可以看到初始的网页.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;初步的安装完成, 后面看下怎么使用.&lt;/u&gt;&lt;/p&gt;
&lt;h2 id=&#34;其它&#34;&gt;其它&lt;/h2&gt;
&lt;h3 id=&#34;取eth0网卡地址&#34;&gt;取eth0网卡地址&lt;/h3&gt;
&lt;p&gt;From &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/xuezhangjun0121/article/details/83150019&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SHELL - shell 脚本获取本机ip并将ip复制给变量待用&lt;/a&gt; + &lt;a class=&#34;link&#34; href=&#34;https://bbs.huaweicloud.com/blogs/227483&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;shell脚本之通过脚本获取本机IP地址&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ifconfig eth0|grep inet|grep -v 127.0.0.1|grep -v inet6|awk &amp;lsquo;{print $2}&amp;rsquo;|tr -d &amp;ldquo;addr:&amp;rdquo;&lt;br&gt;
192.168.1.8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以简化为:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ifconfig eth0|grep inet|grep -v inet6|awk &amp;lsquo;{print $2}&amp;rsquo;|tr -d &amp;ldquo;addr:&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Openwrt相关资源</title>
        <link>https://jimway71.github.io/p/openwrt%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/</link>
        <pubDate>Fri, 09 Apr 2021 08:56:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/openwrt%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-36.jpg" alt="Featured image of post Openwrt相关资源" /&gt;&lt;h1 id=&#34;openwrt&#34;&gt;OpenWrt&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;a Linux operating system targeting embedded devices&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenWrt&lt;/a&gt; OpenWrt官方代码网站&lt;/p&gt;
&lt;h2 id=&#34;openwrt-1&#34;&gt;OpenWrt&lt;/h2&gt;
&lt;h3 id=&#34;资源&#34;&gt;资源&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://git.openwrt.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenWrt GIT&lt;/a&gt; OpenWrt官方代码仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;openwrt-for-tv-boxes&#34;&gt;OpenWrt for TV Boxes&lt;/h2&gt;
&lt;h3 id=&#34;资源-1&#34;&gt;资源&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenWrt for Amlogic TV Boxes&lt;/a&gt; Github上为Amlogic电视盒子写的OpenWrt系统&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Armbian for Amlogic and Rockchip&lt;/a&gt; Github上为Amlogic和Rockchip写的Armbian系统&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ophub/luci-app-amlogic&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;luci-app-amlogic / Amlogic Service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;openwrt-for-docker&#34;&gt;Openwrt for Docker&lt;/h2&gt;
&lt;h3 id=&#34;资源-2&#34;&gt;资源&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://githubmemory.com/repo/unifreq/openwrt_packit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Flippy 的 Openwrt 打包源码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-958173-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Flippy的openwrt 4 docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hub.docker.com/r/unifreq/openwrt-aarch64&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Flippy的openwrt4docker源: unifreq/openwrt-aarch64&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;运行&#34;&gt;运行&lt;/h3&gt;
&lt;h4 id=&#34;openwrt在docker下运行&#34;&gt;Openwrt在Docker下运行&lt;/h4&gt;
&lt;p&gt;执行命令:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# docker run --restart always --name openwrt -p 80:80 -d --privileged unifreq/openwrt-aarch64&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>在Openwrt上建立Docker环境</title>
        <link>https://jimway71.github.io/p/%E5%9C%A8openwrt%E4%B8%8A%E5%BB%BA%E7%AB%8Bdocker%E7%8E%AF%E5%A2%83/</link>
        <pubDate>Tue, 06 Apr 2021 18:06:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E5%9C%A8openwrt%E4%B8%8A%E5%BB%BA%E7%AB%8Bdocker%E7%8E%AF%E5%A2%83/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-30.jpg" alt="Featured image of post 在Openwrt上建立Docker环境" /&gt;&lt;h2 id=&#34;说明&#34;&gt;说明&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;恩山论坛&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;推出的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4076037-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;55+、55+O S905x3、S922x、贝壳云、我家云、微加云等OP固件&amp;rdquo;&lt;/a&gt;内置了Docker CE容器(服务-Docker CE容器), 但Docker并不(缺省)可用.&lt;br&gt;
在Docker CE容器主页面下, 提供了内置的&amp;quot;Docker 初始化无脑配置教程&amp;quot;链接(一个PDF文件), 按照教程说明, 可以简单的把Docker环境搭建完成.&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Docker 初始化无脑配置教程&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境说明&#34;&gt;环境说明&lt;/h2&gt;
&lt;p&gt;在TF卡里装了&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4076037-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OP固件&lt;/a&gt;, 用这张TF卡插在联通(数码视讯)Q7盒子(以下简称Q7)里启动, op可以正常运行.&lt;br&gt;
TF卡中只用不到1G空间被op系统占用, 剩下的分成了一个exfat的主分区.&lt;/p&gt;
&lt;h2 id=&#34;操作步骤&#34;&gt;操作步骤&lt;/h2&gt;
&lt;p&gt;操作步骤大致按照&amp;quot;Docker 初始化无脑配置教程&amp;quot;, 但略有些不同.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;给Docker分配存储空间&lt;br&gt;
由于原来剩余空间都给了exfat主分区, 所以只能重新分配空间.&lt;br&gt;
本想通过调整分区大小来分出部分空间给Docker, 但试了Win10的&amp;quot;硬盘管理&amp;quot;+&amp;ldquo;分区助专业版&amp;rdquo;, 发现都不能把exfat分区的空间调小, 所以只能重新分配空间.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先备份exfat分区文件&lt;/li&gt;
&lt;li&gt;TF卡重新分区&lt;br&gt;
把TF卡插回Q7的TF卡槽, tf卡启动Q7后, 用SecureCRT登录进去:
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用fdisk命令删除原exfat分区&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用fdisk重分两个分区, 一个exfat分区, 一个ext4分区.&lt;br&gt;
考虑到Docker可能不会占用多少空间, 给ext4分了10G的空间.&lt;br&gt;
(exfat分区的类型代码是7)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;格式化(mkfs命令)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 格式化exfat分区&lt;br&gt;
# mkfs.exfat /dev/sda3&lt;br&gt;
# 格式化ext4分区&lt;br&gt;
# mkfs.ext4 /dev/sda4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意: 如果分区已经mount上就不能格式化, 会显示格式化失败信息.&lt;br&gt;
这种情况需要umount, 如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# umount /dev/sda3&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-02.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;相应的教程内容, 执行的shell功能就是分区&amp;#43;格式化&#34;
	
	
&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;↑ 相应的教程内容, 执行的shell功能就是分区+格式化&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;挂载(mount)新分区&lt;br&gt;
把新的ext4分区挂载(mount)到/opt下, 做为Docker的空间.&lt;br&gt;
与mount有关的配置文件有/etc/mtab + /etc/fstab, /etc/fstab是启动时的挂载配置文件.&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-03.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;相应的教程内容, 实现新分区挂载到/opt&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-04.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;相应的教程内容, 实现新分区挂载到/opt&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-05.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;相应的教程内容, 实现新分区挂载到/opt&#34;
	
	
&gt;&lt;br&gt;
↑ 相应的教程内容, 实现新分区挂载到/opt&lt;br&gt;
按教程操作完成挂载后, 查看/etc/fstab文件, 并没有看到/opt的挂载信息, 不清楚具体是在哪里配置的.&lt;br&gt;
用mount命令查看, 可以看到已经挂载到/opt下了&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-06.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;分区挂载状态&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;把备份的exfat分区文件恢复回去.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确认Docker的配置文件&lt;br&gt;
修改/etc/docker/daemon.json, 把data-root改为/opt/docker/&lt;br&gt;
说明见文后的问题①&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Docker管理系统&lt;br&gt;
/etc/docker-web是一个shell, 内容如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# cat /etc/docker-web&lt;br&gt;
#!/bin/sh&lt;br&gt;
docker run -d &amp;ndash;restart=always &amp;ndash;name=&amp;ldquo;portainer&amp;rdquo; -p 9999:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;docker-web是用来安装docker的web管理系统, 执行前需要先确认下docker是否已启动, 如果没有启动, docker-web的安装会失败, 如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ./docker-web&lt;br&gt;
docker: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?.&lt;br&gt;
See &amp;lsquo;docker run &amp;ndash;help&amp;rsquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用service命令确认docker运行状态&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service dockerd status&lt;br&gt;
inactive&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果发现docker未启动, 则先启动docker&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service dockerd start&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再次确认docker运行状态&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service dockerd status&lt;br&gt;
running&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;确认docker运行后, 可以执行docker-web进行安装&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ./docker-web&lt;br&gt;
Unable to find image &amp;lsquo;portainer/portainer-ce:latest&amp;rsquo; locally&lt;br&gt;
latest: Pulling from portainer/portainer-ce&lt;br&gt;
84cfa456b2b1: Pull complete&lt;br&gt;
39d56ef0881a: Pull complete&lt;br&gt;
16a45878c700: Pull complete&lt;br&gt;
Digest:&lt;br&gt;
Status: Downloaded newer image for portainer/portainer-ce:latest&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入Docker管理界面&lt;br&gt;
在浏览器里输入Q7的ip地址:9999, 设置管理员密码, 选择local进入本地管理界面&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-07.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Docker管理界面&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/30-q7-08.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Docker管理界面&#34;
	
	
&gt;&lt;br&gt;
点鲸鱼图标即可管理本地的docker&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;① Docker的配置文件有问题, 需要修改&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cat /etc/docker/daemon.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;bip&amp;#34;: &amp;#34;172.31.0.1/24&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;data-root&amp;#34;: &amp;#34;/mnt/mmcblk2p4/docker/&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;log-level&amp;#34;: &amp;#34;warn&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;log-opts&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &amp;#34;max-size&amp;#34;: &amp;#34;10m&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &amp;#34;max-file&amp;#34;: &amp;#34;5&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &amp;#34;registry-mirrors&amp;#34;: [
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &amp;#34;https://dockerhub.azk8s.cn&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中data-root所指/mnt/mmcblk2p4不存在, 由于给docker分配的空间是/opt, 因此考虑把data-root所指目录改到/opt/docker/下&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Q&amp;A</title>
        <link>https://jimway71.github.io/p/qa/</link>
        <pubDate>Sat, 03 Apr 2021 22:57:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/qa/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-29.jpg" alt="Featured image of post Q&amp;A" /&gt;&lt;h2 id=&#34;问题-旧版securecrt不能连接新版本的sshd服务器&#34;&gt;问题: 旧版SecureCrt不能连接新版本的sshd服务器&lt;/h2&gt;
&lt;p&gt;报错如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Key exchange failed. No compatible key exchange method. The server supports these methods: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原因分析:&lt;br&gt;
旧版SecureCrt(版本号6.7.0 (build 153))支持的密钥交换(Key exchange)为以下5种:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kerberos&lt;/li&gt;
&lt;li&gt;Kerberos(Group Exchange)&lt;/li&gt;
&lt;li&gt;Diffie-hellman-group14&lt;/li&gt;
&lt;li&gt;Diffie-hellman-group&lt;/li&gt;
&lt;li&gt;Diffie-hellman&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这5种均不被新的sshd支持, 当前sshd版本信息为:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OpenSSH_8.3p1, OpenSSL 1.1.1j  16 Feb 2021&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;处理方式:&lt;br&gt;
修改/etc/ssh/sshd_config文件, 添加(我是在文件最后添加):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;KexAlgorithms diffie-hellman-group14-sha1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后重启sshd:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#service sshd restart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即可。&lt;br&gt;
(看参考的文档, 说的是添加:&lt;br&gt;
KexAlgorithms &lt;a class=&#34;link&#34; href=&#34;mailto:curve25519-sha256@libssh.org&#34; &gt;curve25519-sha256@libssh.org&lt;/a&gt;,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1&lt;br&gt;
其实添加一种SecureCrt支持的方式就可以了)&lt;br&gt;
参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/duanbiren123/article/details/103034914&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;升级ssh后续问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.tomato.cm/179.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用SecureCRT连接Ubuntu20.04报错：Key exchange failed. No compatible key exchange method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/shenjianyu/p/6407042.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;升级openssh带来的问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;更新:&lt;/strong&gt;&lt;br&gt;
可以改用基于&lt;a class=&#34;link&#34; href=&#34;file:///C:/Users/jimway/AppData/Local/Temp/Mxt220/tmp/licenses/EulaHOME.html&#34; &gt;MobaXterm license&lt;/a&gt;许可的&lt;a class=&#34;link&#34; href=&#34;https://mobaxterm.mobatek.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MobaXterm&lt;/a&gt;, 不再有这种问题。&lt;/p&gt;
&lt;h2 id=&#34;问题-在openwrt上新建一个可用的samba用户&#34;&gt;问题: 在openwrt上新建一个可用的samba用户&lt;/h2&gt;
&lt;p&gt;需要解决的问题:&lt;br&gt;
需要新增一个samba用户, 而samba用户是与同名系统用户关联的, 所以需要先建立一个同名的系统用户.&lt;br&gt;
但是, 当前Openwrt的底层系统里没有useradd或者adduser命令, 用opkg update更新后, 搜索可用的包里也没找到相关的包, 包括有人提到的shadow-useradd或者类似的命令, 所以, 不能用命令添加一个用户&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;那, 就先手动来新增一个用户&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修改/etc/passwd文件, 增加新用户信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/passwd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;增加一行:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;newuser:x:66666:66666:newuser:/home/newuser:/bin/ash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明:&lt;br&gt;
newuser是用户名, /home/newuser就是newuser用户的根目录了.&lt;br&gt;
66666是用户ID, 要注意在整个passwd文件是应该是唯一的.&lt;br&gt;
/bin/ash是shell, 是从root用户那行抄来的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改/etc/group文件, 增加新用户的组信息: 组名和用户名一般都是相同的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/group&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;增加一行:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;newuser:x:66666:newuser&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明:&lt;br&gt;
组名和用户名相同&lt;br&gt;
组ID号和用户ID号也相同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立新用户根目录, 并设置属主/组&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# mkdir /home/newuser&lt;br&gt;
# chown newuser /home/newuser&lt;br&gt;
# chgrp newuser /home/newuser&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;给新用户设置密码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# passwd newuser&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;该设置samba用户了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;给samba新用户设置密码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;# smbpasswd newuser&lt;/del&gt;&lt;br&gt;
&lt;del&gt;&amp;hellip;&amp;hellip;&lt;/del&gt;&lt;br&gt;
&lt;del&gt;Failed to find entry for user newuser.&lt;/del&gt;&lt;br&gt;
# smbpasswd -a newuser&lt;br&gt;
&amp;hellip;&amp;hellip;&lt;br&gt;
Added user newuser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使samba新用户可用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# smbpasswd -e newuser&lt;br&gt;
Enabled user newuser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;问题-在openwrt上设置samba服务器-windowswin10es文件浏览器都可以通过网络访问&#34;&gt;问题: 在openwrt上设置samba服务器, Windows/Win10/Es文件浏览器都可以通过网络访问.&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;环境说明:&lt;/strong&gt;&lt;br&gt;
用S905L的盒子装了个openwrt, 装在TF卡上, 用TF卡启动.&lt;br&gt;
TF卡上除了装op系统的大概1G空间外, 剩下的空间分区并格式化为exfat格式, op启动时会自动加载这个exfat分区, 使用samba(web上在网络存储-网络共享)共享出来可供局域网内设备访问.&lt;br&gt;
Win10当前版本缺省不支持SMB 1.0/CIFS, 为了访问低版本的samba设备, 已通过&amp;quot;启用或关闭Windows功能&amp;quot;打开&amp;quot;SMB 1.0/CIFS文件共享支持&amp;quot;+&amp;ldquo;SMB Direct&amp;rdquo;, 需要能让这种设备访问盒子上的samba服务器 - 其实这并不是一个问题, 当前版本的samba(V4.11.6)早已支持新版本的samba协议.&lt;br&gt;
安卓手机app&amp;quot;Es文件管理器&amp;quot;也需要在局域网内能访问同一个samba服务器.&lt;br&gt;
&lt;strong&gt;问题详述:&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;问题1. linux上的samba服务器与Windows的Samba服务器是有区别的&lt;/u&gt;&lt;br&gt;
Windows的samba服务器被访问时, 如果需要用户登录, 会在开始连接时就要求登录.&lt;br&gt;
而Linux的samba服务器被访问时, 只有当访问到&amp;quot;共享目录&amp;quot;时, 才会问到登录信息.&lt;br&gt;
&lt;u&gt;问题2. 当前版本的Win10在访问samba服务时, 已经不支匿名访问, 只能修改注册表信息来支持&lt;/u&gt;&lt;br&gt;
这个操作比较麻烦, 不考虑&lt;br&gt;
测试中发现, 当一个samba服务器里只要存在任何一个可以匿名访问的文件共享, Win10就无法访问整个Samba服务器, 因此要求samba服务器中的任何共享都是非匿名访问的.&lt;br&gt;
&lt;u&gt;问题3 Es文件管理器App访问linux上的Samba服务器时, 缺省是以匿名方式访问&lt;/u&gt;&lt;br&gt;
不会主动弹出登录信息窗口, 即使无法打开一个需要登录的共享时, 也不会主动弹出.&lt;br&gt;
这就需要手动设置Es的登录信息.&lt;br&gt;
这个问题和问题1有相关性.&lt;br&gt;
&lt;strong&gt;其他&lt;/strong&gt;&lt;br&gt;
由于exfat是微软的文件格式, 没有用户权限信息, 避开了linux复杂的权限问题, 因此选择使用这种文件格式&lt;br&gt;
&lt;strong&gt;结论:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;op上的samba共享都需要设置成用户登录访问&lt;/li&gt;
&lt;li&gt;Es访问时需要手动设置用户登录信息.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Samba服务器的设置如下&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;配置文件&lt;br&gt;
op上luci的缺省配置文件如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[global]&lt;br&gt;
netbios name = |NAME|&lt;br&gt;
interfaces = |INTERFACES|&lt;br&gt;
server string = |DESCRIPTION|&lt;br&gt;
unix charset = |CHARSET|&lt;br&gt;
workgroup = |WORKGROUP|&lt;/p&gt;
&lt;p&gt;## This global parameter allows the Samba admin to limit what interfaces on a machine will serve SMB requests.&lt;br&gt;
bind interfaces only = yes&lt;/p&gt;
&lt;p&gt;## time for inactive connections to-be closed in minutes&lt;br&gt;
deadtime = 15&lt;/p&gt;
&lt;p&gt;## disable core dumps&lt;br&gt;
enable core files = no&lt;/p&gt;
&lt;p&gt;## set security (auto, user, domain, ads)&lt;br&gt;
security = user&lt;/p&gt;
&lt;p&gt;## This parameter controls whether a remote client is allowed or required to use SMB encryption.&lt;br&gt;
## It has different effects depending on whether the connection uses SMB1 or SMB2 and newer:&lt;br&gt;
## If the connection uses SMB1, then this option controls the use of a Samba-specific extension to the SMB protocol introduced in Samba 3.2 that makes   use of the Unix extensions.
server min protocol = NT1&lt;br&gt;
client min protocol = NT1&lt;br&gt;
## If the connection uses SMB2 or newer, then this option controls the use of the SMB-level encryption that is supported in SMB version 3.0 and above and available in Windows 8 and newer.&lt;br&gt;
## (default/auto,desired,required,off)&lt;br&gt;
#smb encrypt = default&lt;/p&gt;
&lt;p&gt;## set invalid users&lt;br&gt;
invalid users = root&lt;/p&gt;
&lt;p&gt;## map unknow users to guest&lt;br&gt;
map to guest = Bad User&lt;/p&gt;
&lt;p&gt;## allow client access to accounts that have null passwords.&lt;br&gt;
null passwords = yes&lt;/p&gt;
&lt;p&gt;## The old plaintext passdb backend. Some Samba features will not work if this passdb backend is used. (NOTE: enabled for size reasons)&lt;br&gt;
## (tdbsam,smbpasswd,ldapsam)&lt;br&gt;
passdb backend = smbpasswd&lt;/p&gt;
&lt;p&gt;## Set location of smbpasswd (&amp;lsquo;smbd -b&amp;rsquo; will show default compiled location)&lt;br&gt;
#smb passwd file = /etc/samba/smbpasswd&lt;/p&gt;
&lt;p&gt;## LAN/WAN options (IPTOS_LOWDELAY TCP_NODELAY) WAN (IPTOS_THROUGHPUT)&lt;br&gt;
socket options = IPTOS_LOWDELAY TCP_NODELAY&lt;/p&gt;
&lt;p&gt;## If this integer parameter is set to a non-zero value, Samba will read from files asynchronously when the request size is bigger than this value.&lt;br&gt;
## Note that it happens only for non-chained and non-chaining reads and when not using write cache.&lt;br&gt;
## The only reasonable values for this parameter are 0 (no async I/O) and 1 (always do async I/O).&lt;br&gt;
## (1/0)&lt;br&gt;
#aio read size = 0&lt;br&gt;
#aio write size = 0&lt;/p&gt;
&lt;p&gt;## If Samba has been built with asynchronous I/O support, Samba will not wait until write requests are finished before returning the result to the client for files listed in this parameter.&lt;br&gt;
## Instead, Samba will immediately return that the write request has been finished successfully, no matter if the operation will succeed or not.&lt;br&gt;
## This might speed up clients without aio support, but is really dangerous, because data could be lost and files could be damaged.&lt;br&gt;
#aio write behind = /*.tmp/&lt;/p&gt;
&lt;p&gt;## lower CPU useage if supported and aio is disabled (aio read size = 0 ; aio write size = 0)&lt;br&gt;
## currently broken (NOTE: see &lt;a class=&#34;link&#34; href=&#34;https://bugzilla.samba.org/show_bug.cgi?id=14095&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugzilla.samba.org/show_bug.cgi?id=14095&lt;/a&gt; )&lt;br&gt;
## (no, yes)&lt;br&gt;
#use sendfile = yes&lt;/p&gt;
&lt;p&gt;## samba will behave as previous versions of Samba would and will fail the lock request immediately if the lock range cannot be obtained.&lt;br&gt;
#blocking locks = No&lt;/p&gt;
&lt;p&gt;## disable loading of all printcap printers by default (iprint, cups, lpstat)&lt;br&gt;
load printers = No&lt;br&gt;
printcap name = /dev/null&lt;/p&gt;
&lt;p&gt;## Enabling this parameter will disable Samba&amp;rsquo;s support for the SPOOLSS set of MS-RPC&amp;rsquo;s.&lt;br&gt;
disable spoolss = yes&lt;/p&gt;
&lt;p&gt;## This parameters controls how printer status information is interpreted on your system.&lt;br&gt;
## (BSD, AIX, LPRNG, PLP, SYSV, HPUX, QNX, SOFTQ)&lt;br&gt;
printing = bsd&lt;/p&gt;
&lt;p&gt;## Disable that nmbd is acting as a WINS server for unknow netbios names&lt;br&gt;
#dns proxy = No&lt;/p&gt;
&lt;p&gt;## win/unix user mapping backend&lt;br&gt;
#idmap config * : backend = tdb&lt;/p&gt;
&lt;p&gt;## Allows the server name that is advertised through MDNS to be set to the hostname rather than the Samba NETBIOS name.&lt;br&gt;
## This allows an administrator to make Samba registered MDNS records match the case of the hostname rather than being in all capitals.&lt;br&gt;
## (netbios, mdns)&lt;br&gt;
mdns name = mdns&lt;/p&gt;
&lt;p&gt;## Clients that only support netbios won&amp;rsquo;t be able to see your samba server when netbios support is disabled.&lt;br&gt;
#disable netbios = Yes&lt;/p&gt;
&lt;p&gt;## Setting this value to no will cause nmbd never to become a local master browser.&lt;br&gt;
#local master = no&lt;/p&gt;
&lt;p&gt;## (auto, yes) If this is set to yes, on startup, nmbd will force an election, and it will have a slight advantage in winning the election. It is recommended that this parameter is used in conjunction with domain master = yes, so that nmbd can guarantee becoming a domain master.&lt;br&gt;
#preferred master = yes&lt;/p&gt;
&lt;p&gt;## (445 139) Specifies which ports the server should listen on for SMB traffic.&lt;br&gt;
## 139 is netbios/nmbd&lt;br&gt;
#smb ports = 445 139&lt;/p&gt;
&lt;p&gt;## This is a list of files and directories that are neither visible nor accessible.&lt;br&gt;
## Each entry in the list must be separated by a &amp;lsquo;/&amp;rsquo;, which allows spaces to be included in the entry. &amp;lsquo;*&amp;rsquo; and &amp;lsquo;?&amp;rsquo; can be used to specify multiple files or directories as in DOS wildcards.&lt;br&gt;
veto files = /Thumbs.db/.DS_Store/._.DS_Store/.apdisk/&lt;/p&gt;
&lt;p&gt;## If a directory that is to be deleted contains nothing but veto files this deletion will fail unless you also set the delete veto files parameter to   yes.&lt;br&gt;
delete veto files = yes&lt;/p&gt;
&lt;p&gt;################ Filesystem and creation rules ################&lt;br&gt;
## reported filesystem type (NTFS,Samba,FAT)&lt;br&gt;
#fstype = FAT&lt;/p&gt;
&lt;p&gt;## Allows a user who has write access to the file (by whatever means, including an ACL permission) to modify the permissions (including ACL) on it.&lt;br&gt;
#dos filemode = Yes&lt;/p&gt;
&lt;p&gt;## file/dir creating rules&lt;br&gt;
#create mask = 0666&lt;br&gt;
#directory mask = 0777&lt;br&gt;
#force group = root&lt;br&gt;
#force user = root&lt;br&gt;
#inherit owner = windows and unix&lt;br&gt;
################################################################&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个配置文件只需要屏蔽 invalid users = root 这一句, 如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#invalid users = root&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置samba用户&lt;br&gt;
使用&amp;quot;&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/qa/#%E9%97%AE%E9%A2%98-%E5%9C%A8openwrt%E4%B8%8A%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8F%AF%E7%94%A8%E7%9A%84samba%E7%94%A8%E6%88%B7&#34; &gt;在openwrt上新建一个可用的samba用户&lt;/a&gt;&amp;ldquo;的方法建立用户&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置共享目录(补记: 可能是在Luci的界面里)&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/29-qa-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;设置共享目录&#34;
	
	
&gt;&lt;br&gt;
按上图方式设置共享目录, 允许用户是刚才设置的smb用户.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问&lt;br&gt;
Win10正常访问.&lt;br&gt;
Es文件浏览器App在局域网里设置相应服务器的登录信息后就可以正常访问.&lt;br&gt;
读写都没有问题.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;emuelec2020春节整合版s905-被百毒封了&#34;&gt;EmuELEC2020春节整合版(s905) 被百毒封了&lt;/h2&gt;
&lt;p&gt;EmuELEC 3.3.1 2020春节整合版详细说明: &lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/read/cv4420521/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.bilibili.com/read/cv4420521/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;下载地址：&lt;/u&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cloud.189.cn/t/F7JfYbF7VnU&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;EmuELEC2020春节整合版(s905) 被百毒封了&lt;/a&gt;  (访问码:nlp7) -&amp;gt; 已经转&lt;a class=&#34;link&#34; href=&#34;https://cloud.189.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;天翼云&lt;/a&gt; 需要的请下载&lt;a class=&#34;link&#34; href=&#34;https://space.bilibili.com/97745521&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;@人中日月&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;基础包链接：&lt;a class=&#34;link&#34; href=&#34;https://pan.baidu.com/s/1s03OQf60qQCmH8dejykplw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pan.baidu.com/s/1s03OQf60qQCmH8dejykplw&lt;/a&gt; 提取码：g13u&lt;br&gt;
(三个增补包，分别是街机改版、ATOMISWAVE和NAOMI的整合包，需要自己另外根据EMUELEC使用指南里面的方法传到系统里。)&lt;/li&gt;
&lt;li&gt;增量包链接：&lt;a class=&#34;link&#34; href=&#34;https://pan.baidu.com/s/17xkfIu-Wg1CzKAq9sGrXIw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pan.baidu.com/s/17xkfIu-Wg1CzKAq9sGrXIw&lt;/a&gt; 提取码：zkdr&lt;/li&gt;
&lt;li&gt;斐讯N1补丁包链接：&lt;a class=&#34;link&#34; href=&#34;https://pan.baidu.com/s/1RaNq2VaWiPvxX-4q2cjs1A&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pan.baidu.com/s/1RaNq2VaWiPvxX-4q2cjs1A&lt;/a&gt; 提取码：pty4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外, 还有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vol4增量包, 应该是FBN街机的&lt;/li&gt;
&lt;li&gt;3.4版的更新包,更新emuelec到3.4&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;问题-openwrt的history只能看到当前连接的命令记录&#34;&gt;问题: openwrt的history只能看到当前连接的命令记录&lt;/h2&gt;
&lt;p&gt;原因: op缺省使用的是ash, 这个轻量化的shell就是这样，除非改用别的shell, 比如bash&lt;br&gt;
处理:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安装bash&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# opkg update &amp;amp; opkg install bash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置用户使用bash&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/passwd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改相应用户的shell为bash，并保存退出。&lt;br&gt;
登出并重新登录后新的shell生效&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# echo $SHELL&lt;br&gt;
/bin/bash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看history&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# history&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应该能看到记录，登出再进，可以看到文件～/.bash_history(bash的history 记录文件)&lt;/p&gt;
&lt;h2 id=&#34;网络相关问题-内网互联&#34;&gt;网络相关问题: 内网互联&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://segmentfault.com/a/1190000016556569&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;frp 和 nginx 搭建一个内网穿透服务器&lt;/a&gt;&lt;br&gt;
网络结构: 外网nginx -&amp;gt; 外网frp server &amp;lt;-&amp;gt; 内网frp client -&amp;gt; 内网web&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.anquanke.com/post/id/231424&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;内网渗透代理之frp的应用与改造（一）&lt;/a&gt;&lt;br&gt;
相关的&lt;a class=&#34;link&#34; href=&#34;https://github.com/mstxq17/FrpProPlugin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FrpProPlugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hostloc.com/forum.php?mod=viewthread&amp;amp;tid=820833&amp;amp;extra=&amp;amp;page=2&amp;amp;mobile=2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;(rinetd YYDS)socat居然比iptab效率高&lt;/a&gt;&lt;br&gt;
我映象比较深的就是 iptables frp nginx socat haproxy rinetd&lt;br&gt;
因为我是转发到rdp然后看油管，稍微卡顿都可以很明显的感觉出来。rinetd很流畅，haproxy和frp可以勉强用用，其它的都是战五渣。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.v2ex.com/t/567570&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;自认为比 frp 更好用的内网穿透工具 nps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里列举了一些比较好用的开源的内网穿透工具，详细介绍一下各个软件工具的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;frp&lt;br&gt;
FRP 功能完整，主要采用 GO 语言实现，重量级的工具，服务端界面样式风格一般。&lt;br&gt;
配置繁琐，不同的协议需要配置不同的参数，采用文件存放数据，不支持数据库管理数据。&lt;/li&gt;
&lt;li&gt;holer&lt;br&gt;
轻量级的内网穿透工具，holer 服务端采用 Java 语言实现，服务端界面漂亮简洁。&lt;br&gt;
Holer 客户端采用了 Java 语言和 GO 语言实现了两种版本，支持几乎所有的 OS 平台。&lt;br&gt;
用到流行的微服务框架 springboot 和 Java 网络框架 netty。&lt;br&gt;
配置很简单，针对所有 TCP 协议只需在客户端设置一个 holer access key 即可。&lt;br&gt;
采用 MySQL 数据库统一管理数据。&lt;/li&gt;
&lt;li&gt;nps&lt;br&gt;
轻量级的内网穿透工具，完全采用 GO 语言实现，服务端界面漂亮简洁。&lt;br&gt;
支持的协议最广泛，配置稍简单，采用文件存放数据，不支持数据库管理数据。&lt;/li&gt;
&lt;li&gt;lanproxy&lt;br&gt;
轻量级的内网穿透工具，客户端采用 GO 语言和 Java 语言实现两种版本，采用了 Java 网络框架 netty，服务端界面体验较差。&lt;br&gt;
配置稍繁琐，采用文件存放数据，不支持数据库管理数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.nasge.com/archives/48.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;内网穿透工具比较(ngrok,frp,lanproxy,goproxy,nps)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doubibackup.com/wkcjzpyd-2.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;关于目前 GFW(墙) 的封锁方式TCP封锁(阻断)猜想&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;问题-ubuntu采用docker官方shell安装时报错&#34;&gt;问题: ubuntu采用Docker官方shell安装时报错&lt;/h2&gt;
&lt;p&gt;报错信息如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# curl -fsSL &lt;a class=&#34;link&#34; href=&#34;https://get.docker.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://get.docker.com&lt;/a&gt; -o get-docker.sh&lt;br&gt;
# sh get-docker.sh&lt;br&gt;
# Executing docker install script, commit: 7cae5f8b0decc17d6571f9f52eb840fbc13b2737&lt;br&gt;
+ sh -c apt-get update -qq &amp;gt;/dev/null&lt;br&gt;
W: The repository &amp;lsquo;cdrom://Ubuntu-Server 16.04.6 LTS &lt;em&gt;Xenial Xerus&lt;/em&gt; - Release amd64 (20190226) xenial Release&amp;rsquo; does not have a Release file.&lt;br&gt;
E: Failed to fetch cdrom://Ubuntu-Server 16.04.6 LTS &lt;em&gt;Xenial Xerus&lt;/em&gt; - Release amd64 (20190226)/dists/xenial/main/binary-amd64/Packages  Please use apt-cdrom to make this CD-ROM recognized by APT. apt-get update cannot be used to add new CD-ROMs&lt;br&gt;
E: Some index files failed to download. They have been ignored, or old ones used instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;错误处理, 操作如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/apt/sources.list&lt;br&gt;
# 屏蔽掉有cdrom的那一行, 如下&lt;br&gt;
#deb cdrom:[Ubuntu-Server 16.04.6 LTS &lt;em&gt;Xenial Xerus&lt;/em&gt; - Release amd64 (20190226)]/ xenial main restricted&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考: &lt;a class=&#34;link&#34; href=&#34;https://linux.cn/article-5409-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何修复 apt-get update 无法添加新的 CD-ROM 的错误&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;问题-padavan路由作二级桥接无线路由时-系统时间混乱的问题处理&#34;&gt;问题: Padavan路由作二级桥接无线路由时, 系统时间混乱的问题处理&lt;/h2&gt;
&lt;p&gt;状态: 配置了NTP同步, 但无效&lt;br&gt;
原因: 可能是没有配置WAN造成的&lt;br&gt;
处理:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;手动:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# ntpd -t -p 192.168.1.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自动&lt;br&gt;
在&amp;quot;系统管理&amp;rdquo;-&amp;ldquo;服务&amp;quot;中修改&amp;quot;调度任务 (Crontab)&amp;rdquo;, 增加&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0 * * * * ntpd -t -p 192.168.1.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;让系统每小时都做一次时间同步.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux下-以指定用户身份执行&#34;&gt;Linux下, 以指定用户身份执行&lt;/h2&gt;
&lt;p&gt;例: # su - 用户名 -c &amp;ldquo;命令&amp;rdquo;&lt;br&gt;
如:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# su - user -c &amp;ldquo;whoami&amp;rdquo;&lt;br&gt;
user&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明: 以用户user身份执行whoami, 返回的用户身份是&amp;quot;user&amp;quot;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>联通(数码视讯)Q7盒子再刷Openwrt</title>
        <link>https://jimway71.github.io/p/%E8%81%94%E9%80%9A%E6%95%B0%E7%A0%81%E8%A7%86%E8%AE%AFq7%E7%9B%92%E5%AD%90%E5%86%8D%E5%88%B7openwrt/</link>
        <pubDate>Mon, 15 Mar 2021 00:49:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/%E8%81%94%E9%80%9A%E6%95%B0%E7%A0%81%E8%A7%86%E8%AE%AFq7%E7%9B%92%E5%AD%90%E5%86%8D%E5%88%B7openwrt/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-27.jpg" alt="Featured image of post 联通(数码视讯)Q7盒子再刷Openwrt" /&gt;&lt;h2 id=&#34;说明&#34;&gt;说明&lt;/h2&gt;
&lt;p&gt;联通(数码视讯)Q7盒子(以下简称Q7)做为一个电视盒子应该是没有什么可取之处, 但还可以做点别的, 比如, 做&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Openwrt&lt;/a&gt;盒子。&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/&#34;  title=&#34;恩山-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;恩山论坛&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;推出了&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4076037-1-1.html&#34;  title=&#34;多盒OP固件-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;55+、55+O S905x3、S922x、贝壳云、我家云、微加云等OP固件&amp;rdquo;&lt;/a&gt;, 是基于&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;amlogic(晶晨)&lt;/a&gt;的S9xx系列arm SOC的&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Openwrt&lt;/a&gt;固件, 现在支持包括基于amlogic(晶晨) S922x、S912、&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/196/index.html&#34;  title=&#34;S905X-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905x&lt;/a&gt;、s905x2、S905x3、S905d等多款SOC的盒子。&lt;br&gt;
但是, &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;的固件说明中, 并未明确指出对&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/414/index.html&#34;  title=&#34;S905L-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905L&lt;/a&gt;的支持, 而Q7用的SOC是&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/414/index.html&#34;  title=&#34;S905L-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905L&lt;/a&gt;。&lt;br&gt;
查到&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Amlogic&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;维基Amlogic&lt;/a&gt;说明中是这么说的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;Amlogic &lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/414/index.html&#34;  title=&#34;S905L-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905L&lt;/a&gt;: 与&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/196/index.html&#34;  title=&#34;S905X-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905X&lt;/a&gt;相似，不同之处在于它支持HDMI 2.0b，但缺少VP9解码，摄像头接口和TS输入。&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;按这种说法, &lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/414/index.html&#34;  title=&#34;S905L-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905L&lt;/a&gt;可能是和&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/196/index.html&#34;  title=&#34;S905X-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905X&lt;/a&gt;差不多, 支持&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/196/index.html&#34;  title=&#34;S905X-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905X&lt;/a&gt;应该就能支持&lt;a class=&#34;link&#34; href=&#34;https://www.amlogic.com/#Products/414/index.html&#34;  title=&#34;S905L-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;S905L&lt;/a&gt;, 那么Q7就应该能用。&lt;br&gt;
推论如此, 然后在网上找到了一个实例, &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/&#34;  title=&#34;恩山-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;恩山论坛&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-593965.html&#34;  title=&#34;len_-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Len_&lt;/a&gt;大侠在&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-3570786-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;联通北京数码Q7,S905L电视盒刷成了openwrt系统路由器&amp;rdquo;&lt;/a&gt;贴子里, 明确说明他已经成功完成了将Q7刷上了&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Openwrt&lt;/a&gt;, 虽然没有详细说明, 但从帖子里可以看出来大概是怎么做的, 那么, 就跟随&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-593965.html&#34;  title=&#34;len_-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Len_&lt;/a&gt;大侠, 让Q7废物利用吧。&lt;br&gt;
为了简单化(偷懒😁), 选用的是使用&lt;strong&gt;外接存储(U盘或TF卡)启动Q7&lt;/strong&gt;的方式。&lt;br&gt;
&lt;u&gt;Q7自带TF卡槽&lt;/u&gt;, 这倒是为数不多的优点之一。&lt;/p&gt;
&lt;h2 id=&#34;补充&#34;&gt;补充&lt;/h2&gt;
&lt;p&gt;在&lt;a class=&#34;link&#34; href=&#34;https://github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github&lt;/a&gt;上找了下&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;的源码,  感觉应该是这个: &lt;a class=&#34;link&#34; href=&#34;https://github.com/lllrrr/mknop&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lllrrr/mknop&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/tuanqing/mknop&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;tuanqing/mknop&lt;/a&gt;这个肯定是分支。&lt;br&gt;
另外, &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;还做了&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-958173-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker Openwrt&lt;/a&gt;, 看看里面引用的内核源代码来源:&lt;br&gt;
&lt;strong&gt;内核源码来源说明(两个平*的内核都来自各自最活跃的上游发布者)&lt;/strong&gt;&lt;br&gt;
Amlogic内核：  &lt;a class=&#34;link&#34; href=&#34;https://github.com/150balbes/Amlogic_s905-kernel&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/150balbes/Amlogic_s905-kernel&lt;/a&gt; （5.3.0）&lt;br&gt;
Rockchip内核:   &lt;a class=&#34;link&#34; href=&#34;https://github.com/ayufan-rock64/linux-mainline-kernel/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ayufan-rock64/linux-mainline-kernel/releases&lt;/a&gt;  （5.3.0）&lt;br&gt;
公版内核补丁： &lt;a class=&#34;link&#34; href=&#34;https://kernel.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://kernel.org&lt;/a&gt;  （当前最新5.3.6补丁）&lt;br&gt;
FullCone-Nat： &lt;a class=&#34;link&#34; href=&#34;https://github.com/Chion82/netfilter-full-cone-nat%20%20%20%20&amp;#43;%20%20952-net-conntrack-events-support-multiple-registrant.patch&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;netfilter-full-cone-nat    +  952-net-conntrack-events-support-multiple-registrant.patch&lt;/a&gt;&lt;br&gt;
(来自&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;openwrt&lt;/a&gt;源码)&lt;br&gt;
exfat:              &lt;a class=&#34;link&#34; href=&#34;https://github.com/dorimanx/exfat-nofuse&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/dorimanx/exfat-nofuse&lt;/a&gt;&lt;br&gt;
Wireguard:      &lt;a class=&#34;link&#34; href=&#34;https://git.zx2c4.com/WireGuard&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://git.zx2c4.com/WireGuard&lt;/a&gt;&lt;br&gt;
&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4076037-1-1.html&#34;  title=&#34;多盒OP固件-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;55+、55+O S905x3、S922x、贝壳云、我家云、微加云等OP固件&amp;rdquo;&lt;/a&gt; From &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-285101.html&#34;  title=&#34;flippy-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flippy大侠&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-3570786-1-1.html&#34;  title=&#34;S905L电视盒刷op-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;联通北京数码Q7,S905L电视盒刷成了openwrt系统路由器&amp;rdquo;&lt;/a&gt; From &lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-593965.html&#34;  title=&#34;len_-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Len_&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;所需工具及软件&#34;&gt;所需工具及软件&lt;/h2&gt;
&lt;p&gt;说明: 可以使用U盘或TF卡启动, SD卡没准也可以。 这里使用的是TF卡。&lt;br&gt;
除了&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/%e8%81%94%e9%80%9a%e6%95%b0%e7%a0%81%e8%a7%86%e8%ae%afq7%e7%94%b5%e8%a7%86%e7%9b%92%e5%ad%90%e5%88%b7%e6%9c%ba%e6%88%90%e5%8a%9f-%e4%bd%86%e8%bf%99q7%e7%9b%92%e5%ad%90%e6%98%af%e7%9c%9f%e7%9a%84%e5%9e%83%e5%9c%be/&#34;  title=&#34;Q7盒子垃圾-&amp;gt;&#34;
    &gt;&amp;ldquo;联通(数码视讯)Q7电视盒子刷机成功, 但这Q7盒子是真的垃圾!&amp;rdquo;&lt;/a&gt;帖子中所用的工具及软件外, 还需要用到:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4G或以上大小的TF卡 + 读卡器&lt;br&gt;
用于制做盒子启动盘(TF卡)。&lt;/li&gt;
&lt;li&gt;镜像写入U盘工具&lt;br&gt;
用于把固件镜像文件写到TF卡里。&lt;br&gt;
Windows上这类工具很多, 选用的是&lt;a class=&#34;link&#34; href=&#34;https://www.alexpage.de/download/usbit/usbit.zip&#34;  title=&#34;USB Image Tool-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;USB Image Tool&lt;/a&gt;, 绿色软件, 不需要安装。&lt;/li&gt;
&lt;li&gt;安卓调试工具&lt;a class=&#34;link&#34; href=&#34;https://dl.google.com/android/repository/platform-tools_r31.0.0-windows.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ADB&lt;/a&gt;&lt;br&gt;
用于设置Q7从TF卡启动。&lt;/li&gt;
&lt;li&gt;下载&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/thread-4076037-1-1.html&#34;  title=&#34;多盒OP固件-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;55+、55+O S905x3、S922x、贝壳云、我家云、微加云等OP固件&amp;rdquo;&lt;/a&gt;文中所附的固件包。&lt;br&gt;
用的是目录&amp;quot;N1-Openwrt_U盘直刷包&amp;quot;下的最新固件包, 当前是:&lt;br&gt;
&amp;ldquo;openwrt_s905d_n1_R21.2.1_k5.4.105-flippy-55+o.7z&amp;rdquo;&lt;br&gt;
解开压缩文件, 其中&amp;quot;openwrt_s905d_n1_R21.2.1_k5.4.105-flippy-55+o.img&amp;quot;就是要用的固件包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;刷机流程&#34;&gt;刷机流程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;破解Q7&lt;br&gt;
按照&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/%e8%81%94%e9%80%9a%e6%95%b0%e7%a0%81%e8%a7%86%e8%ae%afq7%e7%94%b5%e8%a7%86%e7%9b%92%e5%ad%90%e5%88%b7%e6%9c%ba%e6%88%90%e5%8a%9f-%e4%bd%86%e8%bf%99q7%e7%9b%92%e5%ad%90%e6%98%af%e7%9c%9f%e7%9a%84%e5%9e%83%e5%9c%be/&#34;  title=&#34;Q7盒子垃圾-&amp;gt;&#34;
    &gt;&amp;ldquo;联通(数码视讯)Q7电视盒子刷机成功, 但这Q7盒子是真的垃圾!&amp;rdquo;&lt;/a&gt;帖子的做法, 破解Q7.&lt;br&gt;
按&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/&#34;  title=&#34;恩山-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;恩山论坛&lt;/a&gt;的&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-593965.html&#34;  title=&#34;len_-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Len_&lt;/a&gt;大侠的说法, &amp;ldquo;Q7需要刷过第三方固件才能确定能从卡和U盘启动&amp;rdquo;, 而Q7原厂固件无法确定能做到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;del&gt;打开Q7的USB调试功能。(大概操作, 跟安卓手机也差不多)&lt;/del&gt;&lt;br&gt;
&lt;del&gt;正常打开Q7, 按正常方式使用遥控器操作, 进入&amp;quot;设置&amp;quot;(类似安卓的设置界面), 找到&amp;quot;关于设备&amp;quot;-&amp;ldquo;版本号&amp;rdquo;, 连续点击版本号很多次, 可能是十次, 也可能是七次, 试吧&amp;hellip;&lt;/del&gt;&lt;br&gt;
&lt;del&gt;然后退回&amp;quot;设置&amp;quot;界面, 就出现&amp;quot;开发者选项&amp;quot;, 进去就可以找到&amp;quot;USB调试&amp;quot;, 然后打开&amp;quot;USB调试&amp;quot;。&lt;/del&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;制作启动TF卡&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择镜像文件&lt;br&gt;
按&lt;a class=&#34;link&#34; href=&#34;https://www.right.com.cn/forum/space-uid-593965.html&#34;  title=&#34;len_-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Len_&lt;/a&gt;大侠的说法, 在目录&amp;quot;N1-Openwrt_U盘直刷包&amp;quot;下的包都可以刷, 选了最新的55+o版本, 文件是&amp;quot;openwrt_s905d_n1_R21.2.1_k5.4.105-flippy-55+o.7z&amp;quot;, 解压出&amp;quot;openwrt_s905d_n1_R21.2.1_k5.4.105-flippy-55+o.img&amp;quot;文件。&lt;/li&gt;
&lt;li&gt;用镜像写入U盘工具&lt;a class=&#34;link&#34; href=&#34;https://www.alexpage.de/download/usbit/usbit.zip&#34;  title=&#34;USB Image Tool-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;USB Image Tool&lt;/a&gt;把img文件写到TF卡里&lt;/li&gt;
&lt;li&gt;修改TF卡根目录下的&amp;quot;uEnv.txt&amp;quot;文件, 如下图:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/27-q7-01.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;uEnv.txt&#34;
	
	
&gt;
即FDT要改为p212这个dtb文件(这个文件要确认在tf卡相应的目录下存在)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;del&gt;把TF卡插入到Q7的TF卡槽中, 使用ADB工具, 设置Q7从TF卡启动&lt;/del&gt;&lt;br&gt;
&lt;del&gt;连接Q7:&lt;/del&gt;~~&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;# adb connect Q7地址&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;查看连接状态:&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;# adb devices&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;重启Q7, 并设置成用cf卡或U盘等外围存储设备启动&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;# adb shell reboot update&lt;/del&gt;&lt;br&gt;
&lt;del&gt;(上面这个命令需要确认)&lt;/del&gt;&lt;br&gt;
&lt;del&gt;正常的话, 会重新从TF卡启动系统。&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从做好的TF卡启动盒子&lt;br&gt;
正常启动盒子, 进入电视盒子界面.&lt;br&gt;
下载&lt;a class=&#34;link&#34; href=&#34;https://apkpure.com/reboot-to-libreelec/me.thomastv.rebootupdate&#34;  title=&#34;Reboot to LibreELEC-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;Reboot to LibreELEC&amp;rdquo;&lt;/a&gt;, 这个apk设置系统首先从外部存储设备启动, 比如TF卡, 或者U盘.&lt;br&gt;
在盒子的界面上, 安装&lt;a class=&#34;link&#34; href=&#34;https://apkpure.com/reboot-to-libreelec/me.thomastv.rebootupdate&#34;  title=&#34;Reboot to LibreELEC-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;Reboot to LibreELEC&amp;rdquo;&lt;/a&gt;这个应用, 安装完成后运行这个APK, 并选择&amp;quot;ok&amp;quot;&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/27-q7-02.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;uEnv.txt&#34;
	
	
&gt;&lt;br&gt;
正常情况下, 如果有外置存储设备可以启动, 则从外置存储设备启动,否则从内部的存储设备启动.&lt;br&gt;
比如, 插入了刷好固件的TF卡, 就会从TF卡启动, 运行openwrt; 如果没有, 就正常启动, 进入电视盒子界面.&lt;br&gt;
&lt;u&gt;但是, Q7这个盒子比较奇葩, 如果设置好了能从TF卡启动, 那么就只能从TF卡启动, 不插TF卡时会死在第一屏界面.&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把系统安装到内部存储&lt;br&gt;
系统里有提供安装工具(shell), 是/root/install-to-emmc.sh&lt;br&gt;
如果有需要可以使用这个shell将系统装入内部存储&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;完成后启动openwrt&#34;&gt;完成后启动&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Openwrt&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;使用tf卡启动, 成功地在Q7上运行了&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/&#34;  title=&#34;Openwrt-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;openwrt&lt;/a&gt;.&lt;br&gt;
openwrt缺省地址: 192.168.1.1, 缺省用户/密码: root/password&lt;br&gt;
但是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不能设置wifi&lt;br&gt;
可能是无线网卡不能正常驱动。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用图片&#34;&gt;使用图片&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://jimway71.github.io/img/27-q7-03.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;uEnv.txt&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;补充: 关于移动魔百盒R3300L(红)&lt;br&gt;
可以使用给Q7做的启动盘(TF卡)启动.&lt;br&gt;
用&lt;a class=&#34;link&#34; href=&#34;https://apkpure.com/reboot-to-libreelec/me.thomastv.rebootupdate&#34;  title=&#34;Reboot to LibreELEC-&amp;gt;&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;Reboot to LibreELEC&amp;rdquo;&lt;/a&gt;可以正常工作, 插卡从卡启动, 不插卡正常启动.&lt;br&gt;
用CoreMark测试分数比Q7略低, 差得并不多.&lt;br&gt;
R3300L和Q7内部配置基本一致，甚至包括芯片组:
&lt;ul&gt;
&lt;li&gt;相同的CPU,&lt;/li&gt;
&lt;li&gt;相同的wifi芯片,&lt;/li&gt;
&lt;li&gt;相同的内存+存储配置,&lt;/li&gt;
&lt;li&gt;壳子都是卡扣结构,&lt;/li&gt;
&lt;li&gt;都能从usb口给盒子供电，不受电源开关控制,&lt;/li&gt;
&lt;li&gt;都有tf卡槽。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他&#34;&gt;其他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关于TF卡的大小&lt;br&gt;
前面说过, TF卡要&amp;gt;4G。&lt;br&gt;
但是, 从使用情况看，TF卡仅有不到1G的空间分给了Openwrt要用的两个分区, 其中有一个是启动分区, 其它的空间都是空的。&lt;br&gt;
所以, 估计1G的TF卡也都能用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于Q7的供电&lt;br&gt;
帖子&lt;a class=&#34;link&#34; href=&#34;https://jimway71.github.io/p/%e8%81%94%e9%80%9a%e6%95%b0%e7%a0%81%e8%a7%86%e8%ae%afq7%e7%94%b5%e8%a7%86%e7%9b%92%e5%ad%90%e5%88%b7%e6%9c%ba%e6%88%90%e5%8a%9f-%e4%bd%86%e8%bf%99q7%e7%9b%92%e5%ad%90%e6%98%af%e7%9c%9f%e7%9a%84%e5%9e%83%e5%9c%be/&#34;  title=&#34;Q7盒子垃圾-&amp;gt;&#34;
    &gt;&amp;ldquo;联通(数码视讯)Q7电视盒子刷机成功, 但这Q7盒子是真的垃圾!&amp;rdquo;&lt;/a&gt;里面说过, Q7可以直接用USB端口的供电启动, 所以可以从别的设备的USB给Q7供电, 至少还可以少占一个电源插座。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CPUMark 测速&lt;br&gt;
命令如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# /etc/coremark.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;测速完成后, 在Luci管理界面, &amp;ldquo;状态&amp;rdquo;-&amp;ldquo;概览&amp;quot;里可以看到CpuMark值&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;再补充---关于网络共享服务&#34;&gt;再补充 - 关于网络共享服务&lt;/h2&gt;
&lt;p&gt;Openwrt中有提供多种网络存储服务, 包括Samba/NFS/miniDLNA/可道云/微力同步等多种相关功能。&lt;br&gt;
在给Q7刷Openwrt后, 还通过配置Samba+miniDLNA, 设置了一个简单的网络共享服务+多媒体服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;设置Sabmba服务&lt;br&gt;
操作如下:&lt;br&gt;
Luci界面-网络存储-&amp;ldquo;Samba&amp;rdquo;-&amp;ldquo;编辑模板&amp;quot;里改配置文件(没搞懂原因), 关掉&amp;quot;invalid users = root&amp;quot;这行&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;## set invalid users&lt;br&gt;
#invalid users = root&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设置共享目录&lt;br&gt;
设置如图:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/27-q7-04.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Samba设置&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;现象:&lt;br&gt;
用手机上有EsExplorer连接上后(当前也就只有手机能连上), 看不到共享的文件目录&lt;br&gt;
原因: 管理界面里共享目录的设置并没有生效, 还是需要手动修改配置文件&amp;rdquo;/etc/samba/smb.conf&amp;quot;进行设置(已确认重启后有效)&lt;br&gt;
但是, &amp;ldquo;Samba&amp;rdquo;-&amp;ldquo;编辑模板&amp;quot;却是有效的, 而且进入linux界面操作, 直接修改/etc/samba/smb.conf的相应内容却无效!~~~ 必须使用管理界面的&amp;quot;编译模板&amp;quot;进行修改!&lt;br&gt;
即: 改模板必须在&amp;quot;Samba&amp;rdquo;-&amp;ldquo;编辑模板&amp;quot;里, 改共享目录配置必须直接改&amp;rdquo;/etc/samba/smb.conf&amp;quot;文件&lt;br&gt;
处理:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# vim /etc/samba/smb.conf&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在文件最后面增加如下配置:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[Udisk]&lt;br&gt;
path = /mnt/mmcblk1p3&lt;br&gt;
create mask = 0777&lt;br&gt;
read only = no&lt;br&gt;
guest ok = yes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如图所示:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/27-q7-05.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Samba设置&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;然后重启samba服务:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# service samba4 restart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用smbclient查看共享的情况:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# smbclient -L 192.168.1.206&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;会看到已经成功共享, 如图:&lt;br&gt;
&lt;img src=&#34;https://jimway71.github.io/img/27-q7-06.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Samba设置&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;注意:&lt;br&gt;
还需要对共享出的根目录权限做设置, 才能有读写全部权限&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# chmod 0777 /mnt/mmcblk1p3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置miniDLNA&lt;br&gt;
在X信电视上发现X信的媒体中心支持DLNA, 而Q7上的Openwrt里, &amp;ldquo;网络存储&amp;quot;下是有miniDLNA服务, 设置比较简单, 基本上是设置下目录, 打开功能就可以了。&lt;br&gt;
经过测试, 在X信电视上用自带的媒体中心可以播放视频、音频、图片等多种媒体, 还可以关屏幕播放mp3音乐。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But&amp;hellip;到最后, 重启Q7后, openwrt的Luci界面出错了, 进不了管理界面, 就此, 折腾Q7告一段落。
总结: Openwrt的SAMBA功能大致能用, miniDLNA功能也没问题, 都可以用。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>WSL下编译LEDE的openwrt, 用于斐讯K2</title>
        <link>https://jimway71.github.io/p/wsl%E4%B8%8B%E7%BC%96%E8%AF%91lede%E7%9A%84openwrt-%E7%94%A8%E4%BA%8E%E6%96%90%E8%AE%AFk2/</link>
        <pubDate>Mon, 01 Jun 2020 01:06:16 +0800</pubDate>
        
        <guid>https://jimway71.github.io/p/wsl%E4%B8%8B%E7%BC%96%E8%AF%91lede%E7%9A%84openwrt-%E7%94%A8%E4%BA%8E%E6%96%90%E8%AE%AFk2/</guid>
        <description>&lt;img src="https://jimway71.github.io/wallpaper/wallpaper-22.jpg" alt="Featured image of post WSL下编译LEDE的openwrt, 用于斐讯K2" /&gt;&lt;p&gt;2020.6.1&lt;/p&gt;
&lt;h3 id=&#34;openwrt编译命令汇总&#34;&gt;Openwrt编译命令汇总:&lt;/h3&gt;
&lt;p&gt;开始编译:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get update  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git clone https://github.com/coolsnowwolf/lede  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ./lede  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ vim feeds.conf.default  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ./scripts/feeds update -a  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ./scripts/feeds install -a  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make menuconfig  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在make menuconfig中:&lt;br&gt;
选择: MediaTek Ralink MIPS / MT7620 based boards /Phicomm PSG128 rev.Ax&amp;quot;&lt;br&gt;
选择: Luci _ Application _ SSR PLUS&amp;hellip;&amp;quot;&lt;br&gt;
说明: 斐讯K2路由器, CPU型号为MT7620, 芯片架构为MIPS, 路由器型号为PSG1218 rev.Ax; K1 是 PSG1208,K2 是 PSG1218 rev.Ax, K2C是PSG1218 rev.Bx&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Target system -&amp;gt; MediaTek Ralink MIPS  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Subtarget -&amp;gt; MT7620 based boards  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Target Profile -&amp;gt; Phicomm PSG128 rev.Ax  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;继续编译:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make -j8 download &lt;span class=&#34;nv&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;s  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make -j15 &lt;span class=&#34;nv&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;s  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;由于空间不够，luci-&amp;gt;application留下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;accesscontrol  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- adbyby-plus  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;arpbind  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autoreboot  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- ddns  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;firewall  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;flowoffload  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- nlbwmon 流量监控  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ramfree  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssr_plus + trojan  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;upnp  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(因为不能保存配置, 再去掉IPV6支持)  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不知道为什么, 内网的网段(ip)不能成功修改, 每次改过后, 路由就不能保存(或者会丢失)修改的内容: 需要在编译的时候就改掉这个地址。&lt;br&gt;
位于: ./package/base-files/files/bin/config_generate&lt;br&gt;
在make menuconfig完成后修改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于用WSL代替虚拟机运行Ubuntu:&lt;br&gt;
当前WSL上Ubuntu最早版本是18.04LTS(16.04LTS已经没有了)，最新的是20.04LTS&lt;br&gt;
用WSL比较简单, 不用费劲去安装, 但移动虚拟机会很麻烦。这个问题可以参考:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在系统重置或重新安装之前，如何备份（WSL）Windows 10的Linux子系统: &lt;br&gt;
Windows 10 v1903 包含内置的WSL导出/导入命令。具体来说，wsl &amp;ndash;export会产生tar和wsl &amp;ndash;import，并会导入先前导出的tar。然后，您可以在计算机之间移动此文件。 您还可以使用指定stdin / stdout -，这应允许您直接转移到另一台计算机并使用远程shell（如）导入ssh。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;错误处理&#34;&gt;错误处理:&lt;/h3&gt;
&lt;p&gt;1 sudo apt-get install gcc-multilib g++-multilib&lt;br&gt;
原因：type_traits:38:10: fatal error: bits/c++config.h: No such file or directory&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/4643197/missing-include-bits-cconfig-h-when-cross-compiling-64-bit-program-on-32-bit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/questions/4643197/missing-include-bits-cconfig-h-when-cross-compiling-64-bit-program-on-32-bit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 sudo apt install qtchooser&lt;br&gt;
原因: File &amp;ldquo;/usr/lib/python2.7/subprocess.py&amp;rdquo;, line 1047, in _execute_child&lt;br&gt;
参考: &lt;a class=&#34;link&#34; href=&#34;https://github.com/kovidgoyal/build-calibre/issues/9&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/kovidgoyal/build-calibre/issues/9&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;编译时长记录&#34;&gt;编译时长记录:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在Google云主机(e2-standard-8（8 个 vCPU，32 GB 内存), 30GSSD硬盘, Ubuntu 16.04)上完成，最后编译用了7个线程，总共用时不到1小时&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://mianao.info/2020/05/05/%E7%BC%96%E8%AF%91%E6%9B%B4%E6%96%B0OpenWrt-PassWall%E5%92%8CSSR-plus%E6%8F%92%E4%BB%B6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;编译更新OpenWrt PassWall和SSR-plus插件&lt;/a&gt; From &lt;a class=&#34;link&#34; href=&#34;https://mianao.info/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mianao&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/coolsnowwolf/lede&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Lean 的 Openwrt 源码仓库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
